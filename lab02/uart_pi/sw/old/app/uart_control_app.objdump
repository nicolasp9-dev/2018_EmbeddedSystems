
uart_control_app.elf:     file format elf32-littlenios2
uart_control_app.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0000f750 memsz 0x0000f750 flags r-x
    LOAD off    0x00010770 vaddr 0x0002f770 paddr 0x0003125c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012d48 vaddr 0x00032d48 paddr 0x00032d48 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f1b0  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000037c  0002f3f4  0002f3f4  000103f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0002f770  0003125c  00010770  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00032d48  00032d48  00012d48  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00032ea8  00032ea8  0001225c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001225c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e78  00000000  00000000  00012280  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022a6b  00000000  00000000  000130f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008ced  00000000  00000000  00035b63  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000afb9  00000000  00000000  0003e850  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002038  00000000  00000000  0004980c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003740  00000000  00000000  0004b844  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  0004ef84  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000667ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00066820  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006b192  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006b195  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006b1a1  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006b1a2  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006b1a3  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006b1a7  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006b1ab  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0006b1af  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0006b1ba  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0006b1c5  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000006  00000000  00000000  0006b1d0  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002c  00000000  00000000  0006b1d6  2**0
                  CONTENTS, READONLY
 29 .jdi          000068df  00000000  00000000  0006b202  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003c509  00000000  00000000  00071ae1  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0002f3f4 l    d  .rodata	00000000 .rodata
0002f770 l    d  .rwdata	00000000 .rwdata
00032d48 l    d  .bss	00000000 .bss
00032ea8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 Z:/embedded_systems/lab02/uart_pi/sw/nios//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 uartDrivers.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002f4b6 l     O .rodata	00000010 zeroes.4404
00022a88 l     F .text	000000bc __sbprintf
0002f4c6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022c98 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000247c8 l     F .text	00000008 __fp_unlock
000247dc l     F .text	0000019c __sinit.part.1
00024978 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0002f770 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0002fbb4 l     O .rwdata	00000020 lc_ctype_charset
0002fb94 l     O .rwdata	00000020 lc_message_charset
0002fbd4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002f4f8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027d74 l     F .text	000000fc __sprint_r.part.0
0002f62c l     O .rodata	00000010 blanks.4348
0002f61c l     O .rodata	00000010 zeroes.4349
00029300 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002cfbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d0c8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d0f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d1e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d2c0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d3ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0003124c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002d694 l     F .text	00000034 alt_dev_reg
000301bc l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002d970 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002db7c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002e328 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002e79c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002e8dc l     F .text	0000003c alt_get_errno
0002e918 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00032d7c g     O .bss	00000004 alt_instruction_exception_handler
000273b8 g     F .text	00000074 _mprec_log10
000274a4 g     F .text	0000008c __any_on
0002989c g     F .text	00000054 _isatty_r
0002f504 g     O .rodata	00000028 __mprec_tinytens
0002d4bc g     F .text	0000007c alt_main
00020708 g     F .text	000000c0 _puts_r
00032da8 g     O .bss	00000100 alt_irq
000298f0 g     F .text	00000060 _lseek_r
0003125c g       *ABS*	00000000 __flash_rwdata_start
0002bae8 g     F .text	00000088 .hidden __eqdf2
00032ea8 g       *ABS*	00000000 __alt_heap_start
000206cc g     F .text	0000003c printf
00029b08 g     F .text	0000009c _wcrtomb_r
00027c34 g     F .text	0000005c __sseek
00024b18 g     F .text	00000010 __sinit
000299b0 g     F .text	00000140 __swbuf_r
000255e0 g     F .text	0000007c _setlocale_r
00024980 g     F .text	00000068 __sfmoreglue
0002d55c g     F .text	00000024 __malloc_unlock
000262b0 g     F .text	0000015c memmove
00024b00 g     F .text	00000018 _cleanup
00026534 g     F .text	000000a8 _Balloc
0002bb70 g     F .text	000000dc .hidden __gtdf2
0002ecd4 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
00029840 g     F .text	0000005c _fstat_r
00032d60 g     O .bss	00000004 errno
00027bb0 g     F .text	00000008 __seofread
00032d68 g     O .bss	00000004 alt_argv
0003921c g       *ABS*	00000000 _gp
0003003c g     O .rwdata	00000180 alt_fd_list
0002ecf8 g     F .text	00000090 alt_find_dev
00026168 g     F .text	00000148 memcpy
000247d0 g     F .text	0000000c _cleanup_r
0002cdd4 g     F .text	000000dc .hidden __floatsidf
0002e860 g     F .text	0000007c alt_io_redirect
0002bc4c g     F .text	000000f4 .hidden __ltdf2
0002f3f4 g       *ABS*	00000000 __DTOR_END__
000207c8 g     F .text	00000014 puts
0002efc4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00027a94 g     F .text	00000074 __fpclassifyd
00027314 g     F .text	000000a4 __ratio
000292e4 g     F .text	0000001c __vfiprintf_internal
0002dd74 g     F .text	0000021c altera_avalon_jtag_uart_read
0002069c g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002a898 g     F .text	00000064 .hidden __udivsi3
0002d21c g     F .text	000000a4 isatty
0002f554 g     O .rodata	000000c8 __mprec_tens
0002565c g     F .text	0000000c __locale_charset
0002ef34 g     F .text	00000090 alt_icache_flush
00032d5c g     O .bss	00000004 __malloc_top_pad
00031224 g     O .rwdata	00000004 __mb_cur_max
0002568c g     F .text	0000000c _localeconv_r
00026940 g     F .text	0000003c __i2b
00024f9c g     F .text	000004bc __sfvwrite_r
00027b08 g     F .text	00000054 _sbrk_r
00020410 g     F .text	00000044 writeString
00029950 g     F .text	00000060 _read_r
00031244 g     O .rwdata	00000004 alt_max_fd
00029534 g     F .text	000000f0 _fclose_r
00024798 g     F .text	00000030 fflush
00032d58 g     O .bss	00000004 __malloc_max_sbrked_mem
0002047c g     F .text	00000098 setupWithNumber
0002a954 g     F .text	000008ac .hidden __adddf3
000270bc g     F .text	0000010c __b2d
0002a268 g     F .text	00000538 .hidden __umoddi3
0002d3e8 g     F .text	000000d4 lseek
0003121c g     O .rwdata	00000004 _global_impure_ptr
00027530 g     F .text	00000564 _realloc_r
00032ea8 g       *ABS*	00000000 __bss_end
0002e6ac g     F .text	000000f0 alt_iic_isr_register
0002ebcc g     F .text	00000108 alt_tick
00029cf0 g     F .text	00000578 .hidden __udivdi3
0002979c g     F .text	00000024 _fputwc_r
0002f52c g     O .rodata	00000028 __mprec_bigtens
00026724 g     F .text	00000104 __s2b
0002ceb0 g     F .text	000000a8 .hidden __floatunsidf
00026dfc g     F .text	00000060 __mcmp
00024b38 g     F .text	00000018 __fp_lock_all
0002e660 g     F .text	0000004c alt_ic_irq_enabled
0002eb30 g     F .text	0000009c alt_alarm_stop
00032d70 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
00030014 g     O .rwdata	00000028 alt_dev_null
0002e2e0 g     F .text	00000048 alt_dcache_flush_all
00026828 g     F .text	00000068 __hi0bits
0002cd54 g     F .text	00000080 .hidden __fixdfsi
0003125c g       *ABS*	00000000 __ram_rwdata_end
0003123c g     O .rwdata	00000008 alt_dev_list
000203a0 g     F .text	00000070 write
0002f770 g       *ABS*	00000000 __ram_rodata_end
0002d130 g     F .text	000000b0 fstat
0002bc4c g     F .text	000000f4 .hidden __ledf2
00026b74 g     F .text	00000140 __pow5mult
00027e88 g     F .text	0000145c ___vfiprintf_internal_r
00032d50 g     O .bss	00000004 __nlocale_changed
0002a8fc g     F .text	00000058 .hidden __umodsi3
00032ea8 g       *ABS*	00000000 end
0002d8b0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0002f3f4 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002cf58 g     F .text	00000064 .hidden __clzsi2
0002df90 g     F .text	00000224 altera_avalon_jtag_uart_write
00024b28 g     F .text	00000004 __sfp_lock_acquire
00026084 g     F .text	000000e4 memchr
00020874 g     F .text	000021f8 ___vfprintf_internal_r
00024c8c g     F .text	00000310 _free_r
00025668 g     F .text	00000010 __locale_mb_cur_max
0002f240 g     F .text	00000180 __call_exitprocs
00032d4c g     O .bss	00000004 __mlocale_changed
00031228 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00032d74 g     O .bss	00000004 _alt_tick_rate
00026cb4 g     F .text	00000148 __lshift
00032d78 g     O .bss	00000004 _alt_nticks
000202d8 g     F .text	000000c8 read
0002d700 g     F .text	0000004c alt_sys_init
0002f128 g     F .text	00000118 __register_exitproc
0002697c g     F .text	000001f8 __multiply
0002dc1c g     F .text	00000068 altera_avalon_jtag_uart_close
0002f770 g       *ABS*	00000000 __ram_rwdata_start
0002f3f4 g       *ABS*	00000000 __ram_rodata_start
00032d80 g     O .bss	00000028 __malloc_current_mallinfo
000271c8 g     F .text	0000014c __d2b
0002d74c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002ee90 g     F .text	000000a4 alt_get_fd
0002941c g     F .text	00000054 _close_r
0002f0ac g     F .text	0000007c memcmp
0002d80c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00032ea8 g       *ABS*	00000000 __alt_stack_base
0002d85c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00022b44 g     F .text	00000154 __swsetup_r
0002b200 g     F .text	000008e8 .hidden __divdf3
000249e8 g     F .text	00000118 __sfp
0002742c g     F .text	00000078 __copybits
0002fc0c g     O .rwdata	00000408 __malloc_av_
00024b34 g     F .text	00000004 __sinit_lock_release
0002bd40 g     F .text	00000718 .hidden __muldf3
00027b5c g     F .text	00000054 __sread
0002ed88 g     F .text	00000108 alt_find_file
0002e364 g     F .text	000000a4 alt_dev_llist_insert
0002d538 g     F .text	00000024 __malloc_lock
0002d5e4 g     F .text	000000b0 sbrk
0002473c g     F .text	0000005c _fflush_r
00029470 g     F .text	000000c4 _calloc_r
00032d48 g       *ABS*	00000000 __bss_start
0002640c g     F .text	00000128 memset
00020290 g     F .text	00000048 main
00032d6c g     O .bss	00000004 alt_envp
00032d54 g     O .bss	00000004 __malloc_max_total_mem
0002d7ac g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029af0 g     F .text	00000018 __swbuf
00027c90 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00029624 g     F .text	00000014 fclose
00022e98 g     F .text	00001688 _dtoa_r
00025878 g     F .text	0000080c _malloc_r
00029c64 g     F .text	00000030 __ascii_wctomb
00031248 g     O .rwdata	00000004 alt_errno
00025458 g     F .text	000000c4 _fwalk
0002a7a0 g     F .text	00000084 .hidden __divsi3
00024b68 g     F .text	00000124 _malloc_trim_r
0002f3f4 g       *ABS*	00000000 __CTOR_END__
00027c98 g     F .text	000000dc strcmp
0002f3f4 g       *ABS*	00000000 __flash_rodata_start
0002f3f4 g       *ABS*	00000000 __DTOR_LIST__
0002bae8 g     F .text	00000088 .hidden __nedf2
0002d6c8 g     F .text	00000038 alt_irq_init
0002d580 g     F .text	00000064 alt_release_fd
0002f63c g     O .rodata	00000100 .hidden __clz_tab
00032d48 g     O .bss	00000004 _PathLocale
0002f060 g     F .text	00000014 atexit
000293bc g     F .text	00000060 _write_r
00025698 g     F .text	00000018 setlocale
00031220 g     O .rwdata	00000004 _impure_ptr
00032d64 g     O .bss	00000004 alt_argc
00024520 g     F .text	0000021c __sflush_r
0002e468 g     F .text	00000060 _do_dtors
00025684 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00027058 g     F .text	00000064 __ulp
00024b50 g     F .text	00000018 __fp_unlock_all
00020514 g     F .text	00000188 setup
00031234 g     O .rwdata	00000008 alt_fs_list
00020454 g     F .text	00000028 canRead
00020020 g       *ABS*	00000000 __ram_exceptions_start
000256b0 g     F .text	0000000c localeconv
0002e4fc g     F .text	00000050 alt_ic_isr_register
0003125c g       *ABS*	00000000 _edata
00032ea8 g       *ABS*	00000000 _end
00029638 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002dc84 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002e5d4 g     F .text	0000008c alt_ic_irq_disable
00027bb8 g     F .text	0000007c __swrite
0003122c g     O .rwdata	00000004 __malloc_trim_threshold
00025678 g     F .text	0000000c __locale_msgcharset
0002f074 g     F .text	00000038 exit
0002551c g     F .text	000000c4 _fwalk_reent
00026e5c g     F .text	000001fc __mdiff
0002a824 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024b2c g     F .text	00000004 __sfp_lock_release
0002f3c0 g     F .text	00000034 _exit
0002e1b4 g     F .text	0000012c alt_alarm_start
000256bc g     F .text	000001bc __smakebuf_r
000207dc g     F .text	00000098 strlen
0002e9dc g     F .text	00000154 open
0002bb70 g     F .text	000000dc .hidden __gedf2
00031230 g     O .rwdata	00000004 __wctomb
00027e70 g     F .text	00000018 __sprint_r
0002e4c8 g     F .text	00000034 alt_icache_flush_all
00031250 g     O .rwdata	00000004 alt_priority_mask
0002e54c g     F .text	00000088 alt_ic_irq_enable
00022a6c g     F .text	0000001c __vfprintf_internal
00029c94 g     F .text	0000005c _wctomb_r
0002c458 g     F .text	000008fc .hidden __subdf3
00026890 g     F .text	000000b0 __lo0bits
00031254 g     O .rwdata	00000008 alt_alarm_list
0002e408 g     F .text	00000060 _do_ctors
00029ba4 g     F .text	000000c0 wcrtomb
0002cff8 g     F .text	000000d0 close
0002d328 g     F .text	00000084 alt_load
000297c0 g     F .text	00000080 fputwc
00024b30 g     F .text	00000004 __sinit_lock_acquire
00026604 g     F .text	00000120 __multadd
000265dc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108b6a04 	addi	r2,r2,11688
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108b6a04 	addi	r2,r2,11688
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6d817 	ldw	r2,-25760(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6d817 	ldw	r2,-25760(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6a48714 	ori	gp,gp,37404
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	108b5214 	ori	r2,r2,11592

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18cbaa14 	ori	r3,r3,11944

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002d3280 	call	2d328 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002d4bc0 	call	2d4bc <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <main>:
#include "system.h"
#include "io.h"


int main()
{
   20290:	defffd04 	addi	sp,sp,-12
   20294:	dfc00215 	stw	ra,8(sp)
   20298:	df000115 	stw	fp,4(sp)
   2029c:	df000104 	addi	fp,sp,4
	printf("Loading of the program");
   202a0:	010000f4 	movhi	r4,3
   202a4:	213cfd04 	addi	r4,r4,-3084
   202a8:	00206cc0 	call	206cc <printf>
        pointer = 0;
        while(pointer < strlen(string)){
            IOWR_32DIRECT(HOMEMADE_UART_BASE, (2<<2),string[pointer]);
            pointer++;
        }*/
		int i = 0;
   202ac:	e03fff15 	stw	zero,-4(fp)
        for(i = 0; i < 100000; i++);
   202b0:	e03fff15 	stw	zero,-4(fp)
   202b4:	00000306 	br	202c4 <main+0x34>
   202b8:	e0bfff17 	ldw	r2,-4(fp)
   202bc:	10800044 	addi	r2,r2,1
   202c0:	e0bfff15 	stw	r2,-4(fp)
   202c4:	e0ffff17 	ldw	r3,-4(fp)
   202c8:	008000b4 	movhi	r2,2
   202cc:	10a1a7c4 	addi	r2,r2,-31073
   202d0:	10fff90e 	bge	r2,r3,202b8 <__alt_data_end+0xfffe02b8>

    }
   202d4:	003ff506 	br	202ac <__alt_data_end+0xfffe02ac>

000202d8 <read>:
#include <string.h>
#include "system.h"
#include "io.h"


int read(char * values, int numberMaxToRead){
   202d8:	defffb04 	addi	sp,sp,-20
   202dc:	df000415 	stw	fp,16(sp)
   202e0:	df000404 	addi	fp,sp,16
   202e4:	e13ffe15 	stw	r4,-8(fp)
   202e8:	e17fff15 	stw	r5,-4(fp)
	if(IORD_32DIRECT(HOMEMADE_UART_BASE, (3<<2)) == 0) return 0;
   202ec:	00800134 	movhi	r2,4
   202f0:	10840704 	addi	r2,r2,4124
   202f4:	10800037 	ldwio	r2,0(r2)
   202f8:	1000021e 	bne	r2,zero,20304 <read+0x2c>
   202fc:	0005883a 	mov	r2,zero
   20300:	00002306 	br	20390 <read+0xb8>
	int i = 0;
   20304:	e03ffc15 	stw	zero,-16(fp)
	int pointer = 0;
   20308:	e03ffd15 	stw	zero,-12(fp)
	do{
		values[pointer] = IORD_32DIRECT(HOMEMADE_UART_BASE, (1<<2));
   2030c:	e0bffd17 	ldw	r2,-12(fp)
   20310:	e0fffe17 	ldw	r3,-8(fp)
   20314:	1887883a 	add	r3,r3,r2
   20318:	00800134 	movhi	r2,4
   2031c:	10840504 	addi	r2,r2,4116
   20320:	10800037 	ldwio	r2,0(r2)
   20324:	18800005 	stb	r2,0(r3)
		pointer++;
   20328:	e0bffd17 	ldw	r2,-12(fp)
   2032c:	10800044 	addi	r2,r2,1
   20330:	e0bffd15 	stw	r2,-12(fp)
		for(i = 0; i < 10000; i++);
   20334:	e03ffc15 	stw	zero,-16(fp)
   20338:	00000306 	br	20348 <read+0x70>
   2033c:	e0bffc17 	ldw	r2,-16(fp)
   20340:	10800044 	addi	r2,r2,1
   20344:	e0bffc15 	stw	r2,-16(fp)
   20348:	e0bffc17 	ldw	r2,-16(fp)
   2034c:	1089c410 	cmplti	r2,r2,10000
   20350:	103ffa1e 	bne	r2,zero,2033c <__alt_data_end+0xfffe033c>
	} while((IORD_32DIRECT(HOMEMADE_UART_BASE, (3<<2)) == 1) && (pointer < (numberMaxToRead-1)));
   20354:	00800134 	movhi	r2,4
   20358:	10840704 	addi	r2,r2,4124
   2035c:	10800037 	ldwio	r2,0(r2)
   20360:	10800058 	cmpnei	r2,r2,1
   20364:	1000041e 	bne	r2,zero,20378 <read+0xa0>
   20368:	e0bfff17 	ldw	r2,-4(fp)
   2036c:	10bfffc4 	addi	r2,r2,-1
   20370:	e0fffd17 	ldw	r3,-12(fp)
   20374:	18bfe516 	blt	r3,r2,2030c <__alt_data_end+0xfffe030c>
	values[pointer] = '\0';
   20378:	e0bffd17 	ldw	r2,-12(fp)
   2037c:	e0fffe17 	ldw	r3,-8(fp)
   20380:	1885883a 	add	r2,r3,r2
   20384:	10000005 	stb	zero,0(r2)
	return pointer+1;
   20388:	e0bffd17 	ldw	r2,-12(fp)
   2038c:	10800044 	addi	r2,r2,1
}
   20390:	e037883a 	mov	sp,fp
   20394:	df000017 	ldw	fp,0(sp)
   20398:	dec00104 	addi	sp,sp,4
   2039c:	f800283a 	ret

000203a0 <write>:

void write(char* toWrite, int numberOfCharacters){
   203a0:	defffc04 	addi	sp,sp,-16
   203a4:	df000315 	stw	fp,12(sp)
   203a8:	df000304 	addi	fp,sp,12
   203ac:	e13ffe15 	stw	r4,-8(fp)
   203b0:	e17fff15 	stw	r5,-4(fp)
	int i;
	for(i=0; i < numberOfCharacters; i++){
   203b4:	e03ffd15 	stw	zero,-12(fp)
   203b8:	00000d06 	br	203f0 <write+0x50>
		IOWR_32DIRECT(HOMEMADE_UART_BASE, (2<<2),toWrite[i]);
   203bc:	e0bffd17 	ldw	r2,-12(fp)
   203c0:	e0fffe17 	ldw	r3,-8(fp)
   203c4:	1885883a 	add	r2,r3,r2
   203c8:	10800003 	ldbu	r2,0(r2)
   203cc:	10c03fcc 	andi	r3,r2,255
   203d0:	18c0201c 	xori	r3,r3,128
   203d4:	18ffe004 	addi	r3,r3,-128
   203d8:	00800134 	movhi	r2,4
   203dc:	10840604 	addi	r2,r2,4120
   203e0:	10c00035 	stwio	r3,0(r2)
	return pointer+1;
}

void write(char* toWrite, int numberOfCharacters){
	int i;
	for(i=0; i < numberOfCharacters; i++){
   203e4:	e0bffd17 	ldw	r2,-12(fp)
   203e8:	10800044 	addi	r2,r2,1
   203ec:	e0bffd15 	stw	r2,-12(fp)
   203f0:	e0fffd17 	ldw	r3,-12(fp)
   203f4:	e0bfff17 	ldw	r2,-4(fp)
   203f8:	18bff016 	blt	r3,r2,203bc <__alt_data_end+0xfffe03bc>
		IOWR_32DIRECT(HOMEMADE_UART_BASE, (2<<2),toWrite[i]);
	}
}
   203fc:	0001883a 	nop
   20400:	e037883a 	mov	sp,fp
   20404:	df000017 	ldw	fp,0(sp)
   20408:	dec00104 	addi	sp,sp,4
   2040c:	f800283a 	ret

00020410 <writeString>:

int writeString(char* toWrite){
   20410:	defffc04 	addi	sp,sp,-16
   20414:	dfc00315 	stw	ra,12(sp)
   20418:	df000215 	stw	fp,8(sp)
   2041c:	df000204 	addi	fp,sp,8
   20420:	e13fff15 	stw	r4,-4(fp)
	int size = strlen(toWrite);
   20424:	e13fff17 	ldw	r4,-4(fp)
   20428:	00207dc0 	call	207dc <strlen>
   2042c:	e0bffe15 	stw	r2,-8(fp)
	write(toWrite, size);
   20430:	e17ffe17 	ldw	r5,-8(fp)
   20434:	e13fff17 	ldw	r4,-4(fp)
   20438:	00203a00 	call	203a0 <write>
	return size;
   2043c:	e0bffe17 	ldw	r2,-8(fp)
}
   20440:	e037883a 	mov	sp,fp
   20444:	dfc00117 	ldw	ra,4(sp)
   20448:	df000017 	ldw	fp,0(sp)
   2044c:	dec00204 	addi	sp,sp,8
   20450:	f800283a 	ret

00020454 <canRead>:

int canRead(){
   20454:	deffff04 	addi	sp,sp,-4
   20458:	df000015 	stw	fp,0(sp)
   2045c:	d839883a 	mov	fp,sp
	return IORD_32DIRECT(HOMEMADE_UART_BASE, (3<<2));
   20460:	00800134 	movhi	r2,4
   20464:	10840704 	addi	r2,r2,4124
   20468:	10800037 	ldwio	r2,0(r2)
}
   2046c:	e037883a 	mov	sp,fp
   20470:	df000017 	ldw	fp,0(sp)
   20474:	dec00104 	addi	sp,sp,4
   20478:	f800283a 	ret

0002047c <setupWithNumber>:

int setupWithNumber(int wordLength, int rate, int parity){
   2047c:	defffb04 	addi	sp,sp,-20
   20480:	df000415 	stw	fp,16(sp)
   20484:	df000404 	addi	fp,sp,16
   20488:	e13ffd15 	stw	r4,-12(fp)
   2048c:	e17ffe15 	stw	r5,-8(fp)
   20490:	e1bfff15 	stw	r6,-4(fp)
	if(wordLength > 7) return 0;
   20494:	e0bffd17 	ldw	r2,-12(fp)
   20498:	10800210 	cmplti	r2,r2,8
   2049c:	1000021e 	bne	r2,zero,204a8 <setupWithNumber+0x2c>
   204a0:	0005883a 	mov	r2,zero
   204a4:	00001706 	br	20504 <setupWithNumber+0x88>
	if(rate > 15) return 0;
   204a8:	e0bffe17 	ldw	r2,-8(fp)
   204ac:	10800410 	cmplti	r2,r2,16
   204b0:	1000021e 	bne	r2,zero,204bc <setupWithNumber+0x40>
   204b4:	0005883a 	mov	r2,zero
   204b8:	00001206 	br	20504 <setupWithNumber+0x88>
	if(parity > 1) return 0;
   204bc:	e0bfff17 	ldw	r2,-4(fp)
   204c0:	10800090 	cmplti	r2,r2,2
   204c4:	1000021e 	bne	r2,zero,204d0 <setupWithNumber+0x54>
   204c8:	0005883a 	mov	r2,zero
   204cc:	00000d06 	br	20504 <setupWithNumber+0x88>
	int toWrite = (wordLength<<0) + (parity<<3) + (rate<<4);
   204d0:	e0bfff17 	ldw	r2,-4(fp)
   204d4:	100690fa 	slli	r3,r2,3
   204d8:	e0bffd17 	ldw	r2,-12(fp)
   204dc:	1887883a 	add	r3,r3,r2
   204e0:	e0bffe17 	ldw	r2,-8(fp)
   204e4:	1004913a 	slli	r2,r2,4
   204e8:	1885883a 	add	r2,r3,r2
   204ec:	e0bffc15 	stw	r2,-16(fp)
	IOWR_32DIRECT(HOMEMADE_UART_BASE, (1<<2),toWrite);
   204f0:	00800134 	movhi	r2,4
   204f4:	10840504 	addi	r2,r2,4116
   204f8:	e0fffc17 	ldw	r3,-16(fp)
   204fc:	10c00035 	stwio	r3,0(r2)
	return 1;
   20500:	00800044 	movi	r2,1
}
   20504:	e037883a 	mov	sp,fp
   20508:	df000017 	ldw	fp,0(sp)
   2050c:	dec00104 	addi	sp,sp,4
   20510:	f800283a 	ret

00020514 <setup>:

int setup(int wordLength, int rate, int parity){
   20514:	defff904 	addi	sp,sp,-28
   20518:	dfc00615 	stw	ra,24(sp)
   2051c:	df000515 	stw	fp,20(sp)
   20520:	df000504 	addi	fp,sp,20
   20524:	e13ffd15 	stw	r4,-12(fp)
   20528:	e17ffe15 	stw	r5,-8(fp)
   2052c:	e1bfff15 	stw	r6,-4(fp)
	int wordLengthNew = 0;
   20530:	e03ffc15 	stw	zero,-16(fp)
	int rateNew = 0;
   20534:	e03ffb15 	stw	zero,-20(fp)

	switch(wordLength){
   20538:	e0bffd17 	ldw	r2,-12(fp)
   2053c:	10c00220 	cmpeqi	r3,r2,8
   20540:	1800051e 	bne	r3,zero,20558 <setup+0x44>
   20544:	10c00260 	cmpeqi	r3,r2,9
   20548:	18000e1e 	bne	r3,zero,20584 <setup+0x70>
   2054c:	108001e0 	cmpeqi	r2,r2,7
   20550:	1000071e 	bne	r2,zero,20570 <setup+0x5c>
   20554:	00001006 	br	20598 <setup+0x84>
	case 8 :
		wordLengthNew = 0;
   20558:	e03ffc15 	stw	zero,-16(fp)
		break;
   2055c:	0001883a 	nop
	default:
		printf("Unknown wordLength\n");
		return 0;
	}

	switch(rate){
   20560:	e0bffe17 	ldw	r2,-8(fp)
   20564:	10c96020 	cmpeqi	r3,r2,9600
   20568:	1800261e 	bne	r3,zero,20604 <setup+0xf0>
   2056c:	00000f06 	br	205ac <setup+0x98>
	switch(wordLength){
	case 8 :
		wordLengthNew = 0;
		break;
	case 7 :
		printf("WordLength of 7 not available\n");
   20570:	010000f4 	movhi	r4,3
   20574:	213d0304 	addi	r4,r4,-3060
   20578:	00207c80 	call	207c8 <puts>
		return 0;
   2057c:	0005883a 	mov	r2,zero
   20580:	00004106 	br	20688 <setup+0x174>
	case 9 :
		printf("WordLength of 9 not available\n");
   20584:	010000f4 	movhi	r4,3
   20588:	213d0b04 	addi	r4,r4,-3028
   2058c:	00207c80 	call	207c8 <puts>
		return 0;
   20590:	0005883a 	mov	r2,zero
   20594:	00003c06 	br	20688 <setup+0x174>
	default:
		printf("Unknown wordLength\n");
   20598:	010000f4 	movhi	r4,3
   2059c:	213d1304 	addi	r4,r4,-2996
   205a0:	00207c80 	call	207c8 <puts>
		return 0;
   205a4:	0005883a 	mov	r2,zero
   205a8:	00003706 	br	20688 <setup+0x174>
	}

	switch(rate){
   205ac:	10c96048 	cmpgei	r3,r2,9601
   205b0:	1800071e 	bne	r3,zero,205d0 <setup+0xbc>
   205b4:	10c25820 	cmpeqi	r3,r2,2400
   205b8:	1800231e 	bne	r3,zero,20648 <setup+0x134>
   205bc:	10c4b020 	cmpeqi	r3,r2,4800
   205c0:	18001e1e 	bne	r3,zero,2063c <setup+0x128>
   205c4:	10812c20 	cmpeqi	r2,r2,1200
   205c8:	1000221e 	bne	r2,zero,20654 <setup+0x140>
   205cc:	00002406 	br	20660 <setup+0x14c>
   205d0:	00e58014 	movui	r3,38400
   205d4:	10c01326 	beq	r2,r3,20624 <setup+0x110>
   205d8:	00e58014 	movui	r3,38400
   205dc:	18800316 	blt	r3,r2,205ec <setup+0xd8>
   205e0:	1092c020 	cmpeqi	r2,r2,19200
   205e4:	1000121e 	bne	r2,zero,20630 <setup+0x11c>
   205e8:	00001d06 	br	20660 <setup+0x14c>
   205ec:	00f84014 	movui	r3,57600
   205f0:	10c00926 	beq	r2,r3,20618 <setup+0x104>
   205f4:	00c000b4 	movhi	r3,2
   205f8:	18f08004 	addi	r3,r3,-15872
   205fc:	10c00326 	beq	r2,r3,2060c <setup+0xf8>
   20600:	00001706 	br	20660 <setup+0x14c>
	case 9600 :
		rateNew = 0;
   20604:	e03ffb15 	stw	zero,-20(fp)
		break;
   20608:	00001a06 	br	20674 <setup+0x160>
	case 115200 :
		rateNew = 1;
   2060c:	00800044 	movi	r2,1
   20610:	e0bffb15 	stw	r2,-20(fp)
		break;
   20614:	00001706 	br	20674 <setup+0x160>
	case 57600 :
		rateNew = 2;
   20618:	00800084 	movi	r2,2
   2061c:	e0bffb15 	stw	r2,-20(fp)
		break;
   20620:	00001406 	br	20674 <setup+0x160>
	case 38400 :
		rateNew = 3;
   20624:	008000c4 	movi	r2,3
   20628:	e0bffb15 	stw	r2,-20(fp)
		break;
   2062c:	00001106 	br	20674 <setup+0x160>
	case 19200 :
		rateNew = 4;
   20630:	00800104 	movi	r2,4
   20634:	e0bffb15 	stw	r2,-20(fp)
		break;
   20638:	00000e06 	br	20674 <setup+0x160>
	case 4800 :
		rateNew = 5;
   2063c:	00800144 	movi	r2,5
   20640:	e0bffb15 	stw	r2,-20(fp)
		break;
   20644:	00000b06 	br	20674 <setup+0x160>
	case 2400 :
		rateNew = 6;
   20648:	00800184 	movi	r2,6
   2064c:	e0bffb15 	stw	r2,-20(fp)
		break;
   20650:	00000806 	br	20674 <setup+0x160>
	case 1200 :
		rateNew = 7;
   20654:	008001c4 	movi	r2,7
   20658:	e0bffb15 	stw	r2,-20(fp)
		break;
   2065c:	00000506 	br	20674 <setup+0x160>
	default :
		printf("Unknown rate\n");
   20660:	010000f4 	movhi	r4,3
   20664:	213d1804 	addi	r4,r4,-2976
   20668:	00207c80 	call	207c8 <puts>
		return 0;
   2066c:	0005883a 	mov	r2,zero
   20670:	00000506 	br	20688 <setup+0x174>
	}
	setupWithNumber(wordLengthNew, rateNew, parity);
   20674:	e1bfff17 	ldw	r6,-4(fp)
   20678:	e17ffb17 	ldw	r5,-20(fp)
   2067c:	e13ffc17 	ldw	r4,-16(fp)
   20680:	002047c0 	call	2047c <setupWithNumber>
	return 1;
   20684:	00800044 	movi	r2,1
}
   20688:	e037883a 	mov	sp,fp
   2068c:	dfc00117 	ldw	ra,4(sp)
   20690:	df000017 	ldw	fp,0(sp)
   20694:	dec00204 	addi	sp,sp,8
   20698:	f800283a 	ret

0002069c <_printf_r>:
   2069c:	defffd04 	addi	sp,sp,-12
   206a0:	2805883a 	mov	r2,r5
   206a4:	dfc00015 	stw	ra,0(sp)
   206a8:	d9800115 	stw	r6,4(sp)
   206ac:	d9c00215 	stw	r7,8(sp)
   206b0:	21400217 	ldw	r5,8(r4)
   206b4:	d9c00104 	addi	r7,sp,4
   206b8:	100d883a 	mov	r6,r2
   206bc:	00208740 	call	20874 <___vfprintf_internal_r>
   206c0:	dfc00017 	ldw	ra,0(sp)
   206c4:	dec00304 	addi	sp,sp,12
   206c8:	f800283a 	ret

000206cc <printf>:
   206cc:	defffc04 	addi	sp,sp,-16
   206d0:	dfc00015 	stw	ra,0(sp)
   206d4:	d9400115 	stw	r5,4(sp)
   206d8:	d9800215 	stw	r6,8(sp)
   206dc:	d9c00315 	stw	r7,12(sp)
   206e0:	008000f4 	movhi	r2,3
   206e4:	10848804 	addi	r2,r2,4640
   206e8:	10800017 	ldw	r2,0(r2)
   206ec:	200b883a 	mov	r5,r4
   206f0:	d9800104 	addi	r6,sp,4
   206f4:	11000217 	ldw	r4,8(r2)
   206f8:	0022a6c0 	call	22a6c <__vfprintf_internal>
   206fc:	dfc00017 	ldw	ra,0(sp)
   20700:	dec00404 	addi	sp,sp,16
   20704:	f800283a 	ret

00020708 <_puts_r>:
   20708:	defff604 	addi	sp,sp,-40
   2070c:	dc000715 	stw	r16,28(sp)
   20710:	2021883a 	mov	r16,r4
   20714:	2809883a 	mov	r4,r5
   20718:	dc400815 	stw	r17,32(sp)
   2071c:	dfc00915 	stw	ra,36(sp)
   20720:	2823883a 	mov	r17,r5
   20724:	00207dc0 	call	207dc <strlen>
   20728:	10c00044 	addi	r3,r2,1
   2072c:	d8800115 	stw	r2,4(sp)
   20730:	008000f4 	movhi	r2,3
   20734:	10bd1c04 	addi	r2,r2,-2960
   20738:	d8800215 	stw	r2,8(sp)
   2073c:	00800044 	movi	r2,1
   20740:	d8800315 	stw	r2,12(sp)
   20744:	00800084 	movi	r2,2
   20748:	dc400015 	stw	r17,0(sp)
   2074c:	d8c00615 	stw	r3,24(sp)
   20750:	dec00415 	stw	sp,16(sp)
   20754:	d8800515 	stw	r2,20(sp)
   20758:	80000226 	beq	r16,zero,20764 <_puts_r+0x5c>
   2075c:	80800e17 	ldw	r2,56(r16)
   20760:	10001426 	beq	r2,zero,207b4 <_puts_r+0xac>
   20764:	81400217 	ldw	r5,8(r16)
   20768:	2880030b 	ldhu	r2,12(r5)
   2076c:	10c8000c 	andi	r3,r2,8192
   20770:	1800061e 	bne	r3,zero,2078c <_puts_r+0x84>
   20774:	29001917 	ldw	r4,100(r5)
   20778:	00f7ffc4 	movi	r3,-8193
   2077c:	10880014 	ori	r2,r2,8192
   20780:	20c6703a 	and	r3,r4,r3
   20784:	2880030d 	sth	r2,12(r5)
   20788:	28c01915 	stw	r3,100(r5)
   2078c:	d9800404 	addi	r6,sp,16
   20790:	8009883a 	mov	r4,r16
   20794:	0024f9c0 	call	24f9c <__sfvwrite_r>
   20798:	1000091e 	bne	r2,zero,207c0 <_puts_r+0xb8>
   2079c:	00800284 	movi	r2,10
   207a0:	dfc00917 	ldw	ra,36(sp)
   207a4:	dc400817 	ldw	r17,32(sp)
   207a8:	dc000717 	ldw	r16,28(sp)
   207ac:	dec00a04 	addi	sp,sp,40
   207b0:	f800283a 	ret
   207b4:	8009883a 	mov	r4,r16
   207b8:	0024b180 	call	24b18 <__sinit>
   207bc:	003fe906 	br	20764 <__alt_data_end+0xfffe0764>
   207c0:	00bfffc4 	movi	r2,-1
   207c4:	003ff606 	br	207a0 <__alt_data_end+0xfffe07a0>

000207c8 <puts>:
   207c8:	008000f4 	movhi	r2,3
   207cc:	10848804 	addi	r2,r2,4640
   207d0:	200b883a 	mov	r5,r4
   207d4:	11000017 	ldw	r4,0(r2)
   207d8:	00207081 	jmpi	20708 <_puts_r>

000207dc <strlen>:
   207dc:	208000cc 	andi	r2,r4,3
   207e0:	10002026 	beq	r2,zero,20864 <strlen+0x88>
   207e4:	20800007 	ldb	r2,0(r4)
   207e8:	10002026 	beq	r2,zero,2086c <strlen+0x90>
   207ec:	2005883a 	mov	r2,r4
   207f0:	00000206 	br	207fc <strlen+0x20>
   207f4:	10c00007 	ldb	r3,0(r2)
   207f8:	18001826 	beq	r3,zero,2085c <strlen+0x80>
   207fc:	10800044 	addi	r2,r2,1
   20800:	10c000cc 	andi	r3,r2,3
   20804:	183ffb1e 	bne	r3,zero,207f4 <__alt_data_end+0xfffe07f4>
   20808:	10c00017 	ldw	r3,0(r2)
   2080c:	01ffbff4 	movhi	r7,65279
   20810:	39ffbfc4 	addi	r7,r7,-257
   20814:	00ca303a 	nor	r5,zero,r3
   20818:	01a02074 	movhi	r6,32897
   2081c:	19c7883a 	add	r3,r3,r7
   20820:	31a02004 	addi	r6,r6,-32640
   20824:	1946703a 	and	r3,r3,r5
   20828:	1986703a 	and	r3,r3,r6
   2082c:	1800091e 	bne	r3,zero,20854 <strlen+0x78>
   20830:	10800104 	addi	r2,r2,4
   20834:	10c00017 	ldw	r3,0(r2)
   20838:	19cb883a 	add	r5,r3,r7
   2083c:	00c6303a 	nor	r3,zero,r3
   20840:	28c6703a 	and	r3,r5,r3
   20844:	1986703a 	and	r3,r3,r6
   20848:	183ff926 	beq	r3,zero,20830 <__alt_data_end+0xfffe0830>
   2084c:	00000106 	br	20854 <strlen+0x78>
   20850:	10800044 	addi	r2,r2,1
   20854:	10c00007 	ldb	r3,0(r2)
   20858:	183ffd1e 	bne	r3,zero,20850 <__alt_data_end+0xfffe0850>
   2085c:	1105c83a 	sub	r2,r2,r4
   20860:	f800283a 	ret
   20864:	2005883a 	mov	r2,r4
   20868:	003fe706 	br	20808 <__alt_data_end+0xfffe0808>
   2086c:	0005883a 	mov	r2,zero
   20870:	f800283a 	ret

00020874 <___vfprintf_internal_r>:
   20874:	deffb804 	addi	sp,sp,-288
   20878:	dfc04715 	stw	ra,284(sp)
   2087c:	ddc04515 	stw	r23,276(sp)
   20880:	dd404315 	stw	r21,268(sp)
   20884:	d9002c15 	stw	r4,176(sp)
   20888:	282f883a 	mov	r23,r5
   2088c:	302b883a 	mov	r21,r6
   20890:	d9c02d15 	stw	r7,180(sp)
   20894:	df004615 	stw	fp,280(sp)
   20898:	dd804415 	stw	r22,272(sp)
   2089c:	dd004215 	stw	r20,264(sp)
   208a0:	dcc04115 	stw	r19,260(sp)
   208a4:	dc804015 	stw	r18,256(sp)
   208a8:	dc403f15 	stw	r17,252(sp)
   208ac:	dc003e15 	stw	r16,248(sp)
   208b0:	002568c0 	call	2568c <_localeconv_r>
   208b4:	10800017 	ldw	r2,0(r2)
   208b8:	1009883a 	mov	r4,r2
   208bc:	d8803415 	stw	r2,208(sp)
   208c0:	00207dc0 	call	207dc <strlen>
   208c4:	d8803715 	stw	r2,220(sp)
   208c8:	d8802c17 	ldw	r2,176(sp)
   208cc:	10000226 	beq	r2,zero,208d8 <___vfprintf_internal_r+0x64>
   208d0:	10800e17 	ldw	r2,56(r2)
   208d4:	1000f926 	beq	r2,zero,20cbc <___vfprintf_internal_r+0x448>
   208d8:	b880030b 	ldhu	r2,12(r23)
   208dc:	10c8000c 	andi	r3,r2,8192
   208e0:	1800061e 	bne	r3,zero,208fc <___vfprintf_internal_r+0x88>
   208e4:	b9001917 	ldw	r4,100(r23)
   208e8:	00f7ffc4 	movi	r3,-8193
   208ec:	10880014 	ori	r2,r2,8192
   208f0:	20c6703a 	and	r3,r4,r3
   208f4:	b880030d 	sth	r2,12(r23)
   208f8:	b8c01915 	stw	r3,100(r23)
   208fc:	10c0020c 	andi	r3,r2,8
   20900:	1800c126 	beq	r3,zero,20c08 <___vfprintf_internal_r+0x394>
   20904:	b8c00417 	ldw	r3,16(r23)
   20908:	1800bf26 	beq	r3,zero,20c08 <___vfprintf_internal_r+0x394>
   2090c:	1080068c 	andi	r2,r2,26
   20910:	00c00284 	movi	r3,10
   20914:	10c0c426 	beq	r2,r3,20c28 <___vfprintf_internal_r+0x3b4>
   20918:	d8c00404 	addi	r3,sp,16
   2091c:	050000f4 	movhi	r20,3
   20920:	d9001e04 	addi	r4,sp,120
   20924:	a53d2d84 	addi	r20,r20,-2890
   20928:	d8c01e15 	stw	r3,120(sp)
   2092c:	d8002015 	stw	zero,128(sp)
   20930:	d8001f15 	stw	zero,124(sp)
   20934:	d8003315 	stw	zero,204(sp)
   20938:	d8003615 	stw	zero,216(sp)
   2093c:	d8003815 	stw	zero,224(sp)
   20940:	1811883a 	mov	r8,r3
   20944:	d8003915 	stw	zero,228(sp)
   20948:	d8003a15 	stw	zero,232(sp)
   2094c:	d8002f15 	stw	zero,188(sp)
   20950:	d9002815 	stw	r4,160(sp)
   20954:	a8800007 	ldb	r2,0(r21)
   20958:	10027b26 	beq	r2,zero,21348 <___vfprintf_internal_r+0xad4>
   2095c:	00c00944 	movi	r3,37
   20960:	a821883a 	mov	r16,r21
   20964:	10c0021e 	bne	r2,r3,20970 <___vfprintf_internal_r+0xfc>
   20968:	00001406 	br	209bc <___vfprintf_internal_r+0x148>
   2096c:	10c00326 	beq	r2,r3,2097c <___vfprintf_internal_r+0x108>
   20970:	84000044 	addi	r16,r16,1
   20974:	80800007 	ldb	r2,0(r16)
   20978:	103ffc1e 	bne	r2,zero,2096c <__alt_data_end+0xfffe096c>
   2097c:	8563c83a 	sub	r17,r16,r21
   20980:	88000e26 	beq	r17,zero,209bc <___vfprintf_internal_r+0x148>
   20984:	d8c02017 	ldw	r3,128(sp)
   20988:	d8801f17 	ldw	r2,124(sp)
   2098c:	45400015 	stw	r21,0(r8)
   20990:	1c47883a 	add	r3,r3,r17
   20994:	10800044 	addi	r2,r2,1
   20998:	d8c02015 	stw	r3,128(sp)
   2099c:	44400115 	stw	r17,4(r8)
   209a0:	d8801f15 	stw	r2,124(sp)
   209a4:	00c001c4 	movi	r3,7
   209a8:	1880a716 	blt	r3,r2,20c48 <___vfprintf_internal_r+0x3d4>
   209ac:	42000204 	addi	r8,r8,8
   209b0:	d9402f17 	ldw	r5,188(sp)
   209b4:	2c4b883a 	add	r5,r5,r17
   209b8:	d9402f15 	stw	r5,188(sp)
   209bc:	80800007 	ldb	r2,0(r16)
   209c0:	1000a826 	beq	r2,zero,20c64 <___vfprintf_internal_r+0x3f0>
   209c4:	84400047 	ldb	r17,1(r16)
   209c8:	00bfffc4 	movi	r2,-1
   209cc:	85400044 	addi	r21,r16,1
   209d0:	d8002785 	stb	zero,158(sp)
   209d4:	0007883a 	mov	r3,zero
   209d8:	000f883a 	mov	r7,zero
   209dc:	d8802915 	stw	r2,164(sp)
   209e0:	d8003115 	stw	zero,196(sp)
   209e4:	0025883a 	mov	r18,zero
   209e8:	01401604 	movi	r5,88
   209ec:	01800244 	movi	r6,9
   209f0:	02800a84 	movi	r10,42
   209f4:	02401b04 	movi	r9,108
   209f8:	ad400044 	addi	r21,r21,1
   209fc:	88bff804 	addi	r2,r17,-32
   20a00:	28830436 	bltu	r5,r2,21614 <___vfprintf_internal_r+0xda0>
   20a04:	100490ba 	slli	r2,r2,2
   20a08:	010000b4 	movhi	r4,2
   20a0c:	21028704 	addi	r4,r4,2588
   20a10:	1105883a 	add	r2,r2,r4
   20a14:	10800017 	ldw	r2,0(r2)
   20a18:	1000683a 	jmp	r2
   20a1c:	00021534 	movhi	zero,2132
   20a20:	00021614 	movui	zero,2136
   20a24:	00021614 	movui	zero,2136
   20a28:	00021554 	movui	zero,2133
   20a2c:	00021614 	movui	zero,2136
   20a30:	00021614 	movui	zero,2136
   20a34:	00021614 	movui	zero,2136
   20a38:	00021614 	movui	zero,2136
   20a3c:	00021614 	movui	zero,2136
   20a40:	00021614 	movui	zero,2136
   20a44:	00020cc8 	cmpgei	zero,zero,2099
   20a48:	00021470 	cmpltui	zero,zero,2129
   20a4c:	00021614 	movui	zero,2136
   20a50:	00020b90 	cmplti	zero,zero,2094
   20a54:	00020cf0 	cmpltui	zero,zero,2099
   20a58:	00021614 	movui	zero,2136
   20a5c:	00020d30 	cmpltui	zero,zero,2100
   20a60:	00020d3c 	xorhi	zero,zero,2100
   20a64:	00020d3c 	xorhi	zero,zero,2100
   20a68:	00020d3c 	xorhi	zero,zero,2100
   20a6c:	00020d3c 	xorhi	zero,zero,2100
   20a70:	00020d3c 	xorhi	zero,zero,2100
   20a74:	00020d3c 	xorhi	zero,zero,2100
   20a78:	00020d3c 	xorhi	zero,zero,2100
   20a7c:	00020d3c 	xorhi	zero,zero,2100
   20a80:	00020d3c 	xorhi	zero,zero,2100
   20a84:	00021614 	movui	zero,2136
   20a88:	00021614 	movui	zero,2136
   20a8c:	00021614 	movui	zero,2136
   20a90:	00021614 	movui	zero,2136
   20a94:	00021614 	movui	zero,2136
   20a98:	00021614 	movui	zero,2136
   20a9c:	00021614 	movui	zero,2136
   20aa0:	00021614 	movui	zero,2136
   20aa4:	00021614 	movui	zero,2136
   20aa8:	00021614 	movui	zero,2136
   20aac:	00020d70 	cmpltui	zero,zero,2101
   20ab0:	00020e2c 	andhi	zero,zero,2104
   20ab4:	00021614 	movui	zero,2136
   20ab8:	00020e2c 	andhi	zero,zero,2104
   20abc:	00021614 	movui	zero,2136
   20ac0:	00021614 	movui	zero,2136
   20ac4:	00021614 	movui	zero,2136
   20ac8:	00021614 	movui	zero,2136
   20acc:	00020ecc 	andi	zero,zero,2107
   20ad0:	00021614 	movui	zero,2136
   20ad4:	00021614 	movui	zero,2136
   20ad8:	00020ed8 	cmpnei	zero,zero,2107
   20adc:	00021614 	movui	zero,2136
   20ae0:	00021614 	movui	zero,2136
   20ae4:	00021614 	movui	zero,2136
   20ae8:	00021614 	movui	zero,2136
   20aec:	00021614 	movui	zero,2136
   20af0:	00021350 	cmplti	zero,zero,2125
   20af4:	00021614 	movui	zero,2136
   20af8:	00021614 	movui	zero,2136
   20afc:	000213b0 	cmpltui	zero,zero,2126
   20b00:	00021614 	movui	zero,2136
   20b04:	00021614 	movui	zero,2136
   20b08:	00021614 	movui	zero,2136
   20b0c:	00021614 	movui	zero,2136
   20b10:	00021614 	movui	zero,2136
   20b14:	00021614 	movui	zero,2136
   20b18:	00021614 	movui	zero,2136
   20b1c:	00021614 	movui	zero,2136
   20b20:	00021614 	movui	zero,2136
   20b24:	00021614 	movui	zero,2136
   20b28:	000215c0 	call	215c <__alt_mem_onchip_memory2_0-0x1dea4>
   20b2c:	00021560 	cmpeqi	zero,zero,2133
   20b30:	00020e2c 	andhi	zero,zero,2104
   20b34:	00020e2c 	andhi	zero,zero,2104
   20b38:	00020e2c 	andhi	zero,zero,2104
   20b3c:	00021570 	cmpltui	zero,zero,2133
   20b40:	00021560 	cmpeqi	zero,zero,2133
   20b44:	00021614 	movui	zero,2136
   20b48:	00021614 	movui	zero,2136
   20b4c:	0002157c 	xorhi	zero,zero,2133
   20b50:	00021614 	movui	zero,2136
   20b54:	0002158c 	andi	zero,zero,2134
   20b58:	00021460 	cmpeqi	zero,zero,2129
   20b5c:	00020b9c 	xori	zero,zero,2094
   20b60:	00021480 	call	2148 <__alt_mem_onchip_memory2_0-0x1deb8>
   20b64:	00021614 	movui	zero,2136
   20b68:	0002148c 	andi	zero,zero,2130
   20b6c:	00021614 	movui	zero,2136
   20b70:	000214e8 	cmpgeui	zero,zero,2131
   20b74:	00021614 	movui	zero,2136
   20b78:	00021614 	movui	zero,2136
   20b7c:	000214f8 	rdprs	zero,zero,2131
   20b80:	d9003117 	ldw	r4,196(sp)
   20b84:	d8802d15 	stw	r2,180(sp)
   20b88:	0109c83a 	sub	r4,zero,r4
   20b8c:	d9003115 	stw	r4,196(sp)
   20b90:	94800114 	ori	r18,r18,4
   20b94:	ac400007 	ldb	r17,0(r21)
   20b98:	003f9706 	br	209f8 <__alt_data_end+0xfffe09f8>
   20b9c:	00800c04 	movi	r2,48
   20ba0:	d9002d17 	ldw	r4,180(sp)
   20ba4:	d9402917 	ldw	r5,164(sp)
   20ba8:	d8802705 	stb	r2,156(sp)
   20bac:	00801e04 	movi	r2,120
   20bb0:	d8802745 	stb	r2,157(sp)
   20bb4:	d8002785 	stb	zero,158(sp)
   20bb8:	20c00104 	addi	r3,r4,4
   20bbc:	24c00017 	ldw	r19,0(r4)
   20bc0:	002d883a 	mov	r22,zero
   20bc4:	90800094 	ori	r2,r18,2
   20bc8:	28029a16 	blt	r5,zero,21634 <___vfprintf_internal_r+0xdc0>
   20bcc:	00bfdfc4 	movi	r2,-129
   20bd0:	90a4703a 	and	r18,r18,r2
   20bd4:	d8c02d15 	stw	r3,180(sp)
   20bd8:	94800094 	ori	r18,r18,2
   20bdc:	9802871e 	bne	r19,zero,215fc <___vfprintf_internal_r+0xd88>
   20be0:	008000f4 	movhi	r2,3
   20be4:	10bd2604 	addi	r2,r2,-2920
   20be8:	d8803915 	stw	r2,228(sp)
   20bec:	04401e04 	movi	r17,120
   20bf0:	d8802917 	ldw	r2,164(sp)
   20bf4:	0039883a 	mov	fp,zero
   20bf8:	1001e926 	beq	r2,zero,213a0 <___vfprintf_internal_r+0xb2c>
   20bfc:	0027883a 	mov	r19,zero
   20c00:	002d883a 	mov	r22,zero
   20c04:	00020506 	br	2141c <___vfprintf_internal_r+0xba8>
   20c08:	d9002c17 	ldw	r4,176(sp)
   20c0c:	b80b883a 	mov	r5,r23
   20c10:	0022b440 	call	22b44 <__swsetup_r>
   20c14:	1005ac1e 	bne	r2,zero,222c8 <___vfprintf_internal_r+0x1a54>
   20c18:	b880030b 	ldhu	r2,12(r23)
   20c1c:	00c00284 	movi	r3,10
   20c20:	1080068c 	andi	r2,r2,26
   20c24:	10ff3c1e 	bne	r2,r3,20918 <__alt_data_end+0xfffe0918>
   20c28:	b880038f 	ldh	r2,14(r23)
   20c2c:	103f3a16 	blt	r2,zero,20918 <__alt_data_end+0xfffe0918>
   20c30:	d9c02d17 	ldw	r7,180(sp)
   20c34:	d9002c17 	ldw	r4,176(sp)
   20c38:	a80d883a 	mov	r6,r21
   20c3c:	b80b883a 	mov	r5,r23
   20c40:	0022a880 	call	22a88 <__sbprintf>
   20c44:	00001106 	br	20c8c <___vfprintf_internal_r+0x418>
   20c48:	d9002c17 	ldw	r4,176(sp)
   20c4c:	d9801e04 	addi	r6,sp,120
   20c50:	b80b883a 	mov	r5,r23
   20c54:	0027e700 	call	27e70 <__sprint_r>
   20c58:	1000081e 	bne	r2,zero,20c7c <___vfprintf_internal_r+0x408>
   20c5c:	da000404 	addi	r8,sp,16
   20c60:	003f5306 	br	209b0 <__alt_data_end+0xfffe09b0>
   20c64:	d8802017 	ldw	r2,128(sp)
   20c68:	10000426 	beq	r2,zero,20c7c <___vfprintf_internal_r+0x408>
   20c6c:	d9002c17 	ldw	r4,176(sp)
   20c70:	d9801e04 	addi	r6,sp,120
   20c74:	b80b883a 	mov	r5,r23
   20c78:	0027e700 	call	27e70 <__sprint_r>
   20c7c:	b880030b 	ldhu	r2,12(r23)
   20c80:	1080100c 	andi	r2,r2,64
   20c84:	1005901e 	bne	r2,zero,222c8 <___vfprintf_internal_r+0x1a54>
   20c88:	d8802f17 	ldw	r2,188(sp)
   20c8c:	dfc04717 	ldw	ra,284(sp)
   20c90:	df004617 	ldw	fp,280(sp)
   20c94:	ddc04517 	ldw	r23,276(sp)
   20c98:	dd804417 	ldw	r22,272(sp)
   20c9c:	dd404317 	ldw	r21,268(sp)
   20ca0:	dd004217 	ldw	r20,264(sp)
   20ca4:	dcc04117 	ldw	r19,260(sp)
   20ca8:	dc804017 	ldw	r18,256(sp)
   20cac:	dc403f17 	ldw	r17,252(sp)
   20cb0:	dc003e17 	ldw	r16,248(sp)
   20cb4:	dec04804 	addi	sp,sp,288
   20cb8:	f800283a 	ret
   20cbc:	d9002c17 	ldw	r4,176(sp)
   20cc0:	0024b180 	call	24b18 <__sinit>
   20cc4:	003f0406 	br	208d8 <__alt_data_end+0xfffe08d8>
   20cc8:	d8802d17 	ldw	r2,180(sp)
   20ccc:	d9002d17 	ldw	r4,180(sp)
   20cd0:	10800017 	ldw	r2,0(r2)
   20cd4:	d8803115 	stw	r2,196(sp)
   20cd8:	20800104 	addi	r2,r4,4
   20cdc:	d9003117 	ldw	r4,196(sp)
   20ce0:	203fa716 	blt	r4,zero,20b80 <__alt_data_end+0xfffe0b80>
   20ce4:	d8802d15 	stw	r2,180(sp)
   20ce8:	ac400007 	ldb	r17,0(r21)
   20cec:	003f4206 	br	209f8 <__alt_data_end+0xfffe09f8>
   20cf0:	ac400007 	ldb	r17,0(r21)
   20cf4:	aac00044 	addi	r11,r21,1
   20cf8:	8a872826 	beq	r17,r10,2299c <___vfprintf_internal_r+0x2128>
   20cfc:	88bff404 	addi	r2,r17,-48
   20d00:	0009883a 	mov	r4,zero
   20d04:	30867d36 	bltu	r6,r2,226fc <___vfprintf_internal_r+0x1e88>
   20d08:	5c400007 	ldb	r17,0(r11)
   20d0c:	210002a4 	muli	r4,r4,10
   20d10:	5d400044 	addi	r21,r11,1
   20d14:	a817883a 	mov	r11,r21
   20d18:	2089883a 	add	r4,r4,r2
   20d1c:	88bff404 	addi	r2,r17,-48
   20d20:	30bff92e 	bgeu	r6,r2,20d08 <__alt_data_end+0xfffe0d08>
   20d24:	2005c916 	blt	r4,zero,2244c <___vfprintf_internal_r+0x1bd8>
   20d28:	d9002915 	stw	r4,164(sp)
   20d2c:	003f3306 	br	209fc <__alt_data_end+0xfffe09fc>
   20d30:	94802014 	ori	r18,r18,128
   20d34:	ac400007 	ldb	r17,0(r21)
   20d38:	003f2f06 	br	209f8 <__alt_data_end+0xfffe09f8>
   20d3c:	a809883a 	mov	r4,r21
   20d40:	d8003115 	stw	zero,196(sp)
   20d44:	88bff404 	addi	r2,r17,-48
   20d48:	0017883a 	mov	r11,zero
   20d4c:	24400007 	ldb	r17,0(r4)
   20d50:	5ac002a4 	muli	r11,r11,10
   20d54:	ad400044 	addi	r21,r21,1
   20d58:	a809883a 	mov	r4,r21
   20d5c:	12d7883a 	add	r11,r2,r11
   20d60:	88bff404 	addi	r2,r17,-48
   20d64:	30bff92e 	bgeu	r6,r2,20d4c <__alt_data_end+0xfffe0d4c>
   20d68:	dac03115 	stw	r11,196(sp)
   20d6c:	003f2306 	br	209fc <__alt_data_end+0xfffe09fc>
   20d70:	18c03fcc 	andi	r3,r3,255
   20d74:	18072b1e 	bne	r3,zero,22a24 <___vfprintf_internal_r+0x21b0>
   20d78:	94800414 	ori	r18,r18,16
   20d7c:	9080080c 	andi	r2,r18,32
   20d80:	10037b26 	beq	r2,zero,21b70 <___vfprintf_internal_r+0x12fc>
   20d84:	d9402d17 	ldw	r5,180(sp)
   20d88:	28800117 	ldw	r2,4(r5)
   20d8c:	2cc00017 	ldw	r19,0(r5)
   20d90:	29400204 	addi	r5,r5,8
   20d94:	d9402d15 	stw	r5,180(sp)
   20d98:	102d883a 	mov	r22,r2
   20d9c:	10044b16 	blt	r2,zero,21ecc <___vfprintf_internal_r+0x1658>
   20da0:	d9402917 	ldw	r5,164(sp)
   20da4:	df002783 	ldbu	fp,158(sp)
   20da8:	2803bc16 	blt	r5,zero,21c9c <___vfprintf_internal_r+0x1428>
   20dac:	00ffdfc4 	movi	r3,-129
   20db0:	9d84b03a 	or	r2,r19,r22
   20db4:	90e4703a 	and	r18,r18,r3
   20db8:	10017726 	beq	r2,zero,21398 <___vfprintf_internal_r+0xb24>
   20dbc:	b0038326 	beq	r22,zero,21bcc <___vfprintf_internal_r+0x1358>
   20dc0:	dc402a15 	stw	r17,168(sp)
   20dc4:	dc001e04 	addi	r16,sp,120
   20dc8:	b023883a 	mov	r17,r22
   20dcc:	402d883a 	mov	r22,r8
   20dd0:	9809883a 	mov	r4,r19
   20dd4:	880b883a 	mov	r5,r17
   20dd8:	01800284 	movi	r6,10
   20ddc:	000f883a 	mov	r7,zero
   20de0:	002a2680 	call	2a268 <__umoddi3>
   20de4:	10800c04 	addi	r2,r2,48
   20de8:	843fffc4 	addi	r16,r16,-1
   20dec:	9809883a 	mov	r4,r19
   20df0:	880b883a 	mov	r5,r17
   20df4:	80800005 	stb	r2,0(r16)
   20df8:	01800284 	movi	r6,10
   20dfc:	000f883a 	mov	r7,zero
   20e00:	0029cf00 	call	29cf0 <__udivdi3>
   20e04:	1027883a 	mov	r19,r2
   20e08:	10c4b03a 	or	r2,r2,r3
   20e0c:	1823883a 	mov	r17,r3
   20e10:	103fef1e 	bne	r2,zero,20dd0 <__alt_data_end+0xfffe0dd0>
   20e14:	d8c02817 	ldw	r3,160(sp)
   20e18:	dc402a17 	ldw	r17,168(sp)
   20e1c:	b011883a 	mov	r8,r22
   20e20:	1c07c83a 	sub	r3,r3,r16
   20e24:	d8c02e15 	stw	r3,184(sp)
   20e28:	00005906 	br	20f90 <___vfprintf_internal_r+0x71c>
   20e2c:	18c03fcc 	andi	r3,r3,255
   20e30:	1806fa1e 	bne	r3,zero,22a1c <___vfprintf_internal_r+0x21a8>
   20e34:	9080020c 	andi	r2,r18,8
   20e38:	10048a26 	beq	r2,zero,22064 <___vfprintf_internal_r+0x17f0>
   20e3c:	d8c02d17 	ldw	r3,180(sp)
   20e40:	d9002d17 	ldw	r4,180(sp)
   20e44:	d9402d17 	ldw	r5,180(sp)
   20e48:	18c00017 	ldw	r3,0(r3)
   20e4c:	21000117 	ldw	r4,4(r4)
   20e50:	29400204 	addi	r5,r5,8
   20e54:	d8c03615 	stw	r3,216(sp)
   20e58:	d9003815 	stw	r4,224(sp)
   20e5c:	d9402d15 	stw	r5,180(sp)
   20e60:	d9003617 	ldw	r4,216(sp)
   20e64:	d9403817 	ldw	r5,224(sp)
   20e68:	da003d15 	stw	r8,244(sp)
   20e6c:	04000044 	movi	r16,1
   20e70:	0027a940 	call	27a94 <__fpclassifyd>
   20e74:	da003d17 	ldw	r8,244(sp)
   20e78:	14041f1e 	bne	r2,r16,21ef8 <___vfprintf_internal_r+0x1684>
   20e7c:	d9003617 	ldw	r4,216(sp)
   20e80:	d9403817 	ldw	r5,224(sp)
   20e84:	000d883a 	mov	r6,zero
   20e88:	000f883a 	mov	r7,zero
   20e8c:	002bc4c0 	call	2bc4c <__ledf2>
   20e90:	da003d17 	ldw	r8,244(sp)
   20e94:	1005be16 	blt	r2,zero,22590 <___vfprintf_internal_r+0x1d1c>
   20e98:	df002783 	ldbu	fp,158(sp)
   20e9c:	008011c4 	movi	r2,71
   20ea0:	1445330e 	bge	r2,r17,22370 <___vfprintf_internal_r+0x1afc>
   20ea4:	040000f4 	movhi	r16,3
   20ea8:	843d1e04 	addi	r16,r16,-2952
   20eac:	00c000c4 	movi	r3,3
   20eb0:	00bfdfc4 	movi	r2,-129
   20eb4:	d8c02a15 	stw	r3,168(sp)
   20eb8:	90a4703a 	and	r18,r18,r2
   20ebc:	d8c02e15 	stw	r3,184(sp)
   20ec0:	d8002915 	stw	zero,164(sp)
   20ec4:	d8003215 	stw	zero,200(sp)
   20ec8:	00003706 	br	20fa8 <___vfprintf_internal_r+0x734>
   20ecc:	94800214 	ori	r18,r18,8
   20ed0:	ac400007 	ldb	r17,0(r21)
   20ed4:	003ec806 	br	209f8 <__alt_data_end+0xfffe09f8>
   20ed8:	18c03fcc 	andi	r3,r3,255
   20edc:	1806db1e 	bne	r3,zero,22a4c <___vfprintf_internal_r+0x21d8>
   20ee0:	94800414 	ori	r18,r18,16
   20ee4:	9080080c 	andi	r2,r18,32
   20ee8:	1002d826 	beq	r2,zero,21a4c <___vfprintf_internal_r+0x11d8>
   20eec:	d9402d17 	ldw	r5,180(sp)
   20ef0:	d8c02917 	ldw	r3,164(sp)
   20ef4:	d8002785 	stb	zero,158(sp)
   20ef8:	28800204 	addi	r2,r5,8
   20efc:	2cc00017 	ldw	r19,0(r5)
   20f00:	2d800117 	ldw	r22,4(r5)
   20f04:	18048f16 	blt	r3,zero,22144 <___vfprintf_internal_r+0x18d0>
   20f08:	013fdfc4 	movi	r4,-129
   20f0c:	9d86b03a 	or	r3,r19,r22
   20f10:	d8802d15 	stw	r2,180(sp)
   20f14:	9124703a 	and	r18,r18,r4
   20f18:	1802d91e 	bne	r3,zero,21a80 <___vfprintf_internal_r+0x120c>
   20f1c:	d8c02917 	ldw	r3,164(sp)
   20f20:	0039883a 	mov	fp,zero
   20f24:	1805c326 	beq	r3,zero,22634 <___vfprintf_internal_r+0x1dc0>
   20f28:	0027883a 	mov	r19,zero
   20f2c:	002d883a 	mov	r22,zero
   20f30:	dc001e04 	addi	r16,sp,120
   20f34:	9806d0fa 	srli	r3,r19,3
   20f38:	b008977a 	slli	r4,r22,29
   20f3c:	b02cd0fa 	srli	r22,r22,3
   20f40:	9cc001cc 	andi	r19,r19,7
   20f44:	98800c04 	addi	r2,r19,48
   20f48:	843fffc4 	addi	r16,r16,-1
   20f4c:	20e6b03a 	or	r19,r4,r3
   20f50:	80800005 	stb	r2,0(r16)
   20f54:	9d86b03a 	or	r3,r19,r22
   20f58:	183ff61e 	bne	r3,zero,20f34 <__alt_data_end+0xfffe0f34>
   20f5c:	90c0004c 	andi	r3,r18,1
   20f60:	18013b26 	beq	r3,zero,21450 <___vfprintf_internal_r+0xbdc>
   20f64:	10803fcc 	andi	r2,r2,255
   20f68:	1080201c 	xori	r2,r2,128
   20f6c:	10bfe004 	addi	r2,r2,-128
   20f70:	00c00c04 	movi	r3,48
   20f74:	10c13626 	beq	r2,r3,21450 <___vfprintf_internal_r+0xbdc>
   20f78:	80ffffc5 	stb	r3,-1(r16)
   20f7c:	d8c02817 	ldw	r3,160(sp)
   20f80:	80bfffc4 	addi	r2,r16,-1
   20f84:	1021883a 	mov	r16,r2
   20f88:	1887c83a 	sub	r3,r3,r2
   20f8c:	d8c02e15 	stw	r3,184(sp)
   20f90:	d8802e17 	ldw	r2,184(sp)
   20f94:	d9002917 	ldw	r4,164(sp)
   20f98:	1100010e 	bge	r2,r4,20fa0 <___vfprintf_internal_r+0x72c>
   20f9c:	2005883a 	mov	r2,r4
   20fa0:	d8802a15 	stw	r2,168(sp)
   20fa4:	d8003215 	stw	zero,200(sp)
   20fa8:	e7003fcc 	andi	fp,fp,255
   20fac:	e700201c 	xori	fp,fp,128
   20fb0:	e73fe004 	addi	fp,fp,-128
   20fb4:	e0000326 	beq	fp,zero,20fc4 <___vfprintf_internal_r+0x750>
   20fb8:	d8c02a17 	ldw	r3,168(sp)
   20fbc:	18c00044 	addi	r3,r3,1
   20fc0:	d8c02a15 	stw	r3,168(sp)
   20fc4:	90c0008c 	andi	r3,r18,2
   20fc8:	d8c02b15 	stw	r3,172(sp)
   20fcc:	18000326 	beq	r3,zero,20fdc <___vfprintf_internal_r+0x768>
   20fd0:	d8c02a17 	ldw	r3,168(sp)
   20fd4:	18c00084 	addi	r3,r3,2
   20fd8:	d8c02a15 	stw	r3,168(sp)
   20fdc:	90c0210c 	andi	r3,r18,132
   20fe0:	d8c03015 	stw	r3,192(sp)
   20fe4:	1801a31e 	bne	r3,zero,21674 <___vfprintf_internal_r+0xe00>
   20fe8:	d9003117 	ldw	r4,196(sp)
   20fec:	d8c02a17 	ldw	r3,168(sp)
   20ff0:	20e7c83a 	sub	r19,r4,r3
   20ff4:	04c19f0e 	bge	zero,r19,21674 <___vfprintf_internal_r+0xe00>
   20ff8:	02400404 	movi	r9,16
   20ffc:	d8c02017 	ldw	r3,128(sp)
   21000:	d8801f17 	ldw	r2,124(sp)
   21004:	4cc50d0e 	bge	r9,r19,2243c <___vfprintf_internal_r+0x1bc8>
   21008:	014000f4 	movhi	r5,3
   2100c:	297d3184 	addi	r5,r5,-2874
   21010:	dc403b15 	stw	r17,236(sp)
   21014:	d9403515 	stw	r5,212(sp)
   21018:	9823883a 	mov	r17,r19
   2101c:	482d883a 	mov	r22,r9
   21020:	9027883a 	mov	r19,r18
   21024:	070001c4 	movi	fp,7
   21028:	8025883a 	mov	r18,r16
   2102c:	dc002c17 	ldw	r16,176(sp)
   21030:	00000306 	br	21040 <___vfprintf_internal_r+0x7cc>
   21034:	8c7ffc04 	addi	r17,r17,-16
   21038:	42000204 	addi	r8,r8,8
   2103c:	b440130e 	bge	r22,r17,2108c <___vfprintf_internal_r+0x818>
   21040:	010000f4 	movhi	r4,3
   21044:	18c00404 	addi	r3,r3,16
   21048:	10800044 	addi	r2,r2,1
   2104c:	213d3184 	addi	r4,r4,-2874
   21050:	41000015 	stw	r4,0(r8)
   21054:	45800115 	stw	r22,4(r8)
   21058:	d8c02015 	stw	r3,128(sp)
   2105c:	d8801f15 	stw	r2,124(sp)
   21060:	e0bff40e 	bge	fp,r2,21034 <__alt_data_end+0xfffe1034>
   21064:	d9801e04 	addi	r6,sp,120
   21068:	b80b883a 	mov	r5,r23
   2106c:	8009883a 	mov	r4,r16
   21070:	0027e700 	call	27e70 <__sprint_r>
   21074:	103f011e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21078:	8c7ffc04 	addi	r17,r17,-16
   2107c:	d8c02017 	ldw	r3,128(sp)
   21080:	d8801f17 	ldw	r2,124(sp)
   21084:	da000404 	addi	r8,sp,16
   21088:	b47fed16 	blt	r22,r17,21040 <__alt_data_end+0xfffe1040>
   2108c:	9021883a 	mov	r16,r18
   21090:	9825883a 	mov	r18,r19
   21094:	8827883a 	mov	r19,r17
   21098:	dc403b17 	ldw	r17,236(sp)
   2109c:	d9403517 	ldw	r5,212(sp)
   210a0:	98c7883a 	add	r3,r19,r3
   210a4:	10800044 	addi	r2,r2,1
   210a8:	41400015 	stw	r5,0(r8)
   210ac:	44c00115 	stw	r19,4(r8)
   210b0:	d8c02015 	stw	r3,128(sp)
   210b4:	d8801f15 	stw	r2,124(sp)
   210b8:	010001c4 	movi	r4,7
   210bc:	2082a316 	blt	r4,r2,21b4c <___vfprintf_internal_r+0x12d8>
   210c0:	df002787 	ldb	fp,158(sp)
   210c4:	42000204 	addi	r8,r8,8
   210c8:	e0000c26 	beq	fp,zero,210fc <___vfprintf_internal_r+0x888>
   210cc:	d8801f17 	ldw	r2,124(sp)
   210d0:	d9002784 	addi	r4,sp,158
   210d4:	18c00044 	addi	r3,r3,1
   210d8:	10800044 	addi	r2,r2,1
   210dc:	41000015 	stw	r4,0(r8)
   210e0:	01000044 	movi	r4,1
   210e4:	41000115 	stw	r4,4(r8)
   210e8:	d8c02015 	stw	r3,128(sp)
   210ec:	d8801f15 	stw	r2,124(sp)
   210f0:	010001c4 	movi	r4,7
   210f4:	20823c16 	blt	r4,r2,219e8 <___vfprintf_internal_r+0x1174>
   210f8:	42000204 	addi	r8,r8,8
   210fc:	d8802b17 	ldw	r2,172(sp)
   21100:	10000c26 	beq	r2,zero,21134 <___vfprintf_internal_r+0x8c0>
   21104:	d8801f17 	ldw	r2,124(sp)
   21108:	d9002704 	addi	r4,sp,156
   2110c:	18c00084 	addi	r3,r3,2
   21110:	10800044 	addi	r2,r2,1
   21114:	41000015 	stw	r4,0(r8)
   21118:	01000084 	movi	r4,2
   2111c:	41000115 	stw	r4,4(r8)
   21120:	d8c02015 	stw	r3,128(sp)
   21124:	d8801f15 	stw	r2,124(sp)
   21128:	010001c4 	movi	r4,7
   2112c:	20823616 	blt	r4,r2,21a08 <___vfprintf_internal_r+0x1194>
   21130:	42000204 	addi	r8,r8,8
   21134:	d9003017 	ldw	r4,192(sp)
   21138:	00802004 	movi	r2,128
   2113c:	20819926 	beq	r4,r2,217a4 <___vfprintf_internal_r+0xf30>
   21140:	d9402917 	ldw	r5,164(sp)
   21144:	d8802e17 	ldw	r2,184(sp)
   21148:	28adc83a 	sub	r22,r5,r2
   2114c:	0580310e 	bge	zero,r22,21214 <___vfprintf_internal_r+0x9a0>
   21150:	07000404 	movi	fp,16
   21154:	d8801f17 	ldw	r2,124(sp)
   21158:	e584140e 	bge	fp,r22,221ac <___vfprintf_internal_r+0x1938>
   2115c:	014000f4 	movhi	r5,3
   21160:	297d2d84 	addi	r5,r5,-2890
   21164:	dc402915 	stw	r17,164(sp)
   21168:	d9402b15 	stw	r5,172(sp)
   2116c:	b023883a 	mov	r17,r22
   21170:	04c001c4 	movi	r19,7
   21174:	a82d883a 	mov	r22,r21
   21178:	902b883a 	mov	r21,r18
   2117c:	8025883a 	mov	r18,r16
   21180:	dc002c17 	ldw	r16,176(sp)
   21184:	00000306 	br	21194 <___vfprintf_internal_r+0x920>
   21188:	8c7ffc04 	addi	r17,r17,-16
   2118c:	42000204 	addi	r8,r8,8
   21190:	e440110e 	bge	fp,r17,211d8 <___vfprintf_internal_r+0x964>
   21194:	18c00404 	addi	r3,r3,16
   21198:	10800044 	addi	r2,r2,1
   2119c:	45000015 	stw	r20,0(r8)
   211a0:	47000115 	stw	fp,4(r8)
   211a4:	d8c02015 	stw	r3,128(sp)
   211a8:	d8801f15 	stw	r2,124(sp)
   211ac:	98bff60e 	bge	r19,r2,21188 <__alt_data_end+0xfffe1188>
   211b0:	d9801e04 	addi	r6,sp,120
   211b4:	b80b883a 	mov	r5,r23
   211b8:	8009883a 	mov	r4,r16
   211bc:	0027e700 	call	27e70 <__sprint_r>
   211c0:	103eae1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   211c4:	8c7ffc04 	addi	r17,r17,-16
   211c8:	d8c02017 	ldw	r3,128(sp)
   211cc:	d8801f17 	ldw	r2,124(sp)
   211d0:	da000404 	addi	r8,sp,16
   211d4:	e47fef16 	blt	fp,r17,21194 <__alt_data_end+0xfffe1194>
   211d8:	9021883a 	mov	r16,r18
   211dc:	a825883a 	mov	r18,r21
   211e0:	b02b883a 	mov	r21,r22
   211e4:	882d883a 	mov	r22,r17
   211e8:	dc402917 	ldw	r17,164(sp)
   211ec:	d9002b17 	ldw	r4,172(sp)
   211f0:	1d87883a 	add	r3,r3,r22
   211f4:	10800044 	addi	r2,r2,1
   211f8:	41000015 	stw	r4,0(r8)
   211fc:	45800115 	stw	r22,4(r8)
   21200:	d8c02015 	stw	r3,128(sp)
   21204:	d8801f15 	stw	r2,124(sp)
   21208:	010001c4 	movi	r4,7
   2120c:	2081ee16 	blt	r4,r2,219c8 <___vfprintf_internal_r+0x1154>
   21210:	42000204 	addi	r8,r8,8
   21214:	9080400c 	andi	r2,r18,256
   21218:	1001181e 	bne	r2,zero,2167c <___vfprintf_internal_r+0xe08>
   2121c:	d9402e17 	ldw	r5,184(sp)
   21220:	d8801f17 	ldw	r2,124(sp)
   21224:	44000015 	stw	r16,0(r8)
   21228:	1947883a 	add	r3,r3,r5
   2122c:	10800044 	addi	r2,r2,1
   21230:	41400115 	stw	r5,4(r8)
   21234:	d8c02015 	stw	r3,128(sp)
   21238:	d8801f15 	stw	r2,124(sp)
   2123c:	010001c4 	movi	r4,7
   21240:	2081d316 	blt	r4,r2,21990 <___vfprintf_internal_r+0x111c>
   21244:	42000204 	addi	r8,r8,8
   21248:	9480010c 	andi	r18,r18,4
   2124c:	90003226 	beq	r18,zero,21318 <___vfprintf_internal_r+0xaa4>
   21250:	d9403117 	ldw	r5,196(sp)
   21254:	d8802a17 	ldw	r2,168(sp)
   21258:	28a1c83a 	sub	r16,r5,r2
   2125c:	04002e0e 	bge	zero,r16,21318 <___vfprintf_internal_r+0xaa4>
   21260:	04400404 	movi	r17,16
   21264:	d8801f17 	ldw	r2,124(sp)
   21268:	8c04a20e 	bge	r17,r16,224f4 <___vfprintf_internal_r+0x1c80>
   2126c:	014000f4 	movhi	r5,3
   21270:	297d3184 	addi	r5,r5,-2874
   21274:	d9403515 	stw	r5,212(sp)
   21278:	048001c4 	movi	r18,7
   2127c:	dcc02c17 	ldw	r19,176(sp)
   21280:	00000306 	br	21290 <___vfprintf_internal_r+0xa1c>
   21284:	843ffc04 	addi	r16,r16,-16
   21288:	42000204 	addi	r8,r8,8
   2128c:	8c00130e 	bge	r17,r16,212dc <___vfprintf_internal_r+0xa68>
   21290:	010000f4 	movhi	r4,3
   21294:	18c00404 	addi	r3,r3,16
   21298:	10800044 	addi	r2,r2,1
   2129c:	213d3184 	addi	r4,r4,-2874
   212a0:	41000015 	stw	r4,0(r8)
   212a4:	44400115 	stw	r17,4(r8)
   212a8:	d8c02015 	stw	r3,128(sp)
   212ac:	d8801f15 	stw	r2,124(sp)
   212b0:	90bff40e 	bge	r18,r2,21284 <__alt_data_end+0xfffe1284>
   212b4:	d9801e04 	addi	r6,sp,120
   212b8:	b80b883a 	mov	r5,r23
   212bc:	9809883a 	mov	r4,r19
   212c0:	0027e700 	call	27e70 <__sprint_r>
   212c4:	103e6d1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   212c8:	843ffc04 	addi	r16,r16,-16
   212cc:	d8c02017 	ldw	r3,128(sp)
   212d0:	d8801f17 	ldw	r2,124(sp)
   212d4:	da000404 	addi	r8,sp,16
   212d8:	8c3fed16 	blt	r17,r16,21290 <__alt_data_end+0xfffe1290>
   212dc:	d9403517 	ldw	r5,212(sp)
   212e0:	1c07883a 	add	r3,r3,r16
   212e4:	10800044 	addi	r2,r2,1
   212e8:	41400015 	stw	r5,0(r8)
   212ec:	44000115 	stw	r16,4(r8)
   212f0:	d8c02015 	stw	r3,128(sp)
   212f4:	d8801f15 	stw	r2,124(sp)
   212f8:	010001c4 	movi	r4,7
   212fc:	2080060e 	bge	r4,r2,21318 <___vfprintf_internal_r+0xaa4>
   21300:	d9002c17 	ldw	r4,176(sp)
   21304:	d9801e04 	addi	r6,sp,120
   21308:	b80b883a 	mov	r5,r23
   2130c:	0027e700 	call	27e70 <__sprint_r>
   21310:	103e5a1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21314:	d8c02017 	ldw	r3,128(sp)
   21318:	d8803117 	ldw	r2,196(sp)
   2131c:	d9002a17 	ldw	r4,168(sp)
   21320:	1100010e 	bge	r2,r4,21328 <___vfprintf_internal_r+0xab4>
   21324:	2005883a 	mov	r2,r4
   21328:	d9402f17 	ldw	r5,188(sp)
   2132c:	288b883a 	add	r5,r5,r2
   21330:	d9402f15 	stw	r5,188(sp)
   21334:	18019e1e 	bne	r3,zero,219b0 <___vfprintf_internal_r+0x113c>
   21338:	a8800007 	ldb	r2,0(r21)
   2133c:	d8001f15 	stw	zero,124(sp)
   21340:	da000404 	addi	r8,sp,16
   21344:	103d851e 	bne	r2,zero,2095c <__alt_data_end+0xfffe095c>
   21348:	a821883a 	mov	r16,r21
   2134c:	003d9b06 	br	209bc <__alt_data_end+0xfffe09bc>
   21350:	18c03fcc 	andi	r3,r3,255
   21354:	1805c11e 	bne	r3,zero,22a5c <___vfprintf_internal_r+0x21e8>
   21358:	94800414 	ori	r18,r18,16
   2135c:	9080080c 	andi	r2,r18,32
   21360:	10020c26 	beq	r2,zero,21b94 <___vfprintf_internal_r+0x1320>
   21364:	d8802d17 	ldw	r2,180(sp)
   21368:	d9002917 	ldw	r4,164(sp)
   2136c:	d8002785 	stb	zero,158(sp)
   21370:	10c00204 	addi	r3,r2,8
   21374:	14c00017 	ldw	r19,0(r2)
   21378:	15800117 	ldw	r22,4(r2)
   2137c:	20040f16 	blt	r4,zero,223bc <___vfprintf_internal_r+0x1b48>
   21380:	013fdfc4 	movi	r4,-129
   21384:	9d84b03a 	or	r2,r19,r22
   21388:	d8c02d15 	stw	r3,180(sp)
   2138c:	9124703a 	and	r18,r18,r4
   21390:	0039883a 	mov	fp,zero
   21394:	103e891e 	bne	r2,zero,20dbc <__alt_data_end+0xfffe0dbc>
   21398:	d9002917 	ldw	r4,164(sp)
   2139c:	2002c11e 	bne	r4,zero,21ea4 <___vfprintf_internal_r+0x1630>
   213a0:	d8002915 	stw	zero,164(sp)
   213a4:	d8002e15 	stw	zero,184(sp)
   213a8:	dc001e04 	addi	r16,sp,120
   213ac:	003ef806 	br	20f90 <__alt_data_end+0xfffe0f90>
   213b0:	18c03fcc 	andi	r3,r3,255
   213b4:	18059d1e 	bne	r3,zero,22a2c <___vfprintf_internal_r+0x21b8>
   213b8:	014000f4 	movhi	r5,3
   213bc:	297d2104 	addi	r5,r5,-2940
   213c0:	d9403915 	stw	r5,228(sp)
   213c4:	9080080c 	andi	r2,r18,32
   213c8:	10005226 	beq	r2,zero,21514 <___vfprintf_internal_r+0xca0>
   213cc:	d8802d17 	ldw	r2,180(sp)
   213d0:	14c00017 	ldw	r19,0(r2)
   213d4:	15800117 	ldw	r22,4(r2)
   213d8:	10800204 	addi	r2,r2,8
   213dc:	d8802d15 	stw	r2,180(sp)
   213e0:	9080004c 	andi	r2,r18,1
   213e4:	10019026 	beq	r2,zero,21a28 <___vfprintf_internal_r+0x11b4>
   213e8:	9d84b03a 	or	r2,r19,r22
   213ec:	10036926 	beq	r2,zero,22194 <___vfprintf_internal_r+0x1920>
   213f0:	d8c02917 	ldw	r3,164(sp)
   213f4:	00800c04 	movi	r2,48
   213f8:	d8802705 	stb	r2,156(sp)
   213fc:	dc402745 	stb	r17,157(sp)
   21400:	d8002785 	stb	zero,158(sp)
   21404:	90800094 	ori	r2,r18,2
   21408:	18045d16 	blt	r3,zero,22580 <___vfprintf_internal_r+0x1d0c>
   2140c:	00bfdfc4 	movi	r2,-129
   21410:	90a4703a 	and	r18,r18,r2
   21414:	94800094 	ori	r18,r18,2
   21418:	0039883a 	mov	fp,zero
   2141c:	d9003917 	ldw	r4,228(sp)
   21420:	dc001e04 	addi	r16,sp,120
   21424:	988003cc 	andi	r2,r19,15
   21428:	b006973a 	slli	r3,r22,28
   2142c:	2085883a 	add	r2,r4,r2
   21430:	9826d13a 	srli	r19,r19,4
   21434:	10800003 	ldbu	r2,0(r2)
   21438:	b02cd13a 	srli	r22,r22,4
   2143c:	843fffc4 	addi	r16,r16,-1
   21440:	1ce6b03a 	or	r19,r3,r19
   21444:	80800005 	stb	r2,0(r16)
   21448:	9d84b03a 	or	r2,r19,r22
   2144c:	103ff51e 	bne	r2,zero,21424 <__alt_data_end+0xfffe1424>
   21450:	d8c02817 	ldw	r3,160(sp)
   21454:	1c07c83a 	sub	r3,r3,r16
   21458:	d8c02e15 	stw	r3,184(sp)
   2145c:	003ecc06 	br	20f90 <__alt_data_end+0xfffe0f90>
   21460:	18c03fcc 	andi	r3,r3,255
   21464:	183e9f26 	beq	r3,zero,20ee4 <__alt_data_end+0xfffe0ee4>
   21468:	d9c02785 	stb	r7,158(sp)
   2146c:	003e9d06 	br	20ee4 <__alt_data_end+0xfffe0ee4>
   21470:	00c00044 	movi	r3,1
   21474:	01c00ac4 	movi	r7,43
   21478:	ac400007 	ldb	r17,0(r21)
   2147c:	003d5e06 	br	209f8 <__alt_data_end+0xfffe09f8>
   21480:	94800814 	ori	r18,r18,32
   21484:	ac400007 	ldb	r17,0(r21)
   21488:	003d5b06 	br	209f8 <__alt_data_end+0xfffe09f8>
   2148c:	d8c02d17 	ldw	r3,180(sp)
   21490:	d8002785 	stb	zero,158(sp)
   21494:	1c000017 	ldw	r16,0(r3)
   21498:	1cc00104 	addi	r19,r3,4
   2149c:	80041926 	beq	r16,zero,22504 <___vfprintf_internal_r+0x1c90>
   214a0:	d9002917 	ldw	r4,164(sp)
   214a4:	2003d016 	blt	r4,zero,223e8 <___vfprintf_internal_r+0x1b74>
   214a8:	200d883a 	mov	r6,r4
   214ac:	000b883a 	mov	r5,zero
   214b0:	8009883a 	mov	r4,r16
   214b4:	da003d15 	stw	r8,244(sp)
   214b8:	00260840 	call	26084 <memchr>
   214bc:	da003d17 	ldw	r8,244(sp)
   214c0:	10045426 	beq	r2,zero,22614 <___vfprintf_internal_r+0x1da0>
   214c4:	1405c83a 	sub	r2,r2,r16
   214c8:	d8802e15 	stw	r2,184(sp)
   214cc:	1003cc16 	blt	r2,zero,22400 <___vfprintf_internal_r+0x1b8c>
   214d0:	df002783 	ldbu	fp,158(sp)
   214d4:	d8802a15 	stw	r2,168(sp)
   214d8:	dcc02d15 	stw	r19,180(sp)
   214dc:	d8002915 	stw	zero,164(sp)
   214e0:	d8003215 	stw	zero,200(sp)
   214e4:	003eb006 	br	20fa8 <__alt_data_end+0xfffe0fa8>
   214e8:	18c03fcc 	andi	r3,r3,255
   214ec:	183f9b26 	beq	r3,zero,2135c <__alt_data_end+0xfffe135c>
   214f0:	d9c02785 	stb	r7,158(sp)
   214f4:	003f9906 	br	2135c <__alt_data_end+0xfffe135c>
   214f8:	18c03fcc 	andi	r3,r3,255
   214fc:	1805551e 	bne	r3,zero,22a54 <___vfprintf_internal_r+0x21e0>
   21500:	014000f4 	movhi	r5,3
   21504:	297d2604 	addi	r5,r5,-2920
   21508:	d9403915 	stw	r5,228(sp)
   2150c:	9080080c 	andi	r2,r18,32
   21510:	103fae1e 	bne	r2,zero,213cc <__alt_data_end+0xfffe13cc>
   21514:	9080040c 	andi	r2,r18,16
   21518:	1002de26 	beq	r2,zero,22094 <___vfprintf_internal_r+0x1820>
   2151c:	d8c02d17 	ldw	r3,180(sp)
   21520:	002d883a 	mov	r22,zero
   21524:	1cc00017 	ldw	r19,0(r3)
   21528:	18c00104 	addi	r3,r3,4
   2152c:	d8c02d15 	stw	r3,180(sp)
   21530:	003fab06 	br	213e0 <__alt_data_end+0xfffe13e0>
   21534:	38803fcc 	andi	r2,r7,255
   21538:	1080201c 	xori	r2,r2,128
   2153c:	10bfe004 	addi	r2,r2,-128
   21540:	1002d21e 	bne	r2,zero,2208c <___vfprintf_internal_r+0x1818>
   21544:	00c00044 	movi	r3,1
   21548:	01c00804 	movi	r7,32
   2154c:	ac400007 	ldb	r17,0(r21)
   21550:	003d2906 	br	209f8 <__alt_data_end+0xfffe09f8>
   21554:	94800054 	ori	r18,r18,1
   21558:	ac400007 	ldb	r17,0(r21)
   2155c:	003d2606 	br	209f8 <__alt_data_end+0xfffe09f8>
   21560:	18c03fcc 	andi	r3,r3,255
   21564:	183e0526 	beq	r3,zero,20d7c <__alt_data_end+0xfffe0d7c>
   21568:	d9c02785 	stb	r7,158(sp)
   2156c:	003e0306 	br	20d7c <__alt_data_end+0xfffe0d7c>
   21570:	94801014 	ori	r18,r18,64
   21574:	ac400007 	ldb	r17,0(r21)
   21578:	003d1f06 	br	209f8 <__alt_data_end+0xfffe09f8>
   2157c:	ac400007 	ldb	r17,0(r21)
   21580:	8a438726 	beq	r17,r9,223a0 <___vfprintf_internal_r+0x1b2c>
   21584:	94800414 	ori	r18,r18,16
   21588:	003d1b06 	br	209f8 <__alt_data_end+0xfffe09f8>
   2158c:	18c03fcc 	andi	r3,r3,255
   21590:	1805341e 	bne	r3,zero,22a64 <___vfprintf_internal_r+0x21f0>
   21594:	9080080c 	andi	r2,r18,32
   21598:	1002cd26 	beq	r2,zero,220d0 <___vfprintf_internal_r+0x185c>
   2159c:	d9402d17 	ldw	r5,180(sp)
   215a0:	d9002f17 	ldw	r4,188(sp)
   215a4:	28800017 	ldw	r2,0(r5)
   215a8:	2007d7fa 	srai	r3,r4,31
   215ac:	29400104 	addi	r5,r5,4
   215b0:	d9402d15 	stw	r5,180(sp)
   215b4:	11000015 	stw	r4,0(r2)
   215b8:	10c00115 	stw	r3,4(r2)
   215bc:	003ce506 	br	20954 <__alt_data_end+0xfffe0954>
   215c0:	d8c02d17 	ldw	r3,180(sp)
   215c4:	d9002d17 	ldw	r4,180(sp)
   215c8:	d8002785 	stb	zero,158(sp)
   215cc:	18800017 	ldw	r2,0(r3)
   215d0:	21000104 	addi	r4,r4,4
   215d4:	00c00044 	movi	r3,1
   215d8:	d8c02a15 	stw	r3,168(sp)
   215dc:	d8801405 	stb	r2,80(sp)
   215e0:	d9002d15 	stw	r4,180(sp)
   215e4:	d8c02e15 	stw	r3,184(sp)
   215e8:	d8002915 	stw	zero,164(sp)
   215ec:	d8003215 	stw	zero,200(sp)
   215f0:	dc001404 	addi	r16,sp,80
   215f4:	0039883a 	mov	fp,zero
   215f8:	003e7206 	br	20fc4 <__alt_data_end+0xfffe0fc4>
   215fc:	010000f4 	movhi	r4,3
   21600:	213d2604 	addi	r4,r4,-2920
   21604:	0039883a 	mov	fp,zero
   21608:	d9003915 	stw	r4,228(sp)
   2160c:	04401e04 	movi	r17,120
   21610:	003f8206 	br	2141c <__alt_data_end+0xfffe141c>
   21614:	18c03fcc 	andi	r3,r3,255
   21618:	1805061e 	bne	r3,zero,22a34 <___vfprintf_internal_r+0x21c0>
   2161c:	883d9126 	beq	r17,zero,20c64 <__alt_data_end+0xfffe0c64>
   21620:	00c00044 	movi	r3,1
   21624:	d8c02a15 	stw	r3,168(sp)
   21628:	dc401405 	stb	r17,80(sp)
   2162c:	d8002785 	stb	zero,158(sp)
   21630:	003fec06 	br	215e4 <__alt_data_end+0xfffe15e4>
   21634:	014000f4 	movhi	r5,3
   21638:	297d2604 	addi	r5,r5,-2920
   2163c:	d9403915 	stw	r5,228(sp)
   21640:	d8c02d15 	stw	r3,180(sp)
   21644:	1025883a 	mov	r18,r2
   21648:	04401e04 	movi	r17,120
   2164c:	9d84b03a 	or	r2,r19,r22
   21650:	1000fc1e 	bne	r2,zero,21a44 <___vfprintf_internal_r+0x11d0>
   21654:	0039883a 	mov	fp,zero
   21658:	00800084 	movi	r2,2
   2165c:	10803fcc 	andi	r2,r2,255
   21660:	00c00044 	movi	r3,1
   21664:	10c20f26 	beq	r2,r3,21ea4 <___vfprintf_internal_r+0x1630>
   21668:	00c00084 	movi	r3,2
   2166c:	10fd6326 	beq	r2,r3,20bfc <__alt_data_end+0xfffe0bfc>
   21670:	003e2d06 	br	20f28 <__alt_data_end+0xfffe0f28>
   21674:	d8c02017 	ldw	r3,128(sp)
   21678:	003e9306 	br	210c8 <__alt_data_end+0xfffe10c8>
   2167c:	00801944 	movi	r2,101
   21680:	14407e0e 	bge	r2,r17,2187c <___vfprintf_internal_r+0x1008>
   21684:	d9003617 	ldw	r4,216(sp)
   21688:	d9403817 	ldw	r5,224(sp)
   2168c:	000d883a 	mov	r6,zero
   21690:	000f883a 	mov	r7,zero
   21694:	d8c03c15 	stw	r3,240(sp)
   21698:	da003d15 	stw	r8,244(sp)
   2169c:	002bae80 	call	2bae8 <__eqdf2>
   216a0:	d8c03c17 	ldw	r3,240(sp)
   216a4:	da003d17 	ldw	r8,244(sp)
   216a8:	1000f71e 	bne	r2,zero,21a88 <___vfprintf_internal_r+0x1214>
   216ac:	d8801f17 	ldw	r2,124(sp)
   216b0:	010000f4 	movhi	r4,3
   216b4:	213d2d04 	addi	r4,r4,-2892
   216b8:	18c00044 	addi	r3,r3,1
   216bc:	10800044 	addi	r2,r2,1
   216c0:	41000015 	stw	r4,0(r8)
   216c4:	01000044 	movi	r4,1
   216c8:	41000115 	stw	r4,4(r8)
   216cc:	d8c02015 	stw	r3,128(sp)
   216d0:	d8801f15 	stw	r2,124(sp)
   216d4:	010001c4 	movi	r4,7
   216d8:	2082b816 	blt	r4,r2,221bc <___vfprintf_internal_r+0x1948>
   216dc:	42000204 	addi	r8,r8,8
   216e0:	d8802617 	ldw	r2,152(sp)
   216e4:	d9403317 	ldw	r5,204(sp)
   216e8:	11400216 	blt	r2,r5,216f4 <___vfprintf_internal_r+0xe80>
   216ec:	9080004c 	andi	r2,r18,1
   216f0:	103ed526 	beq	r2,zero,21248 <__alt_data_end+0xfffe1248>
   216f4:	d8803717 	ldw	r2,220(sp)
   216f8:	d9003417 	ldw	r4,208(sp)
   216fc:	d9403717 	ldw	r5,220(sp)
   21700:	1887883a 	add	r3,r3,r2
   21704:	d8801f17 	ldw	r2,124(sp)
   21708:	41000015 	stw	r4,0(r8)
   2170c:	41400115 	stw	r5,4(r8)
   21710:	10800044 	addi	r2,r2,1
   21714:	d8c02015 	stw	r3,128(sp)
   21718:	d8801f15 	stw	r2,124(sp)
   2171c:	010001c4 	movi	r4,7
   21720:	20832916 	blt	r4,r2,223c8 <___vfprintf_internal_r+0x1b54>
   21724:	42000204 	addi	r8,r8,8
   21728:	d8803317 	ldw	r2,204(sp)
   2172c:	143fffc4 	addi	r16,r2,-1
   21730:	043ec50e 	bge	zero,r16,21248 <__alt_data_end+0xfffe1248>
   21734:	04400404 	movi	r17,16
   21738:	d8801f17 	ldw	r2,124(sp)
   2173c:	8c00880e 	bge	r17,r16,21960 <___vfprintf_internal_r+0x10ec>
   21740:	014000f4 	movhi	r5,3
   21744:	297d2d84 	addi	r5,r5,-2890
   21748:	d9402b15 	stw	r5,172(sp)
   2174c:	058001c4 	movi	r22,7
   21750:	dcc02c17 	ldw	r19,176(sp)
   21754:	00000306 	br	21764 <___vfprintf_internal_r+0xef0>
   21758:	42000204 	addi	r8,r8,8
   2175c:	843ffc04 	addi	r16,r16,-16
   21760:	8c00820e 	bge	r17,r16,2196c <___vfprintf_internal_r+0x10f8>
   21764:	18c00404 	addi	r3,r3,16
   21768:	10800044 	addi	r2,r2,1
   2176c:	45000015 	stw	r20,0(r8)
   21770:	44400115 	stw	r17,4(r8)
   21774:	d8c02015 	stw	r3,128(sp)
   21778:	d8801f15 	stw	r2,124(sp)
   2177c:	b0bff60e 	bge	r22,r2,21758 <__alt_data_end+0xfffe1758>
   21780:	d9801e04 	addi	r6,sp,120
   21784:	b80b883a 	mov	r5,r23
   21788:	9809883a 	mov	r4,r19
   2178c:	0027e700 	call	27e70 <__sprint_r>
   21790:	103d3a1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21794:	d8c02017 	ldw	r3,128(sp)
   21798:	d8801f17 	ldw	r2,124(sp)
   2179c:	da000404 	addi	r8,sp,16
   217a0:	003fee06 	br	2175c <__alt_data_end+0xfffe175c>
   217a4:	d9403117 	ldw	r5,196(sp)
   217a8:	d8802a17 	ldw	r2,168(sp)
   217ac:	28adc83a 	sub	r22,r5,r2
   217b0:	05be630e 	bge	zero,r22,21140 <__alt_data_end+0xfffe1140>
   217b4:	07000404 	movi	fp,16
   217b8:	d8801f17 	ldw	r2,124(sp)
   217bc:	e5838f0e 	bge	fp,r22,225fc <___vfprintf_internal_r+0x1d88>
   217c0:	014000f4 	movhi	r5,3
   217c4:	297d2d84 	addi	r5,r5,-2890
   217c8:	dc403015 	stw	r17,192(sp)
   217cc:	d9402b15 	stw	r5,172(sp)
   217d0:	b023883a 	mov	r17,r22
   217d4:	04c001c4 	movi	r19,7
   217d8:	a82d883a 	mov	r22,r21
   217dc:	902b883a 	mov	r21,r18
   217e0:	8025883a 	mov	r18,r16
   217e4:	dc002c17 	ldw	r16,176(sp)
   217e8:	00000306 	br	217f8 <___vfprintf_internal_r+0xf84>
   217ec:	8c7ffc04 	addi	r17,r17,-16
   217f0:	42000204 	addi	r8,r8,8
   217f4:	e440110e 	bge	fp,r17,2183c <___vfprintf_internal_r+0xfc8>
   217f8:	18c00404 	addi	r3,r3,16
   217fc:	10800044 	addi	r2,r2,1
   21800:	45000015 	stw	r20,0(r8)
   21804:	47000115 	stw	fp,4(r8)
   21808:	d8c02015 	stw	r3,128(sp)
   2180c:	d8801f15 	stw	r2,124(sp)
   21810:	98bff60e 	bge	r19,r2,217ec <__alt_data_end+0xfffe17ec>
   21814:	d9801e04 	addi	r6,sp,120
   21818:	b80b883a 	mov	r5,r23
   2181c:	8009883a 	mov	r4,r16
   21820:	0027e700 	call	27e70 <__sprint_r>
   21824:	103d151e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21828:	8c7ffc04 	addi	r17,r17,-16
   2182c:	d8c02017 	ldw	r3,128(sp)
   21830:	d8801f17 	ldw	r2,124(sp)
   21834:	da000404 	addi	r8,sp,16
   21838:	e47fef16 	blt	fp,r17,217f8 <__alt_data_end+0xfffe17f8>
   2183c:	9021883a 	mov	r16,r18
   21840:	a825883a 	mov	r18,r21
   21844:	b02b883a 	mov	r21,r22
   21848:	882d883a 	mov	r22,r17
   2184c:	dc403017 	ldw	r17,192(sp)
   21850:	d9002b17 	ldw	r4,172(sp)
   21854:	1d87883a 	add	r3,r3,r22
   21858:	10800044 	addi	r2,r2,1
   2185c:	41000015 	stw	r4,0(r8)
   21860:	45800115 	stw	r22,4(r8)
   21864:	d8c02015 	stw	r3,128(sp)
   21868:	d8801f15 	stw	r2,124(sp)
   2186c:	010001c4 	movi	r4,7
   21870:	20818e16 	blt	r4,r2,21eac <___vfprintf_internal_r+0x1638>
   21874:	42000204 	addi	r8,r8,8
   21878:	003e3106 	br	21140 <__alt_data_end+0xfffe1140>
   2187c:	d9403317 	ldw	r5,204(sp)
   21880:	00800044 	movi	r2,1
   21884:	18c00044 	addi	r3,r3,1
   21888:	1141530e 	bge	r2,r5,21dd8 <___vfprintf_internal_r+0x1564>
   2188c:	dc401f17 	ldw	r17,124(sp)
   21890:	00800044 	movi	r2,1
   21894:	40800115 	stw	r2,4(r8)
   21898:	8c400044 	addi	r17,r17,1
   2189c:	44000015 	stw	r16,0(r8)
   218a0:	d8c02015 	stw	r3,128(sp)
   218a4:	dc401f15 	stw	r17,124(sp)
   218a8:	008001c4 	movi	r2,7
   218ac:	14416b16 	blt	r2,r17,21e5c <___vfprintf_internal_r+0x15e8>
   218b0:	42000204 	addi	r8,r8,8
   218b4:	d8803717 	ldw	r2,220(sp)
   218b8:	d9003417 	ldw	r4,208(sp)
   218bc:	8c400044 	addi	r17,r17,1
   218c0:	10c7883a 	add	r3,r2,r3
   218c4:	40800115 	stw	r2,4(r8)
   218c8:	41000015 	stw	r4,0(r8)
   218cc:	d8c02015 	stw	r3,128(sp)
   218d0:	dc401f15 	stw	r17,124(sp)
   218d4:	008001c4 	movi	r2,7
   218d8:	14416916 	blt	r2,r17,21e80 <___vfprintf_internal_r+0x160c>
   218dc:	45800204 	addi	r22,r8,8
   218e0:	d9003617 	ldw	r4,216(sp)
   218e4:	d9403817 	ldw	r5,224(sp)
   218e8:	000d883a 	mov	r6,zero
   218ec:	000f883a 	mov	r7,zero
   218f0:	d8c03c15 	stw	r3,240(sp)
   218f4:	002bae80 	call	2bae8 <__eqdf2>
   218f8:	d8c03c17 	ldw	r3,240(sp)
   218fc:	1000bc26 	beq	r2,zero,21bf0 <___vfprintf_internal_r+0x137c>
   21900:	d9403317 	ldw	r5,204(sp)
   21904:	84000044 	addi	r16,r16,1
   21908:	8c400044 	addi	r17,r17,1
   2190c:	28bfffc4 	addi	r2,r5,-1
   21910:	1887883a 	add	r3,r3,r2
   21914:	b0800115 	stw	r2,4(r22)
   21918:	b4000015 	stw	r16,0(r22)
   2191c:	d8c02015 	stw	r3,128(sp)
   21920:	dc401f15 	stw	r17,124(sp)
   21924:	008001c4 	movi	r2,7
   21928:	14414316 	blt	r2,r17,21e38 <___vfprintf_internal_r+0x15c4>
   2192c:	b5800204 	addi	r22,r22,8
   21930:	d9003a17 	ldw	r4,232(sp)
   21934:	df0022c4 	addi	fp,sp,139
   21938:	8c400044 	addi	r17,r17,1
   2193c:	20c7883a 	add	r3,r4,r3
   21940:	b7000015 	stw	fp,0(r22)
   21944:	b1000115 	stw	r4,4(r22)
   21948:	d8c02015 	stw	r3,128(sp)
   2194c:	dc401f15 	stw	r17,124(sp)
   21950:	008001c4 	movi	r2,7
   21954:	14400e16 	blt	r2,r17,21990 <___vfprintf_internal_r+0x111c>
   21958:	b2000204 	addi	r8,r22,8
   2195c:	003e3a06 	br	21248 <__alt_data_end+0xfffe1248>
   21960:	010000f4 	movhi	r4,3
   21964:	213d2d84 	addi	r4,r4,-2890
   21968:	d9002b15 	stw	r4,172(sp)
   2196c:	d9002b17 	ldw	r4,172(sp)
   21970:	1c07883a 	add	r3,r3,r16
   21974:	44000115 	stw	r16,4(r8)
   21978:	41000015 	stw	r4,0(r8)
   2197c:	10800044 	addi	r2,r2,1
   21980:	d8c02015 	stw	r3,128(sp)
   21984:	d8801f15 	stw	r2,124(sp)
   21988:	010001c4 	movi	r4,7
   2198c:	20be2d0e 	bge	r4,r2,21244 <__alt_data_end+0xfffe1244>
   21990:	d9002c17 	ldw	r4,176(sp)
   21994:	d9801e04 	addi	r6,sp,120
   21998:	b80b883a 	mov	r5,r23
   2199c:	0027e700 	call	27e70 <__sprint_r>
   219a0:	103cb61e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   219a4:	d8c02017 	ldw	r3,128(sp)
   219a8:	da000404 	addi	r8,sp,16
   219ac:	003e2606 	br	21248 <__alt_data_end+0xfffe1248>
   219b0:	d9002c17 	ldw	r4,176(sp)
   219b4:	d9801e04 	addi	r6,sp,120
   219b8:	b80b883a 	mov	r5,r23
   219bc:	0027e700 	call	27e70 <__sprint_r>
   219c0:	103e5d26 	beq	r2,zero,21338 <__alt_data_end+0xfffe1338>
   219c4:	003cad06 	br	20c7c <__alt_data_end+0xfffe0c7c>
   219c8:	d9002c17 	ldw	r4,176(sp)
   219cc:	d9801e04 	addi	r6,sp,120
   219d0:	b80b883a 	mov	r5,r23
   219d4:	0027e700 	call	27e70 <__sprint_r>
   219d8:	103ca81e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   219dc:	d8c02017 	ldw	r3,128(sp)
   219e0:	da000404 	addi	r8,sp,16
   219e4:	003e0b06 	br	21214 <__alt_data_end+0xfffe1214>
   219e8:	d9002c17 	ldw	r4,176(sp)
   219ec:	d9801e04 	addi	r6,sp,120
   219f0:	b80b883a 	mov	r5,r23
   219f4:	0027e700 	call	27e70 <__sprint_r>
   219f8:	103ca01e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   219fc:	d8c02017 	ldw	r3,128(sp)
   21a00:	da000404 	addi	r8,sp,16
   21a04:	003dbd06 	br	210fc <__alt_data_end+0xfffe10fc>
   21a08:	d9002c17 	ldw	r4,176(sp)
   21a0c:	d9801e04 	addi	r6,sp,120
   21a10:	b80b883a 	mov	r5,r23
   21a14:	0027e700 	call	27e70 <__sprint_r>
   21a18:	103c981e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21a1c:	d8c02017 	ldw	r3,128(sp)
   21a20:	da000404 	addi	r8,sp,16
   21a24:	003dc306 	br	21134 <__alt_data_end+0xfffe1134>
   21a28:	d8802917 	ldw	r2,164(sp)
   21a2c:	d8002785 	stb	zero,158(sp)
   21a30:	103f0616 	blt	r2,zero,2164c <__alt_data_end+0xfffe164c>
   21a34:	00ffdfc4 	movi	r3,-129
   21a38:	9d84b03a 	or	r2,r19,r22
   21a3c:	90e4703a 	and	r18,r18,r3
   21a40:	103c6b26 	beq	r2,zero,20bf0 <__alt_data_end+0xfffe0bf0>
   21a44:	0039883a 	mov	fp,zero
   21a48:	003e7406 	br	2141c <__alt_data_end+0xfffe141c>
   21a4c:	9080040c 	andi	r2,r18,16
   21a50:	1001b326 	beq	r2,zero,22120 <___vfprintf_internal_r+0x18ac>
   21a54:	d9002d17 	ldw	r4,180(sp)
   21a58:	d9402917 	ldw	r5,164(sp)
   21a5c:	d8002785 	stb	zero,158(sp)
   21a60:	20800104 	addi	r2,r4,4
   21a64:	24c00017 	ldw	r19,0(r4)
   21a68:	002d883a 	mov	r22,zero
   21a6c:	2801b516 	blt	r5,zero,22144 <___vfprintf_internal_r+0x18d0>
   21a70:	00ffdfc4 	movi	r3,-129
   21a74:	d8802d15 	stw	r2,180(sp)
   21a78:	90e4703a 	and	r18,r18,r3
   21a7c:	983d2726 	beq	r19,zero,20f1c <__alt_data_end+0xfffe0f1c>
   21a80:	0039883a 	mov	fp,zero
   21a84:	003d2a06 	br	20f30 <__alt_data_end+0xfffe0f30>
   21a88:	dc402617 	ldw	r17,152(sp)
   21a8c:	0441d30e 	bge	zero,r17,221dc <___vfprintf_internal_r+0x1968>
   21a90:	dc403217 	ldw	r17,200(sp)
   21a94:	d8803317 	ldw	r2,204(sp)
   21a98:	1440010e 	bge	r2,r17,21aa0 <___vfprintf_internal_r+0x122c>
   21a9c:	1023883a 	mov	r17,r2
   21aa0:	04400a0e 	bge	zero,r17,21acc <___vfprintf_internal_r+0x1258>
   21aa4:	d8801f17 	ldw	r2,124(sp)
   21aa8:	1c47883a 	add	r3,r3,r17
   21aac:	44000015 	stw	r16,0(r8)
   21ab0:	10800044 	addi	r2,r2,1
   21ab4:	44400115 	stw	r17,4(r8)
   21ab8:	d8c02015 	stw	r3,128(sp)
   21abc:	d8801f15 	stw	r2,124(sp)
   21ac0:	010001c4 	movi	r4,7
   21ac4:	20826516 	blt	r4,r2,2245c <___vfprintf_internal_r+0x1be8>
   21ac8:	42000204 	addi	r8,r8,8
   21acc:	88026116 	blt	r17,zero,22454 <___vfprintf_internal_r+0x1be0>
   21ad0:	d9003217 	ldw	r4,200(sp)
   21ad4:	2463c83a 	sub	r17,r4,r17
   21ad8:	04407b0e 	bge	zero,r17,21cc8 <___vfprintf_internal_r+0x1454>
   21adc:	05800404 	movi	r22,16
   21ae0:	d8801f17 	ldw	r2,124(sp)
   21ae4:	b4419d0e 	bge	r22,r17,2215c <___vfprintf_internal_r+0x18e8>
   21ae8:	010000f4 	movhi	r4,3
   21aec:	213d2d84 	addi	r4,r4,-2890
   21af0:	d9002b15 	stw	r4,172(sp)
   21af4:	070001c4 	movi	fp,7
   21af8:	dcc02c17 	ldw	r19,176(sp)
   21afc:	00000306 	br	21b0c <___vfprintf_internal_r+0x1298>
   21b00:	42000204 	addi	r8,r8,8
   21b04:	8c7ffc04 	addi	r17,r17,-16
   21b08:	b441970e 	bge	r22,r17,22168 <___vfprintf_internal_r+0x18f4>
   21b0c:	18c00404 	addi	r3,r3,16
   21b10:	10800044 	addi	r2,r2,1
   21b14:	45000015 	stw	r20,0(r8)
   21b18:	45800115 	stw	r22,4(r8)
   21b1c:	d8c02015 	stw	r3,128(sp)
   21b20:	d8801f15 	stw	r2,124(sp)
   21b24:	e0bff60e 	bge	fp,r2,21b00 <__alt_data_end+0xfffe1b00>
   21b28:	d9801e04 	addi	r6,sp,120
   21b2c:	b80b883a 	mov	r5,r23
   21b30:	9809883a 	mov	r4,r19
   21b34:	0027e700 	call	27e70 <__sprint_r>
   21b38:	103c501e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21b3c:	d8c02017 	ldw	r3,128(sp)
   21b40:	d8801f17 	ldw	r2,124(sp)
   21b44:	da000404 	addi	r8,sp,16
   21b48:	003fee06 	br	21b04 <__alt_data_end+0xfffe1b04>
   21b4c:	d9002c17 	ldw	r4,176(sp)
   21b50:	d9801e04 	addi	r6,sp,120
   21b54:	b80b883a 	mov	r5,r23
   21b58:	0027e700 	call	27e70 <__sprint_r>
   21b5c:	103c471e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21b60:	d8c02017 	ldw	r3,128(sp)
   21b64:	df002787 	ldb	fp,158(sp)
   21b68:	da000404 	addi	r8,sp,16
   21b6c:	003d5606 	br	210c8 <__alt_data_end+0xfffe10c8>
   21b70:	9080040c 	andi	r2,r18,16
   21b74:	10016126 	beq	r2,zero,220fc <___vfprintf_internal_r+0x1888>
   21b78:	d8802d17 	ldw	r2,180(sp)
   21b7c:	14c00017 	ldw	r19,0(r2)
   21b80:	10800104 	addi	r2,r2,4
   21b84:	d8802d15 	stw	r2,180(sp)
   21b88:	982dd7fa 	srai	r22,r19,31
   21b8c:	b005883a 	mov	r2,r22
   21b90:	003c8206 	br	20d9c <__alt_data_end+0xfffe0d9c>
   21b94:	9080040c 	andi	r2,r18,16
   21b98:	10003526 	beq	r2,zero,21c70 <___vfprintf_internal_r+0x13fc>
   21b9c:	d9402d17 	ldw	r5,180(sp)
   21ba0:	d8c02917 	ldw	r3,164(sp)
   21ba4:	d8002785 	stb	zero,158(sp)
   21ba8:	28800104 	addi	r2,r5,4
   21bac:	2cc00017 	ldw	r19,0(r5)
   21bb0:	002d883a 	mov	r22,zero
   21bb4:	18003716 	blt	r3,zero,21c94 <___vfprintf_internal_r+0x1420>
   21bb8:	00ffdfc4 	movi	r3,-129
   21bbc:	d8802d15 	stw	r2,180(sp)
   21bc0:	90e4703a 	and	r18,r18,r3
   21bc4:	0039883a 	mov	fp,zero
   21bc8:	983df326 	beq	r19,zero,21398 <__alt_data_end+0xfffe1398>
   21bcc:	00800244 	movi	r2,9
   21bd0:	14fc7b36 	bltu	r2,r19,20dc0 <__alt_data_end+0xfffe0dc0>
   21bd4:	d8c02817 	ldw	r3,160(sp)
   21bd8:	dc001dc4 	addi	r16,sp,119
   21bdc:	9cc00c04 	addi	r19,r19,48
   21be0:	1c07c83a 	sub	r3,r3,r16
   21be4:	dcc01dc5 	stb	r19,119(sp)
   21be8:	d8c02e15 	stw	r3,184(sp)
   21bec:	003ce806 	br	20f90 <__alt_data_end+0xfffe0f90>
   21bf0:	d8803317 	ldw	r2,204(sp)
   21bf4:	143fffc4 	addi	r16,r2,-1
   21bf8:	043f4d0e 	bge	zero,r16,21930 <__alt_data_end+0xfffe1930>
   21bfc:	07000404 	movi	fp,16
   21c00:	e400810e 	bge	fp,r16,21e08 <___vfprintf_internal_r+0x1594>
   21c04:	014000f4 	movhi	r5,3
   21c08:	297d2d84 	addi	r5,r5,-2890
   21c0c:	d9402b15 	stw	r5,172(sp)
   21c10:	01c001c4 	movi	r7,7
   21c14:	dcc02c17 	ldw	r19,176(sp)
   21c18:	00000306 	br	21c28 <___vfprintf_internal_r+0x13b4>
   21c1c:	b5800204 	addi	r22,r22,8
   21c20:	843ffc04 	addi	r16,r16,-16
   21c24:	e4007b0e 	bge	fp,r16,21e14 <___vfprintf_internal_r+0x15a0>
   21c28:	18c00404 	addi	r3,r3,16
   21c2c:	8c400044 	addi	r17,r17,1
   21c30:	b5000015 	stw	r20,0(r22)
   21c34:	b7000115 	stw	fp,4(r22)
   21c38:	d8c02015 	stw	r3,128(sp)
   21c3c:	dc401f15 	stw	r17,124(sp)
   21c40:	3c7ff60e 	bge	r7,r17,21c1c <__alt_data_end+0xfffe1c1c>
   21c44:	d9801e04 	addi	r6,sp,120
   21c48:	b80b883a 	mov	r5,r23
   21c4c:	9809883a 	mov	r4,r19
   21c50:	d9c03c15 	stw	r7,240(sp)
   21c54:	0027e700 	call	27e70 <__sprint_r>
   21c58:	d9c03c17 	ldw	r7,240(sp)
   21c5c:	103c071e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21c60:	d8c02017 	ldw	r3,128(sp)
   21c64:	dc401f17 	ldw	r17,124(sp)
   21c68:	dd800404 	addi	r22,sp,16
   21c6c:	003fec06 	br	21c20 <__alt_data_end+0xfffe1c20>
   21c70:	9080100c 	andi	r2,r18,64
   21c74:	d8002785 	stb	zero,158(sp)
   21c78:	10010e26 	beq	r2,zero,220b4 <___vfprintf_internal_r+0x1840>
   21c7c:	d9002d17 	ldw	r4,180(sp)
   21c80:	d9402917 	ldw	r5,164(sp)
   21c84:	002d883a 	mov	r22,zero
   21c88:	20800104 	addi	r2,r4,4
   21c8c:	24c0000b 	ldhu	r19,0(r4)
   21c90:	283fc90e 	bge	r5,zero,21bb8 <__alt_data_end+0xfffe1bb8>
   21c94:	d8802d15 	stw	r2,180(sp)
   21c98:	0039883a 	mov	fp,zero
   21c9c:	9d84b03a 	or	r2,r19,r22
   21ca0:	103c461e 	bne	r2,zero,20dbc <__alt_data_end+0xfffe0dbc>
   21ca4:	00800044 	movi	r2,1
   21ca8:	003e6c06 	br	2165c <__alt_data_end+0xfffe165c>
   21cac:	d9002c17 	ldw	r4,176(sp)
   21cb0:	d9801e04 	addi	r6,sp,120
   21cb4:	b80b883a 	mov	r5,r23
   21cb8:	0027e700 	call	27e70 <__sprint_r>
   21cbc:	103bef1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21cc0:	d8c02017 	ldw	r3,128(sp)
   21cc4:	da000404 	addi	r8,sp,16
   21cc8:	d9003217 	ldw	r4,200(sp)
   21ccc:	d8802617 	ldw	r2,152(sp)
   21cd0:	d9403317 	ldw	r5,204(sp)
   21cd4:	8123883a 	add	r17,r16,r4
   21cd8:	11400216 	blt	r2,r5,21ce4 <___vfprintf_internal_r+0x1470>
   21cdc:	9100004c 	andi	r4,r18,1
   21ce0:	20000d26 	beq	r4,zero,21d18 <___vfprintf_internal_r+0x14a4>
   21ce4:	d9003717 	ldw	r4,220(sp)
   21ce8:	d9403417 	ldw	r5,208(sp)
   21cec:	1907883a 	add	r3,r3,r4
   21cf0:	d9001f17 	ldw	r4,124(sp)
   21cf4:	41400015 	stw	r5,0(r8)
   21cf8:	d9403717 	ldw	r5,220(sp)
   21cfc:	21000044 	addi	r4,r4,1
   21d00:	d8c02015 	stw	r3,128(sp)
   21d04:	41400115 	stw	r5,4(r8)
   21d08:	d9001f15 	stw	r4,124(sp)
   21d0c:	014001c4 	movi	r5,7
   21d10:	2901e816 	blt	r5,r4,224b4 <___vfprintf_internal_r+0x1c40>
   21d14:	42000204 	addi	r8,r8,8
   21d18:	d9003317 	ldw	r4,204(sp)
   21d1c:	8121883a 	add	r16,r16,r4
   21d20:	2085c83a 	sub	r2,r4,r2
   21d24:	8461c83a 	sub	r16,r16,r17
   21d28:	1400010e 	bge	r2,r16,21d30 <___vfprintf_internal_r+0x14bc>
   21d2c:	1021883a 	mov	r16,r2
   21d30:	04000a0e 	bge	zero,r16,21d5c <___vfprintf_internal_r+0x14e8>
   21d34:	d9001f17 	ldw	r4,124(sp)
   21d38:	1c07883a 	add	r3,r3,r16
   21d3c:	44400015 	stw	r17,0(r8)
   21d40:	21000044 	addi	r4,r4,1
   21d44:	44000115 	stw	r16,4(r8)
   21d48:	d8c02015 	stw	r3,128(sp)
   21d4c:	d9001f15 	stw	r4,124(sp)
   21d50:	014001c4 	movi	r5,7
   21d54:	2901fb16 	blt	r5,r4,22544 <___vfprintf_internal_r+0x1cd0>
   21d58:	42000204 	addi	r8,r8,8
   21d5c:	8001f716 	blt	r16,zero,2253c <___vfprintf_internal_r+0x1cc8>
   21d60:	1421c83a 	sub	r16,r2,r16
   21d64:	043d380e 	bge	zero,r16,21248 <__alt_data_end+0xfffe1248>
   21d68:	04400404 	movi	r17,16
   21d6c:	d8801f17 	ldw	r2,124(sp)
   21d70:	8c3efb0e 	bge	r17,r16,21960 <__alt_data_end+0xfffe1960>
   21d74:	014000f4 	movhi	r5,3
   21d78:	297d2d84 	addi	r5,r5,-2890
   21d7c:	d9402b15 	stw	r5,172(sp)
   21d80:	058001c4 	movi	r22,7
   21d84:	dcc02c17 	ldw	r19,176(sp)
   21d88:	00000306 	br	21d98 <___vfprintf_internal_r+0x1524>
   21d8c:	42000204 	addi	r8,r8,8
   21d90:	843ffc04 	addi	r16,r16,-16
   21d94:	8c3ef50e 	bge	r17,r16,2196c <__alt_data_end+0xfffe196c>
   21d98:	18c00404 	addi	r3,r3,16
   21d9c:	10800044 	addi	r2,r2,1
   21da0:	45000015 	stw	r20,0(r8)
   21da4:	44400115 	stw	r17,4(r8)
   21da8:	d8c02015 	stw	r3,128(sp)
   21dac:	d8801f15 	stw	r2,124(sp)
   21db0:	b0bff60e 	bge	r22,r2,21d8c <__alt_data_end+0xfffe1d8c>
   21db4:	d9801e04 	addi	r6,sp,120
   21db8:	b80b883a 	mov	r5,r23
   21dbc:	9809883a 	mov	r4,r19
   21dc0:	0027e700 	call	27e70 <__sprint_r>
   21dc4:	103bad1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21dc8:	d8c02017 	ldw	r3,128(sp)
   21dcc:	d8801f17 	ldw	r2,124(sp)
   21dd0:	da000404 	addi	r8,sp,16
   21dd4:	003fee06 	br	21d90 <__alt_data_end+0xfffe1d90>
   21dd8:	9088703a 	and	r4,r18,r2
   21ddc:	203eab1e 	bne	r4,zero,2188c <__alt_data_end+0xfffe188c>
   21de0:	dc401f17 	ldw	r17,124(sp)
   21de4:	40800115 	stw	r2,4(r8)
   21de8:	44000015 	stw	r16,0(r8)
   21dec:	8c400044 	addi	r17,r17,1
   21df0:	d8c02015 	stw	r3,128(sp)
   21df4:	dc401f15 	stw	r17,124(sp)
   21df8:	008001c4 	movi	r2,7
   21dfc:	14400e16 	blt	r2,r17,21e38 <___vfprintf_internal_r+0x15c4>
   21e00:	45800204 	addi	r22,r8,8
   21e04:	003eca06 	br	21930 <__alt_data_end+0xfffe1930>
   21e08:	010000f4 	movhi	r4,3
   21e0c:	213d2d84 	addi	r4,r4,-2890
   21e10:	d9002b15 	stw	r4,172(sp)
   21e14:	d8802b17 	ldw	r2,172(sp)
   21e18:	1c07883a 	add	r3,r3,r16
   21e1c:	8c400044 	addi	r17,r17,1
   21e20:	b0800015 	stw	r2,0(r22)
   21e24:	b4000115 	stw	r16,4(r22)
   21e28:	d8c02015 	stw	r3,128(sp)
   21e2c:	dc401f15 	stw	r17,124(sp)
   21e30:	008001c4 	movi	r2,7
   21e34:	147ebd0e 	bge	r2,r17,2192c <__alt_data_end+0xfffe192c>
   21e38:	d9002c17 	ldw	r4,176(sp)
   21e3c:	d9801e04 	addi	r6,sp,120
   21e40:	b80b883a 	mov	r5,r23
   21e44:	0027e700 	call	27e70 <__sprint_r>
   21e48:	103b8c1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21e4c:	d8c02017 	ldw	r3,128(sp)
   21e50:	dc401f17 	ldw	r17,124(sp)
   21e54:	dd800404 	addi	r22,sp,16
   21e58:	003eb506 	br	21930 <__alt_data_end+0xfffe1930>
   21e5c:	d9002c17 	ldw	r4,176(sp)
   21e60:	d9801e04 	addi	r6,sp,120
   21e64:	b80b883a 	mov	r5,r23
   21e68:	0027e700 	call	27e70 <__sprint_r>
   21e6c:	103b831e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21e70:	d8c02017 	ldw	r3,128(sp)
   21e74:	dc401f17 	ldw	r17,124(sp)
   21e78:	da000404 	addi	r8,sp,16
   21e7c:	003e8d06 	br	218b4 <__alt_data_end+0xfffe18b4>
   21e80:	d9002c17 	ldw	r4,176(sp)
   21e84:	d9801e04 	addi	r6,sp,120
   21e88:	b80b883a 	mov	r5,r23
   21e8c:	0027e700 	call	27e70 <__sprint_r>
   21e90:	103b7a1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21e94:	d8c02017 	ldw	r3,128(sp)
   21e98:	dc401f17 	ldw	r17,124(sp)
   21e9c:	dd800404 	addi	r22,sp,16
   21ea0:	003e8f06 	br	218e0 <__alt_data_end+0xfffe18e0>
   21ea4:	0027883a 	mov	r19,zero
   21ea8:	003f4a06 	br	21bd4 <__alt_data_end+0xfffe1bd4>
   21eac:	d9002c17 	ldw	r4,176(sp)
   21eb0:	d9801e04 	addi	r6,sp,120
   21eb4:	b80b883a 	mov	r5,r23
   21eb8:	0027e700 	call	27e70 <__sprint_r>
   21ebc:	103b6f1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   21ec0:	d8c02017 	ldw	r3,128(sp)
   21ec4:	da000404 	addi	r8,sp,16
   21ec8:	003c9d06 	br	21140 <__alt_data_end+0xfffe1140>
   21ecc:	04e7c83a 	sub	r19,zero,r19
   21ed0:	9804c03a 	cmpne	r2,r19,zero
   21ed4:	05adc83a 	sub	r22,zero,r22
   21ed8:	b0adc83a 	sub	r22,r22,r2
   21edc:	d8802917 	ldw	r2,164(sp)
   21ee0:	07000b44 	movi	fp,45
   21ee4:	df002785 	stb	fp,158(sp)
   21ee8:	10017b16 	blt	r2,zero,224d8 <___vfprintf_internal_r+0x1c64>
   21eec:	00bfdfc4 	movi	r2,-129
   21ef0:	90a4703a 	and	r18,r18,r2
   21ef4:	003bb106 	br	20dbc <__alt_data_end+0xfffe0dbc>
   21ef8:	d9003617 	ldw	r4,216(sp)
   21efc:	d9403817 	ldw	r5,224(sp)
   21f00:	da003d15 	stw	r8,244(sp)
   21f04:	0027a940 	call	27a94 <__fpclassifyd>
   21f08:	da003d17 	ldw	r8,244(sp)
   21f0c:	1000f026 	beq	r2,zero,222d0 <___vfprintf_internal_r+0x1a5c>
   21f10:	d9002917 	ldw	r4,164(sp)
   21f14:	05bff7c4 	movi	r22,-33
   21f18:	00bfffc4 	movi	r2,-1
   21f1c:	8dac703a 	and	r22,r17,r22
   21f20:	20820026 	beq	r4,r2,22724 <___vfprintf_internal_r+0x1eb0>
   21f24:	008011c4 	movi	r2,71
   21f28:	b081f726 	beq	r22,r2,22708 <___vfprintf_internal_r+0x1e94>
   21f2c:	d9003817 	ldw	r4,224(sp)
   21f30:	90c04014 	ori	r3,r18,256
   21f34:	d8c02b15 	stw	r3,172(sp)
   21f38:	20021516 	blt	r4,zero,22790 <___vfprintf_internal_r+0x1f1c>
   21f3c:	dcc03817 	ldw	r19,224(sp)
   21f40:	d8002a05 	stb	zero,168(sp)
   21f44:	00801984 	movi	r2,102
   21f48:	8881f926 	beq	r17,r2,22730 <___vfprintf_internal_r+0x1ebc>
   21f4c:	00801184 	movi	r2,70
   21f50:	88821c26 	beq	r17,r2,227c4 <___vfprintf_internal_r+0x1f50>
   21f54:	00801144 	movi	r2,69
   21f58:	b081ef26 	beq	r22,r2,22718 <___vfprintf_internal_r+0x1ea4>
   21f5c:	d8c02917 	ldw	r3,164(sp)
   21f60:	d8802104 	addi	r2,sp,132
   21f64:	d8800315 	stw	r2,12(sp)
   21f68:	d9403617 	ldw	r5,216(sp)
   21f6c:	d8802504 	addi	r2,sp,148
   21f70:	d9002c17 	ldw	r4,176(sp)
   21f74:	d8800215 	stw	r2,8(sp)
   21f78:	d8802604 	addi	r2,sp,152
   21f7c:	d8c00015 	stw	r3,0(sp)
   21f80:	d8800115 	stw	r2,4(sp)
   21f84:	01c00084 	movi	r7,2
   21f88:	980d883a 	mov	r6,r19
   21f8c:	d8c03c15 	stw	r3,240(sp)
   21f90:	da003d15 	stw	r8,244(sp)
   21f94:	0022e980 	call	22e98 <_dtoa_r>
   21f98:	1021883a 	mov	r16,r2
   21f9c:	008019c4 	movi	r2,103
   21fa0:	d8c03c17 	ldw	r3,240(sp)
   21fa4:	da003d17 	ldw	r8,244(sp)
   21fa8:	88817126 	beq	r17,r2,22570 <___vfprintf_internal_r+0x1cfc>
   21fac:	008011c4 	movi	r2,71
   21fb0:	88829226 	beq	r17,r2,229fc <___vfprintf_internal_r+0x2188>
   21fb4:	80f9883a 	add	fp,r16,r3
   21fb8:	d9003617 	ldw	r4,216(sp)
   21fbc:	000d883a 	mov	r6,zero
   21fc0:	000f883a 	mov	r7,zero
   21fc4:	980b883a 	mov	r5,r19
   21fc8:	da003d15 	stw	r8,244(sp)
   21fcc:	002bae80 	call	2bae8 <__eqdf2>
   21fd0:	da003d17 	ldw	r8,244(sp)
   21fd4:	10018d26 	beq	r2,zero,2260c <___vfprintf_internal_r+0x1d98>
   21fd8:	d8802117 	ldw	r2,132(sp)
   21fdc:	1700062e 	bgeu	r2,fp,21ff8 <___vfprintf_internal_r+0x1784>
   21fe0:	01000c04 	movi	r4,48
   21fe4:	10c00044 	addi	r3,r2,1
   21fe8:	d8c02115 	stw	r3,132(sp)
   21fec:	11000005 	stb	r4,0(r2)
   21ff0:	d8802117 	ldw	r2,132(sp)
   21ff4:	173ffb36 	bltu	r2,fp,21fe4 <__alt_data_end+0xfffe1fe4>
   21ff8:	1405c83a 	sub	r2,r2,r16
   21ffc:	d8803315 	stw	r2,204(sp)
   22000:	008011c4 	movi	r2,71
   22004:	b0817626 	beq	r22,r2,225e0 <___vfprintf_internal_r+0x1d6c>
   22008:	00801944 	movi	r2,101
   2200c:	1442810e 	bge	r2,r17,22a14 <___vfprintf_internal_r+0x21a0>
   22010:	d8c02617 	ldw	r3,152(sp)
   22014:	00801984 	movi	r2,102
   22018:	d8c03215 	stw	r3,200(sp)
   2201c:	8881fe26 	beq	r17,r2,22818 <___vfprintf_internal_r+0x1fa4>
   22020:	d8c03217 	ldw	r3,200(sp)
   22024:	d9003317 	ldw	r4,204(sp)
   22028:	1901dd16 	blt	r3,r4,227a0 <___vfprintf_internal_r+0x1f2c>
   2202c:	9480004c 	andi	r18,r18,1
   22030:	90022b1e 	bne	r18,zero,228e0 <___vfprintf_internal_r+0x206c>
   22034:	1805883a 	mov	r2,r3
   22038:	18028016 	blt	r3,zero,22a3c <___vfprintf_internal_r+0x21c8>
   2203c:	d8c03217 	ldw	r3,200(sp)
   22040:	044019c4 	movi	r17,103
   22044:	d8c02e15 	stw	r3,184(sp)
   22048:	df002a07 	ldb	fp,168(sp)
   2204c:	e001531e 	bne	fp,zero,2259c <___vfprintf_internal_r+0x1d28>
   22050:	df002783 	ldbu	fp,158(sp)
   22054:	d8802a15 	stw	r2,168(sp)
   22058:	dc802b17 	ldw	r18,172(sp)
   2205c:	d8002915 	stw	zero,164(sp)
   22060:	003bd106 	br	20fa8 <__alt_data_end+0xfffe0fa8>
   22064:	d8802d17 	ldw	r2,180(sp)
   22068:	d8c02d17 	ldw	r3,180(sp)
   2206c:	d9002d17 	ldw	r4,180(sp)
   22070:	10800017 	ldw	r2,0(r2)
   22074:	18c00117 	ldw	r3,4(r3)
   22078:	21000204 	addi	r4,r4,8
   2207c:	d8803615 	stw	r2,216(sp)
   22080:	d8c03815 	stw	r3,224(sp)
   22084:	d9002d15 	stw	r4,180(sp)
   22088:	003b7506 	br	20e60 <__alt_data_end+0xfffe0e60>
   2208c:	ac400007 	ldb	r17,0(r21)
   22090:	003a5906 	br	209f8 <__alt_data_end+0xfffe09f8>
   22094:	9080100c 	andi	r2,r18,64
   22098:	1000a826 	beq	r2,zero,2233c <___vfprintf_internal_r+0x1ac8>
   2209c:	d9002d17 	ldw	r4,180(sp)
   220a0:	002d883a 	mov	r22,zero
   220a4:	24c0000b 	ldhu	r19,0(r4)
   220a8:	21000104 	addi	r4,r4,4
   220ac:	d9002d15 	stw	r4,180(sp)
   220b0:	003ccb06 	br	213e0 <__alt_data_end+0xfffe13e0>
   220b4:	d8c02d17 	ldw	r3,180(sp)
   220b8:	d9002917 	ldw	r4,164(sp)
   220bc:	002d883a 	mov	r22,zero
   220c0:	18800104 	addi	r2,r3,4
   220c4:	1cc00017 	ldw	r19,0(r3)
   220c8:	203ebb0e 	bge	r4,zero,21bb8 <__alt_data_end+0xfffe1bb8>
   220cc:	003ef106 	br	21c94 <__alt_data_end+0xfffe1c94>
   220d0:	9080040c 	andi	r2,r18,16
   220d4:	1000921e 	bne	r2,zero,22320 <___vfprintf_internal_r+0x1aac>
   220d8:	9480100c 	andi	r18,r18,64
   220dc:	90013926 	beq	r18,zero,225c4 <___vfprintf_internal_r+0x1d50>
   220e0:	d9002d17 	ldw	r4,180(sp)
   220e4:	d9402f17 	ldw	r5,188(sp)
   220e8:	20800017 	ldw	r2,0(r4)
   220ec:	21000104 	addi	r4,r4,4
   220f0:	d9002d15 	stw	r4,180(sp)
   220f4:	1140000d 	sth	r5,0(r2)
   220f8:	003a1606 	br	20954 <__alt_data_end+0xfffe0954>
   220fc:	9080100c 	andi	r2,r18,64
   22100:	10008026 	beq	r2,zero,22304 <___vfprintf_internal_r+0x1a90>
   22104:	d8c02d17 	ldw	r3,180(sp)
   22108:	1cc0000f 	ldh	r19,0(r3)
   2210c:	18c00104 	addi	r3,r3,4
   22110:	d8c02d15 	stw	r3,180(sp)
   22114:	982dd7fa 	srai	r22,r19,31
   22118:	b005883a 	mov	r2,r22
   2211c:	003b1f06 	br	20d9c <__alt_data_end+0xfffe0d9c>
   22120:	9080100c 	andi	r2,r18,64
   22124:	d8002785 	stb	zero,158(sp)
   22128:	10008a1e 	bne	r2,zero,22354 <___vfprintf_internal_r+0x1ae0>
   2212c:	d9402d17 	ldw	r5,180(sp)
   22130:	d8c02917 	ldw	r3,164(sp)
   22134:	002d883a 	mov	r22,zero
   22138:	28800104 	addi	r2,r5,4
   2213c:	2cc00017 	ldw	r19,0(r5)
   22140:	183e4b0e 	bge	r3,zero,21a70 <__alt_data_end+0xfffe1a70>
   22144:	9d86b03a 	or	r3,r19,r22
   22148:	d8802d15 	stw	r2,180(sp)
   2214c:	183e4c1e 	bne	r3,zero,21a80 <__alt_data_end+0xfffe1a80>
   22150:	0039883a 	mov	fp,zero
   22154:	0005883a 	mov	r2,zero
   22158:	003d4006 	br	2165c <__alt_data_end+0xfffe165c>
   2215c:	014000f4 	movhi	r5,3
   22160:	297d2d84 	addi	r5,r5,-2890
   22164:	d9402b15 	stw	r5,172(sp)
   22168:	d9402b17 	ldw	r5,172(sp)
   2216c:	1c47883a 	add	r3,r3,r17
   22170:	10800044 	addi	r2,r2,1
   22174:	41400015 	stw	r5,0(r8)
   22178:	44400115 	stw	r17,4(r8)
   2217c:	d8c02015 	stw	r3,128(sp)
   22180:	d8801f15 	stw	r2,124(sp)
   22184:	010001c4 	movi	r4,7
   22188:	20bec816 	blt	r4,r2,21cac <__alt_data_end+0xfffe1cac>
   2218c:	42000204 	addi	r8,r8,8
   22190:	003ecd06 	br	21cc8 <__alt_data_end+0xfffe1cc8>
   22194:	d9002917 	ldw	r4,164(sp)
   22198:	d8002785 	stb	zero,158(sp)
   2219c:	203d2d16 	blt	r4,zero,21654 <__alt_data_end+0xfffe1654>
   221a0:	00bfdfc4 	movi	r2,-129
   221a4:	90a4703a 	and	r18,r18,r2
   221a8:	003a9106 	br	20bf0 <__alt_data_end+0xfffe0bf0>
   221ac:	010000f4 	movhi	r4,3
   221b0:	213d2d84 	addi	r4,r4,-2890
   221b4:	d9002b15 	stw	r4,172(sp)
   221b8:	003c0c06 	br	211ec <__alt_data_end+0xfffe11ec>
   221bc:	d9002c17 	ldw	r4,176(sp)
   221c0:	d9801e04 	addi	r6,sp,120
   221c4:	b80b883a 	mov	r5,r23
   221c8:	0027e700 	call	27e70 <__sprint_r>
   221cc:	103aab1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   221d0:	d8c02017 	ldw	r3,128(sp)
   221d4:	da000404 	addi	r8,sp,16
   221d8:	003d4106 	br	216e0 <__alt_data_end+0xfffe16e0>
   221dc:	d8801f17 	ldw	r2,124(sp)
   221e0:	014000f4 	movhi	r5,3
   221e4:	01000044 	movi	r4,1
   221e8:	18c00044 	addi	r3,r3,1
   221ec:	10800044 	addi	r2,r2,1
   221f0:	297d2d04 	addi	r5,r5,-2892
   221f4:	41000115 	stw	r4,4(r8)
   221f8:	41400015 	stw	r5,0(r8)
   221fc:	d8c02015 	stw	r3,128(sp)
   22200:	d8801f15 	stw	r2,124(sp)
   22204:	010001c4 	movi	r4,7
   22208:	20805c16 	blt	r4,r2,2237c <___vfprintf_internal_r+0x1b08>
   2220c:	42000204 	addi	r8,r8,8
   22210:	8800041e 	bne	r17,zero,22224 <___vfprintf_internal_r+0x19b0>
   22214:	d8803317 	ldw	r2,204(sp)
   22218:	1000021e 	bne	r2,zero,22224 <___vfprintf_internal_r+0x19b0>
   2221c:	9080004c 	andi	r2,r18,1
   22220:	103c0926 	beq	r2,zero,21248 <__alt_data_end+0xfffe1248>
   22224:	d9003717 	ldw	r4,220(sp)
   22228:	d8801f17 	ldw	r2,124(sp)
   2222c:	d9403417 	ldw	r5,208(sp)
   22230:	20c7883a 	add	r3,r4,r3
   22234:	10800044 	addi	r2,r2,1
   22238:	41000115 	stw	r4,4(r8)
   2223c:	41400015 	stw	r5,0(r8)
   22240:	d8c02015 	stw	r3,128(sp)
   22244:	d8801f15 	stw	r2,124(sp)
   22248:	010001c4 	movi	r4,7
   2224c:	20812116 	blt	r4,r2,226d4 <___vfprintf_internal_r+0x1e60>
   22250:	42000204 	addi	r8,r8,8
   22254:	0463c83a 	sub	r17,zero,r17
   22258:	0440730e 	bge	zero,r17,22428 <___vfprintf_internal_r+0x1bb4>
   2225c:	05800404 	movi	r22,16
   22260:	b440860e 	bge	r22,r17,2247c <___vfprintf_internal_r+0x1c08>
   22264:	014000f4 	movhi	r5,3
   22268:	297d2d84 	addi	r5,r5,-2890
   2226c:	d9402b15 	stw	r5,172(sp)
   22270:	070001c4 	movi	fp,7
   22274:	dcc02c17 	ldw	r19,176(sp)
   22278:	00000306 	br	22288 <___vfprintf_internal_r+0x1a14>
   2227c:	42000204 	addi	r8,r8,8
   22280:	8c7ffc04 	addi	r17,r17,-16
   22284:	b440800e 	bge	r22,r17,22488 <___vfprintf_internal_r+0x1c14>
   22288:	18c00404 	addi	r3,r3,16
   2228c:	10800044 	addi	r2,r2,1
   22290:	45000015 	stw	r20,0(r8)
   22294:	45800115 	stw	r22,4(r8)
   22298:	d8c02015 	stw	r3,128(sp)
   2229c:	d8801f15 	stw	r2,124(sp)
   222a0:	e0bff60e 	bge	fp,r2,2227c <__alt_data_end+0xfffe227c>
   222a4:	d9801e04 	addi	r6,sp,120
   222a8:	b80b883a 	mov	r5,r23
   222ac:	9809883a 	mov	r4,r19
   222b0:	0027e700 	call	27e70 <__sprint_r>
   222b4:	103a711e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   222b8:	d8c02017 	ldw	r3,128(sp)
   222bc:	d8801f17 	ldw	r2,124(sp)
   222c0:	da000404 	addi	r8,sp,16
   222c4:	003fee06 	br	22280 <__alt_data_end+0xfffe2280>
   222c8:	00bfffc4 	movi	r2,-1
   222cc:	003a6f06 	br	20c8c <__alt_data_end+0xfffe0c8c>
   222d0:	008011c4 	movi	r2,71
   222d4:	1440b816 	blt	r2,r17,225b8 <___vfprintf_internal_r+0x1d44>
   222d8:	040000f4 	movhi	r16,3
   222dc:	843d1f04 	addi	r16,r16,-2948
   222e0:	00c000c4 	movi	r3,3
   222e4:	00bfdfc4 	movi	r2,-129
   222e8:	d8c02a15 	stw	r3,168(sp)
   222ec:	90a4703a 	and	r18,r18,r2
   222f0:	df002783 	ldbu	fp,158(sp)
   222f4:	d8c02e15 	stw	r3,184(sp)
   222f8:	d8002915 	stw	zero,164(sp)
   222fc:	d8003215 	stw	zero,200(sp)
   22300:	003b2906 	br	20fa8 <__alt_data_end+0xfffe0fa8>
   22304:	d9002d17 	ldw	r4,180(sp)
   22308:	24c00017 	ldw	r19,0(r4)
   2230c:	21000104 	addi	r4,r4,4
   22310:	d9002d15 	stw	r4,180(sp)
   22314:	982dd7fa 	srai	r22,r19,31
   22318:	b005883a 	mov	r2,r22
   2231c:	003a9f06 	br	20d9c <__alt_data_end+0xfffe0d9c>
   22320:	d9402d17 	ldw	r5,180(sp)
   22324:	d8c02f17 	ldw	r3,188(sp)
   22328:	28800017 	ldw	r2,0(r5)
   2232c:	29400104 	addi	r5,r5,4
   22330:	d9402d15 	stw	r5,180(sp)
   22334:	10c00015 	stw	r3,0(r2)
   22338:	00398606 	br	20954 <__alt_data_end+0xfffe0954>
   2233c:	d9402d17 	ldw	r5,180(sp)
   22340:	002d883a 	mov	r22,zero
   22344:	2cc00017 	ldw	r19,0(r5)
   22348:	29400104 	addi	r5,r5,4
   2234c:	d9402d15 	stw	r5,180(sp)
   22350:	003c2306 	br	213e0 <__alt_data_end+0xfffe13e0>
   22354:	d8c02d17 	ldw	r3,180(sp)
   22358:	d9002917 	ldw	r4,164(sp)
   2235c:	002d883a 	mov	r22,zero
   22360:	18800104 	addi	r2,r3,4
   22364:	1cc0000b 	ldhu	r19,0(r3)
   22368:	203dc10e 	bge	r4,zero,21a70 <__alt_data_end+0xfffe1a70>
   2236c:	003f7506 	br	22144 <__alt_data_end+0xfffe2144>
   22370:	040000f4 	movhi	r16,3
   22374:	843d1d04 	addi	r16,r16,-2956
   22378:	003acc06 	br	20eac <__alt_data_end+0xfffe0eac>
   2237c:	d9002c17 	ldw	r4,176(sp)
   22380:	d9801e04 	addi	r6,sp,120
   22384:	b80b883a 	mov	r5,r23
   22388:	0027e700 	call	27e70 <__sprint_r>
   2238c:	103a3b1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   22390:	dc402617 	ldw	r17,152(sp)
   22394:	d8c02017 	ldw	r3,128(sp)
   22398:	da000404 	addi	r8,sp,16
   2239c:	003f9c06 	br	22210 <__alt_data_end+0xfffe2210>
   223a0:	ac400043 	ldbu	r17,1(r21)
   223a4:	94800814 	ori	r18,r18,32
   223a8:	ad400044 	addi	r21,r21,1
   223ac:	8c403fcc 	andi	r17,r17,255
   223b0:	8c40201c 	xori	r17,r17,128
   223b4:	8c7fe004 	addi	r17,r17,-128
   223b8:	00398f06 	br	209f8 <__alt_data_end+0xfffe09f8>
   223bc:	d8c02d15 	stw	r3,180(sp)
   223c0:	0039883a 	mov	fp,zero
   223c4:	003e3506 	br	21c9c <__alt_data_end+0xfffe1c9c>
   223c8:	d9002c17 	ldw	r4,176(sp)
   223cc:	d9801e04 	addi	r6,sp,120
   223d0:	b80b883a 	mov	r5,r23
   223d4:	0027e700 	call	27e70 <__sprint_r>
   223d8:	103a281e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   223dc:	d8c02017 	ldw	r3,128(sp)
   223e0:	da000404 	addi	r8,sp,16
   223e4:	003cd006 	br	21728 <__alt_data_end+0xfffe1728>
   223e8:	8009883a 	mov	r4,r16
   223ec:	da003d15 	stw	r8,244(sp)
   223f0:	00207dc0 	call	207dc <strlen>
   223f4:	d8802e15 	stw	r2,184(sp)
   223f8:	da003d17 	ldw	r8,244(sp)
   223fc:	103c340e 	bge	r2,zero,214d0 <__alt_data_end+0xfffe14d0>
   22400:	0005883a 	mov	r2,zero
   22404:	003c3206 	br	214d0 <__alt_data_end+0xfffe14d0>
   22408:	d9002c17 	ldw	r4,176(sp)
   2240c:	d9801e04 	addi	r6,sp,120
   22410:	b80b883a 	mov	r5,r23
   22414:	0027e700 	call	27e70 <__sprint_r>
   22418:	103a181e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   2241c:	d8c02017 	ldw	r3,128(sp)
   22420:	d8801f17 	ldw	r2,124(sp)
   22424:	da000404 	addi	r8,sp,16
   22428:	d9403317 	ldw	r5,204(sp)
   2242c:	10800044 	addi	r2,r2,1
   22430:	44000015 	stw	r16,0(r8)
   22434:	28c7883a 	add	r3,r5,r3
   22438:	003b7d06 	br	21230 <__alt_data_end+0xfffe1230>
   2243c:	010000f4 	movhi	r4,3
   22440:	213d3184 	addi	r4,r4,-2874
   22444:	d9003515 	stw	r4,212(sp)
   22448:	003b1406 	br	2109c <__alt_data_end+0xfffe109c>
   2244c:	013fffc4 	movi	r4,-1
   22450:	003a3506 	br	20d28 <__alt_data_end+0xfffe0d28>
   22454:	0023883a 	mov	r17,zero
   22458:	003d9d06 	br	21ad0 <__alt_data_end+0xfffe1ad0>
   2245c:	d9002c17 	ldw	r4,176(sp)
   22460:	d9801e04 	addi	r6,sp,120
   22464:	b80b883a 	mov	r5,r23
   22468:	0027e700 	call	27e70 <__sprint_r>
   2246c:	103a031e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   22470:	d8c02017 	ldw	r3,128(sp)
   22474:	da000404 	addi	r8,sp,16
   22478:	003d9406 	br	21acc <__alt_data_end+0xfffe1acc>
   2247c:	010000f4 	movhi	r4,3
   22480:	213d2d84 	addi	r4,r4,-2890
   22484:	d9002b15 	stw	r4,172(sp)
   22488:	d9002b17 	ldw	r4,172(sp)
   2248c:	1c47883a 	add	r3,r3,r17
   22490:	10800044 	addi	r2,r2,1
   22494:	41000015 	stw	r4,0(r8)
   22498:	44400115 	stw	r17,4(r8)
   2249c:	d8c02015 	stw	r3,128(sp)
   224a0:	d8801f15 	stw	r2,124(sp)
   224a4:	010001c4 	movi	r4,7
   224a8:	20bfd716 	blt	r4,r2,22408 <__alt_data_end+0xfffe2408>
   224ac:	42000204 	addi	r8,r8,8
   224b0:	003fdd06 	br	22428 <__alt_data_end+0xfffe2428>
   224b4:	d9002c17 	ldw	r4,176(sp)
   224b8:	d9801e04 	addi	r6,sp,120
   224bc:	b80b883a 	mov	r5,r23
   224c0:	0027e700 	call	27e70 <__sprint_r>
   224c4:	1039ed1e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   224c8:	d8802617 	ldw	r2,152(sp)
   224cc:	d8c02017 	ldw	r3,128(sp)
   224d0:	da000404 	addi	r8,sp,16
   224d4:	003e1006 	br	21d18 <__alt_data_end+0xfffe1d18>
   224d8:	00800044 	movi	r2,1
   224dc:	10803fcc 	andi	r2,r2,255
   224e0:	00c00044 	movi	r3,1
   224e4:	10fa3526 	beq	r2,r3,20dbc <__alt_data_end+0xfffe0dbc>
   224e8:	00c00084 	movi	r3,2
   224ec:	10fbcb26 	beq	r2,r3,2141c <__alt_data_end+0xfffe141c>
   224f0:	003a8f06 	br	20f30 <__alt_data_end+0xfffe0f30>
   224f4:	010000f4 	movhi	r4,3
   224f8:	213d3184 	addi	r4,r4,-2874
   224fc:	d9003515 	stw	r4,212(sp)
   22500:	003b7606 	br	212dc <__alt_data_end+0xfffe12dc>
   22504:	d8802917 	ldw	r2,164(sp)
   22508:	00c00184 	movi	r3,6
   2250c:	1880012e 	bgeu	r3,r2,22514 <___vfprintf_internal_r+0x1ca0>
   22510:	1805883a 	mov	r2,r3
   22514:	d8802e15 	stw	r2,184(sp)
   22518:	1000ef16 	blt	r2,zero,228d8 <___vfprintf_internal_r+0x2064>
   2251c:	040000f4 	movhi	r16,3
   22520:	d8802a15 	stw	r2,168(sp)
   22524:	dcc02d15 	stw	r19,180(sp)
   22528:	d8002915 	stw	zero,164(sp)
   2252c:	d8003215 	stw	zero,200(sp)
   22530:	843d2b04 	addi	r16,r16,-2900
   22534:	0039883a 	mov	fp,zero
   22538:	003aa206 	br	20fc4 <__alt_data_end+0xfffe0fc4>
   2253c:	0021883a 	mov	r16,zero
   22540:	003e0706 	br	21d60 <__alt_data_end+0xfffe1d60>
   22544:	d9002c17 	ldw	r4,176(sp)
   22548:	d9801e04 	addi	r6,sp,120
   2254c:	b80b883a 	mov	r5,r23
   22550:	0027e700 	call	27e70 <__sprint_r>
   22554:	1039c91e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   22558:	d8802617 	ldw	r2,152(sp)
   2255c:	d9403317 	ldw	r5,204(sp)
   22560:	d8c02017 	ldw	r3,128(sp)
   22564:	da000404 	addi	r8,sp,16
   22568:	2885c83a 	sub	r2,r5,r2
   2256c:	003dfb06 	br	21d5c <__alt_data_end+0xfffe1d5c>
   22570:	9080004c 	andi	r2,r18,1
   22574:	103e8f1e 	bne	r2,zero,21fb4 <__alt_data_end+0xfffe1fb4>
   22578:	d8802117 	ldw	r2,132(sp)
   2257c:	003e9e06 	br	21ff8 <__alt_data_end+0xfffe1ff8>
   22580:	1025883a 	mov	r18,r2
   22584:	0039883a 	mov	fp,zero
   22588:	00800084 	movi	r2,2
   2258c:	003fd306 	br	224dc <__alt_data_end+0xfffe24dc>
   22590:	07000b44 	movi	fp,45
   22594:	df002785 	stb	fp,158(sp)
   22598:	003a4006 	br	20e9c <__alt_data_end+0xfffe0e9c>
   2259c:	00c00b44 	movi	r3,45
   225a0:	d8c02785 	stb	r3,158(sp)
   225a4:	d8802a15 	stw	r2,168(sp)
   225a8:	dc802b17 	ldw	r18,172(sp)
   225ac:	d8002915 	stw	zero,164(sp)
   225b0:	07000b44 	movi	fp,45
   225b4:	003a8006 	br	20fb8 <__alt_data_end+0xfffe0fb8>
   225b8:	040000f4 	movhi	r16,3
   225bc:	843d2004 	addi	r16,r16,-2944
   225c0:	003f4706 	br	222e0 <__alt_data_end+0xfffe22e0>
   225c4:	d8c02d17 	ldw	r3,180(sp)
   225c8:	d9002f17 	ldw	r4,188(sp)
   225cc:	18800017 	ldw	r2,0(r3)
   225d0:	18c00104 	addi	r3,r3,4
   225d4:	d8c02d15 	stw	r3,180(sp)
   225d8:	11000015 	stw	r4,0(r2)
   225dc:	0038dd06 	br	20954 <__alt_data_end+0xfffe0954>
   225e0:	dd802617 	ldw	r22,152(sp)
   225e4:	00bfff44 	movi	r2,-3
   225e8:	b0801c16 	blt	r22,r2,2265c <___vfprintf_internal_r+0x1de8>
   225ec:	d9402917 	ldw	r5,164(sp)
   225f0:	2d801a16 	blt	r5,r22,2265c <___vfprintf_internal_r+0x1de8>
   225f4:	dd803215 	stw	r22,200(sp)
   225f8:	003e8906 	br	22020 <__alt_data_end+0xfffe2020>
   225fc:	010000f4 	movhi	r4,3
   22600:	213d2d84 	addi	r4,r4,-2890
   22604:	d9002b15 	stw	r4,172(sp)
   22608:	003c9106 	br	21850 <__alt_data_end+0xfffe1850>
   2260c:	e005883a 	mov	r2,fp
   22610:	003e7906 	br	21ff8 <__alt_data_end+0xfffe1ff8>
   22614:	d9402917 	ldw	r5,164(sp)
   22618:	df002783 	ldbu	fp,158(sp)
   2261c:	dcc02d15 	stw	r19,180(sp)
   22620:	d9402a15 	stw	r5,168(sp)
   22624:	d9402e15 	stw	r5,184(sp)
   22628:	d8002915 	stw	zero,164(sp)
   2262c:	d8003215 	stw	zero,200(sp)
   22630:	003a5d06 	br	20fa8 <__alt_data_end+0xfffe0fa8>
   22634:	9080004c 	andi	r2,r18,1
   22638:	0039883a 	mov	fp,zero
   2263c:	10000426 	beq	r2,zero,22650 <___vfprintf_internal_r+0x1ddc>
   22640:	00800c04 	movi	r2,48
   22644:	dc001dc4 	addi	r16,sp,119
   22648:	d8801dc5 	stb	r2,119(sp)
   2264c:	003b8006 	br	21450 <__alt_data_end+0xfffe1450>
   22650:	d8002e15 	stw	zero,184(sp)
   22654:	dc001e04 	addi	r16,sp,120
   22658:	003a4d06 	br	20f90 <__alt_data_end+0xfffe0f90>
   2265c:	8c7fff84 	addi	r17,r17,-2
   22660:	b5bfffc4 	addi	r22,r22,-1
   22664:	dd802615 	stw	r22,152(sp)
   22668:	dc4022c5 	stb	r17,139(sp)
   2266c:	b000bf16 	blt	r22,zero,2296c <___vfprintf_internal_r+0x20f8>
   22670:	00800ac4 	movi	r2,43
   22674:	d8802305 	stb	r2,140(sp)
   22678:	00800244 	movi	r2,9
   2267c:	15807016 	blt	r2,r22,22840 <___vfprintf_internal_r+0x1fcc>
   22680:	00800c04 	movi	r2,48
   22684:	b5800c04 	addi	r22,r22,48
   22688:	d8802345 	stb	r2,141(sp)
   2268c:	dd802385 	stb	r22,142(sp)
   22690:	d88023c4 	addi	r2,sp,143
   22694:	df0022c4 	addi	fp,sp,139
   22698:	d8c03317 	ldw	r3,204(sp)
   2269c:	1739c83a 	sub	fp,r2,fp
   226a0:	d9003317 	ldw	r4,204(sp)
   226a4:	e0c7883a 	add	r3,fp,r3
   226a8:	df003a15 	stw	fp,232(sp)
   226ac:	d8c02e15 	stw	r3,184(sp)
   226b0:	00800044 	movi	r2,1
   226b4:	1100b30e 	bge	r2,r4,22984 <___vfprintf_internal_r+0x2110>
   226b8:	d8c02e17 	ldw	r3,184(sp)
   226bc:	18c00044 	addi	r3,r3,1
   226c0:	d8c02e15 	stw	r3,184(sp)
   226c4:	1805883a 	mov	r2,r3
   226c8:	1800ac16 	blt	r3,zero,2297c <___vfprintf_internal_r+0x2108>
   226cc:	d8003215 	stw	zero,200(sp)
   226d0:	003e5d06 	br	22048 <__alt_data_end+0xfffe2048>
   226d4:	d9002c17 	ldw	r4,176(sp)
   226d8:	d9801e04 	addi	r6,sp,120
   226dc:	b80b883a 	mov	r5,r23
   226e0:	0027e700 	call	27e70 <__sprint_r>
   226e4:	1039651e 	bne	r2,zero,20c7c <__alt_data_end+0xfffe0c7c>
   226e8:	dc402617 	ldw	r17,152(sp)
   226ec:	d8c02017 	ldw	r3,128(sp)
   226f0:	d8801f17 	ldw	r2,124(sp)
   226f4:	da000404 	addi	r8,sp,16
   226f8:	003ed606 	br	22254 <__alt_data_end+0xfffe2254>
   226fc:	582b883a 	mov	r21,r11
   22700:	d8002915 	stw	zero,164(sp)
   22704:	0038bd06 	br	209fc <__alt_data_end+0xfffe09fc>
   22708:	d8802917 	ldw	r2,164(sp)
   2270c:	103e071e 	bne	r2,zero,21f2c <__alt_data_end+0xfffe1f2c>
   22710:	dc002915 	stw	r16,164(sp)
   22714:	003e0506 	br	21f2c <__alt_data_end+0xfffe1f2c>
   22718:	d9002917 	ldw	r4,164(sp)
   2271c:	20c00044 	addi	r3,r4,1
   22720:	003e0f06 	br	21f60 <__alt_data_end+0xfffe1f60>
   22724:	01400184 	movi	r5,6
   22728:	d9402915 	stw	r5,164(sp)
   2272c:	003dff06 	br	21f2c <__alt_data_end+0xfffe1f2c>
   22730:	d8802104 	addi	r2,sp,132
   22734:	d8800315 	stw	r2,12(sp)
   22738:	d8802504 	addi	r2,sp,148
   2273c:	d8800215 	stw	r2,8(sp)
   22740:	d8802604 	addi	r2,sp,152
   22744:	d8800115 	stw	r2,4(sp)
   22748:	d8802917 	ldw	r2,164(sp)
   2274c:	d9403617 	ldw	r5,216(sp)
   22750:	d9002c17 	ldw	r4,176(sp)
   22754:	d8800015 	stw	r2,0(sp)
   22758:	01c000c4 	movi	r7,3
   2275c:	980d883a 	mov	r6,r19
   22760:	da003d15 	stw	r8,244(sp)
   22764:	0022e980 	call	22e98 <_dtoa_r>
   22768:	d8c02917 	ldw	r3,164(sp)
   2276c:	da003d17 	ldw	r8,244(sp)
   22770:	1021883a 	mov	r16,r2
   22774:	10f9883a 	add	fp,r2,r3
   22778:	81000007 	ldb	r4,0(r16)
   2277c:	00800c04 	movi	r2,48
   22780:	20805e26 	beq	r4,r2,228fc <___vfprintf_internal_r+0x2088>
   22784:	d8c02617 	ldw	r3,152(sp)
   22788:	e0f9883a 	add	fp,fp,r3
   2278c:	003e0a06 	br	21fb8 <__alt_data_end+0xfffe1fb8>
   22790:	00c00b44 	movi	r3,45
   22794:	24e0003c 	xorhi	r19,r4,32768
   22798:	d8c02a05 	stb	r3,168(sp)
   2279c:	003de906 	br	21f44 <__alt_data_end+0xfffe1f44>
   227a0:	d8c03217 	ldw	r3,200(sp)
   227a4:	00c07a0e 	bge	zero,r3,22990 <___vfprintf_internal_r+0x211c>
   227a8:	00800044 	movi	r2,1
   227ac:	d9003317 	ldw	r4,204(sp)
   227b0:	1105883a 	add	r2,r2,r4
   227b4:	d8802e15 	stw	r2,184(sp)
   227b8:	10004e16 	blt	r2,zero,228f4 <___vfprintf_internal_r+0x2080>
   227bc:	044019c4 	movi	r17,103
   227c0:	003e2106 	br	22048 <__alt_data_end+0xfffe2048>
   227c4:	d9002917 	ldw	r4,164(sp)
   227c8:	d8802104 	addi	r2,sp,132
   227cc:	d8800315 	stw	r2,12(sp)
   227d0:	d9000015 	stw	r4,0(sp)
   227d4:	d8802504 	addi	r2,sp,148
   227d8:	d9403617 	ldw	r5,216(sp)
   227dc:	d9002c17 	ldw	r4,176(sp)
   227e0:	d8800215 	stw	r2,8(sp)
   227e4:	d8802604 	addi	r2,sp,152
   227e8:	d8800115 	stw	r2,4(sp)
   227ec:	01c000c4 	movi	r7,3
   227f0:	980d883a 	mov	r6,r19
   227f4:	da003d15 	stw	r8,244(sp)
   227f8:	0022e980 	call	22e98 <_dtoa_r>
   227fc:	d8c02917 	ldw	r3,164(sp)
   22800:	da003d17 	ldw	r8,244(sp)
   22804:	1021883a 	mov	r16,r2
   22808:	00801184 	movi	r2,70
   2280c:	80f9883a 	add	fp,r16,r3
   22810:	88bfd926 	beq	r17,r2,22778 <__alt_data_end+0xfffe2778>
   22814:	003de806 	br	21fb8 <__alt_data_end+0xfffe1fb8>
   22818:	d9002917 	ldw	r4,164(sp)
   2281c:	00c04d0e 	bge	zero,r3,22954 <___vfprintf_internal_r+0x20e0>
   22820:	2000441e 	bne	r4,zero,22934 <___vfprintf_internal_r+0x20c0>
   22824:	9480004c 	andi	r18,r18,1
   22828:	9000421e 	bne	r18,zero,22934 <___vfprintf_internal_r+0x20c0>
   2282c:	1805883a 	mov	r2,r3
   22830:	18007016 	blt	r3,zero,229f4 <___vfprintf_internal_r+0x2180>
   22834:	d8c03217 	ldw	r3,200(sp)
   22838:	d8c02e15 	stw	r3,184(sp)
   2283c:	003e0206 	br	22048 <__alt_data_end+0xfffe2048>
   22840:	df0022c4 	addi	fp,sp,139
   22844:	dc002915 	stw	r16,164(sp)
   22848:	4027883a 	mov	r19,r8
   2284c:	e021883a 	mov	r16,fp
   22850:	b009883a 	mov	r4,r22
   22854:	01400284 	movi	r5,10
   22858:	002a8240 	call	2a824 <__modsi3>
   2285c:	10800c04 	addi	r2,r2,48
   22860:	843fffc4 	addi	r16,r16,-1
   22864:	b009883a 	mov	r4,r22
   22868:	01400284 	movi	r5,10
   2286c:	80800005 	stb	r2,0(r16)
   22870:	002a7a00 	call	2a7a0 <__divsi3>
   22874:	102d883a 	mov	r22,r2
   22878:	00800244 	movi	r2,9
   2287c:	15bff416 	blt	r2,r22,22850 <__alt_data_end+0xfffe2850>
   22880:	9811883a 	mov	r8,r19
   22884:	b0800c04 	addi	r2,r22,48
   22888:	8027883a 	mov	r19,r16
   2288c:	997fffc4 	addi	r5,r19,-1
   22890:	98bfffc5 	stb	r2,-1(r19)
   22894:	dc002917 	ldw	r16,164(sp)
   22898:	2f006a2e 	bgeu	r5,fp,22a44 <___vfprintf_internal_r+0x21d0>
   2289c:	d9c02384 	addi	r7,sp,142
   228a0:	3ccfc83a 	sub	r7,r7,r19
   228a4:	d9002344 	addi	r4,sp,141
   228a8:	e1cf883a 	add	r7,fp,r7
   228ac:	00000106 	br	228b4 <___vfprintf_internal_r+0x2040>
   228b0:	28800003 	ldbu	r2,0(r5)
   228b4:	20800005 	stb	r2,0(r4)
   228b8:	21000044 	addi	r4,r4,1
   228bc:	29400044 	addi	r5,r5,1
   228c0:	393ffb1e 	bne	r7,r4,228b0 <__alt_data_end+0xfffe28b0>
   228c4:	d8802304 	addi	r2,sp,140
   228c8:	14c5c83a 	sub	r2,r2,r19
   228cc:	d8c02344 	addi	r3,sp,141
   228d0:	1885883a 	add	r2,r3,r2
   228d4:	003f7006 	br	22698 <__alt_data_end+0xfffe2698>
   228d8:	0005883a 	mov	r2,zero
   228dc:	003f0f06 	br	2251c <__alt_data_end+0xfffe251c>
   228e0:	d8c03217 	ldw	r3,200(sp)
   228e4:	18c00044 	addi	r3,r3,1
   228e8:	d8c02e15 	stw	r3,184(sp)
   228ec:	1805883a 	mov	r2,r3
   228f0:	183fb20e 	bge	r3,zero,227bc <__alt_data_end+0xfffe27bc>
   228f4:	0005883a 	mov	r2,zero
   228f8:	003fb006 	br	227bc <__alt_data_end+0xfffe27bc>
   228fc:	d9003617 	ldw	r4,216(sp)
   22900:	000d883a 	mov	r6,zero
   22904:	000f883a 	mov	r7,zero
   22908:	980b883a 	mov	r5,r19
   2290c:	d8c03c15 	stw	r3,240(sp)
   22910:	da003d15 	stw	r8,244(sp)
   22914:	002bae80 	call	2bae8 <__eqdf2>
   22918:	d8c03c17 	ldw	r3,240(sp)
   2291c:	da003d17 	ldw	r8,244(sp)
   22920:	103f9826 	beq	r2,zero,22784 <__alt_data_end+0xfffe2784>
   22924:	00800044 	movi	r2,1
   22928:	10c7c83a 	sub	r3,r2,r3
   2292c:	d8c02615 	stw	r3,152(sp)
   22930:	003f9506 	br	22788 <__alt_data_end+0xfffe2788>
   22934:	d9002917 	ldw	r4,164(sp)
   22938:	d8c03217 	ldw	r3,200(sp)
   2293c:	20800044 	addi	r2,r4,1
   22940:	1885883a 	add	r2,r3,r2
   22944:	d8802e15 	stw	r2,184(sp)
   22948:	103dbf0e 	bge	r2,zero,22048 <__alt_data_end+0xfffe2048>
   2294c:	0005883a 	mov	r2,zero
   22950:	003dbd06 	br	22048 <__alt_data_end+0xfffe2048>
   22954:	2000211e 	bne	r4,zero,229dc <___vfprintf_internal_r+0x2168>
   22958:	9480004c 	andi	r18,r18,1
   2295c:	90001f1e 	bne	r18,zero,229dc <___vfprintf_internal_r+0x2168>
   22960:	00800044 	movi	r2,1
   22964:	d8802e15 	stw	r2,184(sp)
   22968:	003db706 	br	22048 <__alt_data_end+0xfffe2048>
   2296c:	00800b44 	movi	r2,45
   22970:	05adc83a 	sub	r22,zero,r22
   22974:	d8802305 	stb	r2,140(sp)
   22978:	003f3f06 	br	22678 <__alt_data_end+0xfffe2678>
   2297c:	0005883a 	mov	r2,zero
   22980:	003f5206 	br	226cc <__alt_data_end+0xfffe26cc>
   22984:	90a4703a 	and	r18,r18,r2
   22988:	903f4e26 	beq	r18,zero,226c4 <__alt_data_end+0xfffe26c4>
   2298c:	003f4a06 	br	226b8 <__alt_data_end+0xfffe26b8>
   22990:	00800084 	movi	r2,2
   22994:	10c5c83a 	sub	r2,r2,r3
   22998:	003f8406 	br	227ac <__alt_data_end+0xfffe27ac>
   2299c:	d8802d17 	ldw	r2,180(sp)
   229a0:	d9002d17 	ldw	r4,180(sp)
   229a4:	ac400043 	ldbu	r17,1(r21)
   229a8:	10800017 	ldw	r2,0(r2)
   229ac:	582b883a 	mov	r21,r11
   229b0:	d8802915 	stw	r2,164(sp)
   229b4:	20800104 	addi	r2,r4,4
   229b8:	d9002917 	ldw	r4,164(sp)
   229bc:	d8802d15 	stw	r2,180(sp)
   229c0:	203e7a0e 	bge	r4,zero,223ac <__alt_data_end+0xfffe23ac>
   229c4:	8c403fcc 	andi	r17,r17,255
   229c8:	00bfffc4 	movi	r2,-1
   229cc:	8c40201c 	xori	r17,r17,128
   229d0:	d8802915 	stw	r2,164(sp)
   229d4:	8c7fe004 	addi	r17,r17,-128
   229d8:	00380706 	br	209f8 <__alt_data_end+0xfffe09f8>
   229dc:	d8c02917 	ldw	r3,164(sp)
   229e0:	18c00084 	addi	r3,r3,2
   229e4:	d8c02e15 	stw	r3,184(sp)
   229e8:	1805883a 	mov	r2,r3
   229ec:	183d960e 	bge	r3,zero,22048 <__alt_data_end+0xfffe2048>
   229f0:	003fd606 	br	2294c <__alt_data_end+0xfffe294c>
   229f4:	0005883a 	mov	r2,zero
   229f8:	003f8e06 	br	22834 <__alt_data_end+0xfffe2834>
   229fc:	9080004c 	andi	r2,r18,1
   22a00:	103f811e 	bne	r2,zero,22808 <__alt_data_end+0xfffe2808>
   22a04:	d8802117 	ldw	r2,132(sp)
   22a08:	1405c83a 	sub	r2,r2,r16
   22a0c:	d8803315 	stw	r2,204(sp)
   22a10:	b47ef326 	beq	r22,r17,225e0 <__alt_data_end+0xfffe25e0>
   22a14:	dd802617 	ldw	r22,152(sp)
   22a18:	003f1106 	br	22660 <__alt_data_end+0xfffe2660>
   22a1c:	d9c02785 	stb	r7,158(sp)
   22a20:	00390406 	br	20e34 <__alt_data_end+0xfffe0e34>
   22a24:	d9c02785 	stb	r7,158(sp)
   22a28:	0038d306 	br	20d78 <__alt_data_end+0xfffe0d78>
   22a2c:	d9c02785 	stb	r7,158(sp)
   22a30:	003a6106 	br	213b8 <__alt_data_end+0xfffe13b8>
   22a34:	d9c02785 	stb	r7,158(sp)
   22a38:	003af806 	br	2161c <__alt_data_end+0xfffe161c>
   22a3c:	0005883a 	mov	r2,zero
   22a40:	003d7e06 	br	2203c <__alt_data_end+0xfffe203c>
   22a44:	d8802344 	addi	r2,sp,141
   22a48:	003f1306 	br	22698 <__alt_data_end+0xfffe2698>
   22a4c:	d9c02785 	stb	r7,158(sp)
   22a50:	00392306 	br	20ee0 <__alt_data_end+0xfffe0ee0>
   22a54:	d9c02785 	stb	r7,158(sp)
   22a58:	003aa906 	br	21500 <__alt_data_end+0xfffe1500>
   22a5c:	d9c02785 	stb	r7,158(sp)
   22a60:	003a3d06 	br	21358 <__alt_data_end+0xfffe1358>
   22a64:	d9c02785 	stb	r7,158(sp)
   22a68:	003aca06 	br	21594 <__alt_data_end+0xfffe1594>

00022a6c <__vfprintf_internal>:
   22a6c:	008000f4 	movhi	r2,3
   22a70:	10848804 	addi	r2,r2,4640
   22a74:	300f883a 	mov	r7,r6
   22a78:	280d883a 	mov	r6,r5
   22a7c:	200b883a 	mov	r5,r4
   22a80:	11000017 	ldw	r4,0(r2)
   22a84:	00208741 	jmpi	20874 <___vfprintf_internal_r>

00022a88 <__sbprintf>:
   22a88:	2880030b 	ldhu	r2,12(r5)
   22a8c:	2ac01917 	ldw	r11,100(r5)
   22a90:	2a80038b 	ldhu	r10,14(r5)
   22a94:	2a400717 	ldw	r9,28(r5)
   22a98:	2a000917 	ldw	r8,36(r5)
   22a9c:	defee204 	addi	sp,sp,-1144
   22aa0:	00c10004 	movi	r3,1024
   22aa4:	dc011a15 	stw	r16,1128(sp)
   22aa8:	10bfff4c 	andi	r2,r2,65533
   22aac:	2821883a 	mov	r16,r5
   22ab0:	d8cb883a 	add	r5,sp,r3
   22ab4:	dc811c15 	stw	r18,1136(sp)
   22ab8:	dc411b15 	stw	r17,1132(sp)
   22abc:	dfc11d15 	stw	ra,1140(sp)
   22ac0:	2025883a 	mov	r18,r4
   22ac4:	d881030d 	sth	r2,1036(sp)
   22ac8:	dac11915 	stw	r11,1124(sp)
   22acc:	da81038d 	sth	r10,1038(sp)
   22ad0:	da410715 	stw	r9,1052(sp)
   22ad4:	da010915 	stw	r8,1060(sp)
   22ad8:	dec10015 	stw	sp,1024(sp)
   22adc:	dec10415 	stw	sp,1040(sp)
   22ae0:	d8c10215 	stw	r3,1032(sp)
   22ae4:	d8c10515 	stw	r3,1044(sp)
   22ae8:	d8010615 	stw	zero,1048(sp)
   22aec:	00208740 	call	20874 <___vfprintf_internal_r>
   22af0:	1023883a 	mov	r17,r2
   22af4:	10000416 	blt	r2,zero,22b08 <__sbprintf+0x80>
   22af8:	d9410004 	addi	r5,sp,1024
   22afc:	9009883a 	mov	r4,r18
   22b00:	002473c0 	call	2473c <_fflush_r>
   22b04:	10000d1e 	bne	r2,zero,22b3c <__sbprintf+0xb4>
   22b08:	d881030b 	ldhu	r2,1036(sp)
   22b0c:	1080100c 	andi	r2,r2,64
   22b10:	10000326 	beq	r2,zero,22b20 <__sbprintf+0x98>
   22b14:	8080030b 	ldhu	r2,12(r16)
   22b18:	10801014 	ori	r2,r2,64
   22b1c:	8080030d 	sth	r2,12(r16)
   22b20:	8805883a 	mov	r2,r17
   22b24:	dfc11d17 	ldw	ra,1140(sp)
   22b28:	dc811c17 	ldw	r18,1136(sp)
   22b2c:	dc411b17 	ldw	r17,1132(sp)
   22b30:	dc011a17 	ldw	r16,1128(sp)
   22b34:	dec11e04 	addi	sp,sp,1144
   22b38:	f800283a 	ret
   22b3c:	047fffc4 	movi	r17,-1
   22b40:	003ff106 	br	22b08 <__alt_data_end+0xfffe2b08>

00022b44 <__swsetup_r>:
   22b44:	008000f4 	movhi	r2,3
   22b48:	defffd04 	addi	sp,sp,-12
   22b4c:	10848804 	addi	r2,r2,4640
   22b50:	dc400115 	stw	r17,4(sp)
   22b54:	2023883a 	mov	r17,r4
   22b58:	11000017 	ldw	r4,0(r2)
   22b5c:	dc000015 	stw	r16,0(sp)
   22b60:	dfc00215 	stw	ra,8(sp)
   22b64:	2821883a 	mov	r16,r5
   22b68:	20000226 	beq	r4,zero,22b74 <__swsetup_r+0x30>
   22b6c:	20800e17 	ldw	r2,56(r4)
   22b70:	10003126 	beq	r2,zero,22c38 <__swsetup_r+0xf4>
   22b74:	8080030b 	ldhu	r2,12(r16)
   22b78:	10c0020c 	andi	r3,r2,8
   22b7c:	1009883a 	mov	r4,r2
   22b80:	18000f26 	beq	r3,zero,22bc0 <__swsetup_r+0x7c>
   22b84:	80c00417 	ldw	r3,16(r16)
   22b88:	18001526 	beq	r3,zero,22be0 <__swsetup_r+0x9c>
   22b8c:	1100004c 	andi	r4,r2,1
   22b90:	20001c1e 	bne	r4,zero,22c04 <__swsetup_r+0xc0>
   22b94:	1080008c 	andi	r2,r2,2
   22b98:	1000291e 	bne	r2,zero,22c40 <__swsetup_r+0xfc>
   22b9c:	80800517 	ldw	r2,20(r16)
   22ba0:	80800215 	stw	r2,8(r16)
   22ba4:	18001c26 	beq	r3,zero,22c18 <__swsetup_r+0xd4>
   22ba8:	0005883a 	mov	r2,zero
   22bac:	dfc00217 	ldw	ra,8(sp)
   22bb0:	dc400117 	ldw	r17,4(sp)
   22bb4:	dc000017 	ldw	r16,0(sp)
   22bb8:	dec00304 	addi	sp,sp,12
   22bbc:	f800283a 	ret
   22bc0:	2080040c 	andi	r2,r4,16
   22bc4:	10002e26 	beq	r2,zero,22c80 <__swsetup_r+0x13c>
   22bc8:	2080010c 	andi	r2,r4,4
   22bcc:	10001e1e 	bne	r2,zero,22c48 <__swsetup_r+0x104>
   22bd0:	80c00417 	ldw	r3,16(r16)
   22bd4:	20800214 	ori	r2,r4,8
   22bd8:	8080030d 	sth	r2,12(r16)
   22bdc:	183feb1e 	bne	r3,zero,22b8c <__alt_data_end+0xfffe2b8c>
   22be0:	1100a00c 	andi	r4,r2,640
   22be4:	01408004 	movi	r5,512
   22be8:	217fe826 	beq	r4,r5,22b8c <__alt_data_end+0xfffe2b8c>
   22bec:	800b883a 	mov	r5,r16
   22bf0:	8809883a 	mov	r4,r17
   22bf4:	00256bc0 	call	256bc <__smakebuf_r>
   22bf8:	8080030b 	ldhu	r2,12(r16)
   22bfc:	80c00417 	ldw	r3,16(r16)
   22c00:	003fe206 	br	22b8c <__alt_data_end+0xfffe2b8c>
   22c04:	80800517 	ldw	r2,20(r16)
   22c08:	80000215 	stw	zero,8(r16)
   22c0c:	0085c83a 	sub	r2,zero,r2
   22c10:	80800615 	stw	r2,24(r16)
   22c14:	183fe41e 	bne	r3,zero,22ba8 <__alt_data_end+0xfffe2ba8>
   22c18:	80c0030b 	ldhu	r3,12(r16)
   22c1c:	0005883a 	mov	r2,zero
   22c20:	1900200c 	andi	r4,r3,128
   22c24:	203fe126 	beq	r4,zero,22bac <__alt_data_end+0xfffe2bac>
   22c28:	18c01014 	ori	r3,r3,64
   22c2c:	80c0030d 	sth	r3,12(r16)
   22c30:	00bfffc4 	movi	r2,-1
   22c34:	003fdd06 	br	22bac <__alt_data_end+0xfffe2bac>
   22c38:	0024b180 	call	24b18 <__sinit>
   22c3c:	003fcd06 	br	22b74 <__alt_data_end+0xfffe2b74>
   22c40:	0005883a 	mov	r2,zero
   22c44:	003fd606 	br	22ba0 <__alt_data_end+0xfffe2ba0>
   22c48:	81400c17 	ldw	r5,48(r16)
   22c4c:	28000626 	beq	r5,zero,22c68 <__swsetup_r+0x124>
   22c50:	80801004 	addi	r2,r16,64
   22c54:	28800326 	beq	r5,r2,22c64 <__swsetup_r+0x120>
   22c58:	8809883a 	mov	r4,r17
   22c5c:	0024c8c0 	call	24c8c <_free_r>
   22c60:	8100030b 	ldhu	r4,12(r16)
   22c64:	80000c15 	stw	zero,48(r16)
   22c68:	80c00417 	ldw	r3,16(r16)
   22c6c:	00bff6c4 	movi	r2,-37
   22c70:	1108703a 	and	r4,r2,r4
   22c74:	80000115 	stw	zero,4(r16)
   22c78:	80c00015 	stw	r3,0(r16)
   22c7c:	003fd506 	br	22bd4 <__alt_data_end+0xfffe2bd4>
   22c80:	00800244 	movi	r2,9
   22c84:	88800015 	stw	r2,0(r17)
   22c88:	20801014 	ori	r2,r4,64
   22c8c:	8080030d 	sth	r2,12(r16)
   22c90:	00bfffc4 	movi	r2,-1
   22c94:	003fc506 	br	22bac <__alt_data_end+0xfffe2bac>

00022c98 <quorem>:
   22c98:	defff704 	addi	sp,sp,-36
   22c9c:	dc800215 	stw	r18,8(sp)
   22ca0:	20800417 	ldw	r2,16(r4)
   22ca4:	2c800417 	ldw	r18,16(r5)
   22ca8:	dfc00815 	stw	ra,32(sp)
   22cac:	ddc00715 	stw	r23,28(sp)
   22cb0:	dd800615 	stw	r22,24(sp)
   22cb4:	dd400515 	stw	r21,20(sp)
   22cb8:	dd000415 	stw	r20,16(sp)
   22cbc:	dcc00315 	stw	r19,12(sp)
   22cc0:	dc400115 	stw	r17,4(sp)
   22cc4:	dc000015 	stw	r16,0(sp)
   22cc8:	14807116 	blt	r2,r18,22e90 <quorem+0x1f8>
   22ccc:	94bfffc4 	addi	r18,r18,-1
   22cd0:	94ad883a 	add	r22,r18,r18
   22cd4:	b5ad883a 	add	r22,r22,r22
   22cd8:	2c400504 	addi	r17,r5,20
   22cdc:	8da9883a 	add	r20,r17,r22
   22ce0:	25400504 	addi	r21,r4,20
   22ce4:	282f883a 	mov	r23,r5
   22ce8:	adad883a 	add	r22,r21,r22
   22cec:	a1400017 	ldw	r5,0(r20)
   22cf0:	2021883a 	mov	r16,r4
   22cf4:	b1000017 	ldw	r4,0(r22)
   22cf8:	29400044 	addi	r5,r5,1
   22cfc:	002a8980 	call	2a898 <__udivsi3>
   22d00:	1027883a 	mov	r19,r2
   22d04:	10002c26 	beq	r2,zero,22db8 <quorem+0x120>
   22d08:	a813883a 	mov	r9,r21
   22d0c:	880b883a 	mov	r5,r17
   22d10:	0009883a 	mov	r4,zero
   22d14:	000d883a 	mov	r6,zero
   22d18:	2a000017 	ldw	r8,0(r5)
   22d1c:	49c00017 	ldw	r7,0(r9)
   22d20:	29400104 	addi	r5,r5,4
   22d24:	40bfffcc 	andi	r2,r8,65535
   22d28:	14c5383a 	mul	r2,r2,r19
   22d2c:	4010d43a 	srli	r8,r8,16
   22d30:	38ffffcc 	andi	r3,r7,65535
   22d34:	1105883a 	add	r2,r2,r4
   22d38:	1008d43a 	srli	r4,r2,16
   22d3c:	44d1383a 	mul	r8,r8,r19
   22d40:	198d883a 	add	r6,r3,r6
   22d44:	10ffffcc 	andi	r3,r2,65535
   22d48:	30c7c83a 	sub	r3,r6,r3
   22d4c:	380ed43a 	srli	r7,r7,16
   22d50:	4105883a 	add	r2,r8,r4
   22d54:	180dd43a 	srai	r6,r3,16
   22d58:	113fffcc 	andi	r4,r2,65535
   22d5c:	390fc83a 	sub	r7,r7,r4
   22d60:	398d883a 	add	r6,r7,r6
   22d64:	300e943a 	slli	r7,r6,16
   22d68:	18ffffcc 	andi	r3,r3,65535
   22d6c:	1008d43a 	srli	r4,r2,16
   22d70:	38ceb03a 	or	r7,r7,r3
   22d74:	49c00015 	stw	r7,0(r9)
   22d78:	300dd43a 	srai	r6,r6,16
   22d7c:	4a400104 	addi	r9,r9,4
   22d80:	a17fe52e 	bgeu	r20,r5,22d18 <__alt_data_end+0xfffe2d18>
   22d84:	b0800017 	ldw	r2,0(r22)
   22d88:	10000b1e 	bne	r2,zero,22db8 <quorem+0x120>
   22d8c:	b0bfff04 	addi	r2,r22,-4
   22d90:	a880082e 	bgeu	r21,r2,22db4 <quorem+0x11c>
   22d94:	b0ffff17 	ldw	r3,-4(r22)
   22d98:	18000326 	beq	r3,zero,22da8 <quorem+0x110>
   22d9c:	00000506 	br	22db4 <quorem+0x11c>
   22da0:	10c00017 	ldw	r3,0(r2)
   22da4:	1800031e 	bne	r3,zero,22db4 <quorem+0x11c>
   22da8:	10bfff04 	addi	r2,r2,-4
   22dac:	94bfffc4 	addi	r18,r18,-1
   22db0:	a8bffb36 	bltu	r21,r2,22da0 <__alt_data_end+0xfffe2da0>
   22db4:	84800415 	stw	r18,16(r16)
   22db8:	b80b883a 	mov	r5,r23
   22dbc:	8009883a 	mov	r4,r16
   22dc0:	0026dfc0 	call	26dfc <__mcmp>
   22dc4:	10002616 	blt	r2,zero,22e60 <quorem+0x1c8>
   22dc8:	9cc00044 	addi	r19,r19,1
   22dcc:	a805883a 	mov	r2,r21
   22dd0:	000b883a 	mov	r5,zero
   22dd4:	11000017 	ldw	r4,0(r2)
   22dd8:	89800017 	ldw	r6,0(r17)
   22ddc:	10800104 	addi	r2,r2,4
   22de0:	20ffffcc 	andi	r3,r4,65535
   22de4:	194b883a 	add	r5,r3,r5
   22de8:	30ffffcc 	andi	r3,r6,65535
   22dec:	28c7c83a 	sub	r3,r5,r3
   22df0:	300cd43a 	srli	r6,r6,16
   22df4:	2008d43a 	srli	r4,r4,16
   22df8:	180bd43a 	srai	r5,r3,16
   22dfc:	18ffffcc 	andi	r3,r3,65535
   22e00:	2189c83a 	sub	r4,r4,r6
   22e04:	2149883a 	add	r4,r4,r5
   22e08:	200c943a 	slli	r6,r4,16
   22e0c:	8c400104 	addi	r17,r17,4
   22e10:	200bd43a 	srai	r5,r4,16
   22e14:	30c6b03a 	or	r3,r6,r3
   22e18:	10ffff15 	stw	r3,-4(r2)
   22e1c:	a47fed2e 	bgeu	r20,r17,22dd4 <__alt_data_end+0xfffe2dd4>
   22e20:	9485883a 	add	r2,r18,r18
   22e24:	1085883a 	add	r2,r2,r2
   22e28:	a887883a 	add	r3,r21,r2
   22e2c:	18800017 	ldw	r2,0(r3)
   22e30:	10000b1e 	bne	r2,zero,22e60 <quorem+0x1c8>
   22e34:	18bfff04 	addi	r2,r3,-4
   22e38:	a880082e 	bgeu	r21,r2,22e5c <quorem+0x1c4>
   22e3c:	18ffff17 	ldw	r3,-4(r3)
   22e40:	18000326 	beq	r3,zero,22e50 <quorem+0x1b8>
   22e44:	00000506 	br	22e5c <quorem+0x1c4>
   22e48:	10c00017 	ldw	r3,0(r2)
   22e4c:	1800031e 	bne	r3,zero,22e5c <quorem+0x1c4>
   22e50:	10bfff04 	addi	r2,r2,-4
   22e54:	94bfffc4 	addi	r18,r18,-1
   22e58:	a8bffb36 	bltu	r21,r2,22e48 <__alt_data_end+0xfffe2e48>
   22e5c:	84800415 	stw	r18,16(r16)
   22e60:	9805883a 	mov	r2,r19
   22e64:	dfc00817 	ldw	ra,32(sp)
   22e68:	ddc00717 	ldw	r23,28(sp)
   22e6c:	dd800617 	ldw	r22,24(sp)
   22e70:	dd400517 	ldw	r21,20(sp)
   22e74:	dd000417 	ldw	r20,16(sp)
   22e78:	dcc00317 	ldw	r19,12(sp)
   22e7c:	dc800217 	ldw	r18,8(sp)
   22e80:	dc400117 	ldw	r17,4(sp)
   22e84:	dc000017 	ldw	r16,0(sp)
   22e88:	dec00904 	addi	sp,sp,36
   22e8c:	f800283a 	ret
   22e90:	0005883a 	mov	r2,zero
   22e94:	003ff306 	br	22e64 <__alt_data_end+0xfffe2e64>

00022e98 <_dtoa_r>:
   22e98:	20801017 	ldw	r2,64(r4)
   22e9c:	deffde04 	addi	sp,sp,-136
   22ea0:	df002015 	stw	fp,128(sp)
   22ea4:	dcc01b15 	stw	r19,108(sp)
   22ea8:	dc801a15 	stw	r18,104(sp)
   22eac:	dc401915 	stw	r17,100(sp)
   22eb0:	dc001815 	stw	r16,96(sp)
   22eb4:	dfc02115 	stw	ra,132(sp)
   22eb8:	ddc01f15 	stw	r23,124(sp)
   22ebc:	dd801e15 	stw	r22,120(sp)
   22ec0:	dd401d15 	stw	r21,116(sp)
   22ec4:	dd001c15 	stw	r20,112(sp)
   22ec8:	d9c00315 	stw	r7,12(sp)
   22ecc:	2039883a 	mov	fp,r4
   22ed0:	3023883a 	mov	r17,r6
   22ed4:	2825883a 	mov	r18,r5
   22ed8:	dc002417 	ldw	r16,144(sp)
   22edc:	3027883a 	mov	r19,r6
   22ee0:	10000826 	beq	r2,zero,22f04 <_dtoa_r+0x6c>
   22ee4:	21801117 	ldw	r6,68(r4)
   22ee8:	00c00044 	movi	r3,1
   22eec:	100b883a 	mov	r5,r2
   22ef0:	1986983a 	sll	r3,r3,r6
   22ef4:	11800115 	stw	r6,4(r2)
   22ef8:	10c00215 	stw	r3,8(r2)
   22efc:	00265dc0 	call	265dc <_Bfree>
   22f00:	e0001015 	stw	zero,64(fp)
   22f04:	88002e16 	blt	r17,zero,22fc0 <_dtoa_r+0x128>
   22f08:	80000015 	stw	zero,0(r16)
   22f0c:	889ffc2c 	andhi	r2,r17,32752
   22f10:	00dffc34 	movhi	r3,32752
   22f14:	10c01c26 	beq	r2,r3,22f88 <_dtoa_r+0xf0>
   22f18:	000d883a 	mov	r6,zero
   22f1c:	000f883a 	mov	r7,zero
   22f20:	9009883a 	mov	r4,r18
   22f24:	980b883a 	mov	r5,r19
   22f28:	002bae80 	call	2bae8 <__eqdf2>
   22f2c:	10002b1e 	bne	r2,zero,22fdc <_dtoa_r+0x144>
   22f30:	d9c02317 	ldw	r7,140(sp)
   22f34:	00800044 	movi	r2,1
   22f38:	38800015 	stw	r2,0(r7)
   22f3c:	d8802517 	ldw	r2,148(sp)
   22f40:	10019e26 	beq	r2,zero,235bc <_dtoa_r+0x724>
   22f44:	d8c02517 	ldw	r3,148(sp)
   22f48:	008000f4 	movhi	r2,3
   22f4c:	10bd2d44 	addi	r2,r2,-2891
   22f50:	18800015 	stw	r2,0(r3)
   22f54:	10bfffc4 	addi	r2,r2,-1
   22f58:	dfc02117 	ldw	ra,132(sp)
   22f5c:	df002017 	ldw	fp,128(sp)
   22f60:	ddc01f17 	ldw	r23,124(sp)
   22f64:	dd801e17 	ldw	r22,120(sp)
   22f68:	dd401d17 	ldw	r21,116(sp)
   22f6c:	dd001c17 	ldw	r20,112(sp)
   22f70:	dcc01b17 	ldw	r19,108(sp)
   22f74:	dc801a17 	ldw	r18,104(sp)
   22f78:	dc401917 	ldw	r17,100(sp)
   22f7c:	dc001817 	ldw	r16,96(sp)
   22f80:	dec02204 	addi	sp,sp,136
   22f84:	f800283a 	ret
   22f88:	d8c02317 	ldw	r3,140(sp)
   22f8c:	0089c3c4 	movi	r2,9999
   22f90:	18800015 	stw	r2,0(r3)
   22f94:	90017726 	beq	r18,zero,23574 <_dtoa_r+0x6dc>
   22f98:	008000f4 	movhi	r2,3
   22f9c:	10bd3904 	addi	r2,r2,-2844
   22fa0:	d9002517 	ldw	r4,148(sp)
   22fa4:	203fec26 	beq	r4,zero,22f58 <__alt_data_end+0xfffe2f58>
   22fa8:	10c000c7 	ldb	r3,3(r2)
   22fac:	1801781e 	bne	r3,zero,23590 <_dtoa_r+0x6f8>
   22fb0:	10c000c4 	addi	r3,r2,3
   22fb4:	d9802517 	ldw	r6,148(sp)
   22fb8:	30c00015 	stw	r3,0(r6)
   22fbc:	003fe606 	br	22f58 <__alt_data_end+0xfffe2f58>
   22fc0:	04e00034 	movhi	r19,32768
   22fc4:	9cffffc4 	addi	r19,r19,-1
   22fc8:	00800044 	movi	r2,1
   22fcc:	8ce6703a 	and	r19,r17,r19
   22fd0:	80800015 	stw	r2,0(r16)
   22fd4:	9823883a 	mov	r17,r19
   22fd8:	003fcc06 	br	22f0c <__alt_data_end+0xfffe2f0c>
   22fdc:	d8800204 	addi	r2,sp,8
   22fe0:	d8800015 	stw	r2,0(sp)
   22fe4:	d9c00104 	addi	r7,sp,4
   22fe8:	900b883a 	mov	r5,r18
   22fec:	980d883a 	mov	r6,r19
   22ff0:	e009883a 	mov	r4,fp
   22ff4:	8820d53a 	srli	r16,r17,20
   22ff8:	00271c80 	call	271c8 <__d2b>
   22ffc:	d8800915 	stw	r2,36(sp)
   23000:	8001651e 	bne	r16,zero,23598 <_dtoa_r+0x700>
   23004:	dd800217 	ldw	r22,8(sp)
   23008:	dc000117 	ldw	r16,4(sp)
   2300c:	00800804 	movi	r2,32
   23010:	b421883a 	add	r16,r22,r16
   23014:	80c10c84 	addi	r3,r16,1074
   23018:	10c2d10e 	bge	r2,r3,23b60 <_dtoa_r+0xcc8>
   2301c:	00801004 	movi	r2,64
   23020:	81010484 	addi	r4,r16,1042
   23024:	10c7c83a 	sub	r3,r2,r3
   23028:	9108d83a 	srl	r4,r18,r4
   2302c:	88e2983a 	sll	r17,r17,r3
   23030:	2448b03a 	or	r4,r4,r17
   23034:	002ceb00 	call	2ceb0 <__floatunsidf>
   23038:	017f8434 	movhi	r5,65040
   2303c:	01800044 	movi	r6,1
   23040:	1009883a 	mov	r4,r2
   23044:	194b883a 	add	r5,r3,r5
   23048:	843fffc4 	addi	r16,r16,-1
   2304c:	d9801115 	stw	r6,68(sp)
   23050:	000d883a 	mov	r6,zero
   23054:	01cffe34 	movhi	r7,16376
   23058:	002c4580 	call	2c458 <__subdf3>
   2305c:	0198dbf4 	movhi	r6,25455
   23060:	01cff4f4 	movhi	r7,16339
   23064:	3190d844 	addi	r6,r6,17249
   23068:	39e1e9c4 	addi	r7,r7,-30809
   2306c:	1009883a 	mov	r4,r2
   23070:	180b883a 	mov	r5,r3
   23074:	002bd400 	call	2bd40 <__muldf3>
   23078:	01a2d874 	movhi	r6,35681
   2307c:	01cff1f4 	movhi	r7,16327
   23080:	31b22cc4 	addi	r6,r6,-14157
   23084:	39e28a04 	addi	r7,r7,-30168
   23088:	180b883a 	mov	r5,r3
   2308c:	1009883a 	mov	r4,r2
   23090:	002a9540 	call	2a954 <__adddf3>
   23094:	8009883a 	mov	r4,r16
   23098:	1029883a 	mov	r20,r2
   2309c:	1823883a 	mov	r17,r3
   230a0:	002cdd40 	call	2cdd4 <__floatsidf>
   230a4:	019427f4 	movhi	r6,20639
   230a8:	01cff4f4 	movhi	r7,16339
   230ac:	319e7ec4 	addi	r6,r6,31227
   230b0:	39d104c4 	addi	r7,r7,17427
   230b4:	1009883a 	mov	r4,r2
   230b8:	180b883a 	mov	r5,r3
   230bc:	002bd400 	call	2bd40 <__muldf3>
   230c0:	100d883a 	mov	r6,r2
   230c4:	180f883a 	mov	r7,r3
   230c8:	a009883a 	mov	r4,r20
   230cc:	880b883a 	mov	r5,r17
   230d0:	002a9540 	call	2a954 <__adddf3>
   230d4:	1009883a 	mov	r4,r2
   230d8:	180b883a 	mov	r5,r3
   230dc:	1029883a 	mov	r20,r2
   230e0:	1823883a 	mov	r17,r3
   230e4:	002cd540 	call	2cd54 <__fixdfsi>
   230e8:	000d883a 	mov	r6,zero
   230ec:	000f883a 	mov	r7,zero
   230f0:	a009883a 	mov	r4,r20
   230f4:	880b883a 	mov	r5,r17
   230f8:	d8800515 	stw	r2,20(sp)
   230fc:	002bc4c0 	call	2bc4c <__ledf2>
   23100:	10028716 	blt	r2,zero,23b20 <_dtoa_r+0xc88>
   23104:	d8c00517 	ldw	r3,20(sp)
   23108:	00800584 	movi	r2,22
   2310c:	10c27536 	bltu	r2,r3,23ae4 <_dtoa_r+0xc4c>
   23110:	180490fa 	slli	r2,r3,3
   23114:	00c000f4 	movhi	r3,3
   23118:	18fd5504 	addi	r3,r3,-2732
   2311c:	1885883a 	add	r2,r3,r2
   23120:	11000017 	ldw	r4,0(r2)
   23124:	11400117 	ldw	r5,4(r2)
   23128:	900d883a 	mov	r6,r18
   2312c:	980f883a 	mov	r7,r19
   23130:	002bb700 	call	2bb70 <__gedf2>
   23134:	00828d0e 	bge	zero,r2,23b6c <_dtoa_r+0xcd4>
   23138:	d9000517 	ldw	r4,20(sp)
   2313c:	d8000e15 	stw	zero,56(sp)
   23140:	213fffc4 	addi	r4,r4,-1
   23144:	d9000515 	stw	r4,20(sp)
   23148:	b42dc83a 	sub	r22,r22,r16
   2314c:	b5bfffc4 	addi	r22,r22,-1
   23150:	b0026f16 	blt	r22,zero,23b10 <_dtoa_r+0xc78>
   23154:	d8000815 	stw	zero,32(sp)
   23158:	d9c00517 	ldw	r7,20(sp)
   2315c:	38026416 	blt	r7,zero,23af0 <_dtoa_r+0xc58>
   23160:	b1ed883a 	add	r22,r22,r7
   23164:	d9c00d15 	stw	r7,52(sp)
   23168:	d8000a15 	stw	zero,40(sp)
   2316c:	d9800317 	ldw	r6,12(sp)
   23170:	00800244 	movi	r2,9
   23174:	11811436 	bltu	r2,r6,235c8 <_dtoa_r+0x730>
   23178:	00800144 	movi	r2,5
   2317c:	1184e10e 	bge	r2,r6,24504 <_dtoa_r+0x166c>
   23180:	31bfff04 	addi	r6,r6,-4
   23184:	d9800315 	stw	r6,12(sp)
   23188:	0023883a 	mov	r17,zero
   2318c:	d9800317 	ldw	r6,12(sp)
   23190:	008000c4 	movi	r2,3
   23194:	30836726 	beq	r6,r2,23f34 <_dtoa_r+0x109c>
   23198:	1183410e 	bge	r2,r6,23ea0 <_dtoa_r+0x1008>
   2319c:	d9c00317 	ldw	r7,12(sp)
   231a0:	00800104 	movi	r2,4
   231a4:	38827c26 	beq	r7,r2,23b98 <_dtoa_r+0xd00>
   231a8:	00800144 	movi	r2,5
   231ac:	3884c41e 	bne	r7,r2,244c0 <_dtoa_r+0x1628>
   231b0:	00800044 	movi	r2,1
   231b4:	d8800b15 	stw	r2,44(sp)
   231b8:	d8c00517 	ldw	r3,20(sp)
   231bc:	d9002217 	ldw	r4,136(sp)
   231c0:	1907883a 	add	r3,r3,r4
   231c4:	19800044 	addi	r6,r3,1
   231c8:	d8c00c15 	stw	r3,48(sp)
   231cc:	d9800615 	stw	r6,24(sp)
   231d0:	0183a40e 	bge	zero,r6,24064 <_dtoa_r+0x11cc>
   231d4:	d9800617 	ldw	r6,24(sp)
   231d8:	3021883a 	mov	r16,r6
   231dc:	e0001115 	stw	zero,68(fp)
   231e0:	008005c4 	movi	r2,23
   231e4:	1184c92e 	bgeu	r2,r6,2450c <_dtoa_r+0x1674>
   231e8:	00c00044 	movi	r3,1
   231ec:	00800104 	movi	r2,4
   231f0:	1085883a 	add	r2,r2,r2
   231f4:	11000504 	addi	r4,r2,20
   231f8:	180b883a 	mov	r5,r3
   231fc:	18c00044 	addi	r3,r3,1
   23200:	313ffb2e 	bgeu	r6,r4,231f0 <__alt_data_end+0xfffe31f0>
   23204:	e1401115 	stw	r5,68(fp)
   23208:	e009883a 	mov	r4,fp
   2320c:	00265340 	call	26534 <_Balloc>
   23210:	d8800715 	stw	r2,28(sp)
   23214:	e0801015 	stw	r2,64(fp)
   23218:	00800384 	movi	r2,14
   2321c:	1400f736 	bltu	r2,r16,235fc <_dtoa_r+0x764>
   23220:	8800f626 	beq	r17,zero,235fc <_dtoa_r+0x764>
   23224:	d9c00517 	ldw	r7,20(sp)
   23228:	01c39a0e 	bge	zero,r7,24094 <_dtoa_r+0x11fc>
   2322c:	388003cc 	andi	r2,r7,15
   23230:	100490fa 	slli	r2,r2,3
   23234:	382bd13a 	srai	r21,r7,4
   23238:	00c000f4 	movhi	r3,3
   2323c:	18fd5504 	addi	r3,r3,-2732
   23240:	1885883a 	add	r2,r3,r2
   23244:	a8c0040c 	andi	r3,r21,16
   23248:	12400017 	ldw	r9,0(r2)
   2324c:	12000117 	ldw	r8,4(r2)
   23250:	18037926 	beq	r3,zero,24038 <_dtoa_r+0x11a0>
   23254:	008000f4 	movhi	r2,3
   23258:	10bd4b04 	addi	r2,r2,-2772
   2325c:	11800817 	ldw	r6,32(r2)
   23260:	11c00917 	ldw	r7,36(r2)
   23264:	9009883a 	mov	r4,r18
   23268:	980b883a 	mov	r5,r19
   2326c:	da001715 	stw	r8,92(sp)
   23270:	da401615 	stw	r9,88(sp)
   23274:	002b2000 	call	2b200 <__divdf3>
   23278:	da001717 	ldw	r8,92(sp)
   2327c:	da401617 	ldw	r9,88(sp)
   23280:	ad4003cc 	andi	r21,r21,15
   23284:	040000c4 	movi	r16,3
   23288:	1023883a 	mov	r17,r2
   2328c:	1829883a 	mov	r20,r3
   23290:	a8001126 	beq	r21,zero,232d8 <_dtoa_r+0x440>
   23294:	05c000f4 	movhi	r23,3
   23298:	bdfd4b04 	addi	r23,r23,-2772
   2329c:	4805883a 	mov	r2,r9
   232a0:	4007883a 	mov	r3,r8
   232a4:	a980004c 	andi	r6,r21,1
   232a8:	1009883a 	mov	r4,r2
   232ac:	a82bd07a 	srai	r21,r21,1
   232b0:	180b883a 	mov	r5,r3
   232b4:	30000426 	beq	r6,zero,232c8 <_dtoa_r+0x430>
   232b8:	b9800017 	ldw	r6,0(r23)
   232bc:	b9c00117 	ldw	r7,4(r23)
   232c0:	84000044 	addi	r16,r16,1
   232c4:	002bd400 	call	2bd40 <__muldf3>
   232c8:	bdc00204 	addi	r23,r23,8
   232cc:	a83ff51e 	bne	r21,zero,232a4 <__alt_data_end+0xfffe32a4>
   232d0:	1013883a 	mov	r9,r2
   232d4:	1811883a 	mov	r8,r3
   232d8:	480d883a 	mov	r6,r9
   232dc:	400f883a 	mov	r7,r8
   232e0:	8809883a 	mov	r4,r17
   232e4:	a00b883a 	mov	r5,r20
   232e8:	002b2000 	call	2b200 <__divdf3>
   232ec:	d8800f15 	stw	r2,60(sp)
   232f0:	d8c01015 	stw	r3,64(sp)
   232f4:	d8c00e17 	ldw	r3,56(sp)
   232f8:	18000626 	beq	r3,zero,23314 <_dtoa_r+0x47c>
   232fc:	d9000f17 	ldw	r4,60(sp)
   23300:	d9401017 	ldw	r5,64(sp)
   23304:	000d883a 	mov	r6,zero
   23308:	01cffc34 	movhi	r7,16368
   2330c:	002bc4c0 	call	2bc4c <__ledf2>
   23310:	10040b16 	blt	r2,zero,24340 <_dtoa_r+0x14a8>
   23314:	8009883a 	mov	r4,r16
   23318:	002cdd40 	call	2cdd4 <__floatsidf>
   2331c:	d9800f17 	ldw	r6,60(sp)
   23320:	d9c01017 	ldw	r7,64(sp)
   23324:	1009883a 	mov	r4,r2
   23328:	180b883a 	mov	r5,r3
   2332c:	002bd400 	call	2bd40 <__muldf3>
   23330:	000d883a 	mov	r6,zero
   23334:	01d00734 	movhi	r7,16412
   23338:	1009883a 	mov	r4,r2
   2333c:	180b883a 	mov	r5,r3
   23340:	002a9540 	call	2a954 <__adddf3>
   23344:	1021883a 	mov	r16,r2
   23348:	d8800617 	ldw	r2,24(sp)
   2334c:	047f3034 	movhi	r17,64704
   23350:	1c63883a 	add	r17,r3,r17
   23354:	10031826 	beq	r2,zero,23fb8 <_dtoa_r+0x1120>
   23358:	d8c00517 	ldw	r3,20(sp)
   2335c:	db000617 	ldw	r12,24(sp)
   23360:	d8c01315 	stw	r3,76(sp)
   23364:	d9000b17 	ldw	r4,44(sp)
   23368:	20038f26 	beq	r4,zero,241a8 <_dtoa_r+0x1310>
   2336c:	60bfffc4 	addi	r2,r12,-1
   23370:	100490fa 	slli	r2,r2,3
   23374:	00c000f4 	movhi	r3,3
   23378:	18fd5504 	addi	r3,r3,-2732
   2337c:	1885883a 	add	r2,r3,r2
   23380:	11800017 	ldw	r6,0(r2)
   23384:	11c00117 	ldw	r7,4(r2)
   23388:	d8800717 	ldw	r2,28(sp)
   2338c:	0009883a 	mov	r4,zero
   23390:	014ff834 	movhi	r5,16352
   23394:	db001615 	stw	r12,88(sp)
   23398:	15c00044 	addi	r23,r2,1
   2339c:	002b2000 	call	2b200 <__divdf3>
   233a0:	800d883a 	mov	r6,r16
   233a4:	880f883a 	mov	r7,r17
   233a8:	1009883a 	mov	r4,r2
   233ac:	180b883a 	mov	r5,r3
   233b0:	002c4580 	call	2c458 <__subdf3>
   233b4:	d9401017 	ldw	r5,64(sp)
   233b8:	d9000f17 	ldw	r4,60(sp)
   233bc:	102b883a 	mov	r21,r2
   233c0:	d8c01215 	stw	r3,72(sp)
   233c4:	002cd540 	call	2cd54 <__fixdfsi>
   233c8:	1009883a 	mov	r4,r2
   233cc:	1029883a 	mov	r20,r2
   233d0:	002cdd40 	call	2cdd4 <__floatsidf>
   233d4:	d9000f17 	ldw	r4,60(sp)
   233d8:	d9401017 	ldw	r5,64(sp)
   233dc:	100d883a 	mov	r6,r2
   233e0:	180f883a 	mov	r7,r3
   233e4:	002c4580 	call	2c458 <__subdf3>
   233e8:	1823883a 	mov	r17,r3
   233ec:	d8c00717 	ldw	r3,28(sp)
   233f0:	d9401217 	ldw	r5,72(sp)
   233f4:	a2000c04 	addi	r8,r20,48
   233f8:	1021883a 	mov	r16,r2
   233fc:	1a000005 	stb	r8,0(r3)
   23400:	800d883a 	mov	r6,r16
   23404:	880f883a 	mov	r7,r17
   23408:	a809883a 	mov	r4,r21
   2340c:	4029883a 	mov	r20,r8
   23410:	002bb700 	call	2bb70 <__gedf2>
   23414:	00841d16 	blt	zero,r2,2448c <_dtoa_r+0x15f4>
   23418:	800d883a 	mov	r6,r16
   2341c:	880f883a 	mov	r7,r17
   23420:	0009883a 	mov	r4,zero
   23424:	014ffc34 	movhi	r5,16368
   23428:	002c4580 	call	2c458 <__subdf3>
   2342c:	d9401217 	ldw	r5,72(sp)
   23430:	100d883a 	mov	r6,r2
   23434:	180f883a 	mov	r7,r3
   23438:	a809883a 	mov	r4,r21
   2343c:	002bb700 	call	2bb70 <__gedf2>
   23440:	db001617 	ldw	r12,88(sp)
   23444:	00840e16 	blt	zero,r2,24480 <_dtoa_r+0x15e8>
   23448:	00800044 	movi	r2,1
   2344c:	13006b0e 	bge	r2,r12,235fc <_dtoa_r+0x764>
   23450:	d9000717 	ldw	r4,28(sp)
   23454:	dd800f15 	stw	r22,60(sp)
   23458:	dcc01015 	stw	r19,64(sp)
   2345c:	2319883a 	add	r12,r4,r12
   23460:	dcc01217 	ldw	r19,72(sp)
   23464:	602d883a 	mov	r22,r12
   23468:	dc801215 	stw	r18,72(sp)
   2346c:	b825883a 	mov	r18,r23
   23470:	00000906 	br	23498 <_dtoa_r+0x600>
   23474:	002c4580 	call	2c458 <__subdf3>
   23478:	a80d883a 	mov	r6,r21
   2347c:	980f883a 	mov	r7,r19
   23480:	1009883a 	mov	r4,r2
   23484:	180b883a 	mov	r5,r3
   23488:	002bc4c0 	call	2bc4c <__ledf2>
   2348c:	1003e816 	blt	r2,zero,24430 <_dtoa_r+0x1598>
   23490:	b825883a 	mov	r18,r23
   23494:	bd83e926 	beq	r23,r22,2443c <_dtoa_r+0x15a4>
   23498:	a809883a 	mov	r4,r21
   2349c:	980b883a 	mov	r5,r19
   234a0:	000d883a 	mov	r6,zero
   234a4:	01d00934 	movhi	r7,16420
   234a8:	002bd400 	call	2bd40 <__muldf3>
   234ac:	000d883a 	mov	r6,zero
   234b0:	01d00934 	movhi	r7,16420
   234b4:	8009883a 	mov	r4,r16
   234b8:	880b883a 	mov	r5,r17
   234bc:	102b883a 	mov	r21,r2
   234c0:	1827883a 	mov	r19,r3
   234c4:	002bd400 	call	2bd40 <__muldf3>
   234c8:	180b883a 	mov	r5,r3
   234cc:	1009883a 	mov	r4,r2
   234d0:	1821883a 	mov	r16,r3
   234d4:	1023883a 	mov	r17,r2
   234d8:	002cd540 	call	2cd54 <__fixdfsi>
   234dc:	1009883a 	mov	r4,r2
   234e0:	1029883a 	mov	r20,r2
   234e4:	002cdd40 	call	2cdd4 <__floatsidf>
   234e8:	8809883a 	mov	r4,r17
   234ec:	800b883a 	mov	r5,r16
   234f0:	100d883a 	mov	r6,r2
   234f4:	180f883a 	mov	r7,r3
   234f8:	002c4580 	call	2c458 <__subdf3>
   234fc:	a5000c04 	addi	r20,r20,48
   23500:	a80d883a 	mov	r6,r21
   23504:	980f883a 	mov	r7,r19
   23508:	1009883a 	mov	r4,r2
   2350c:	180b883a 	mov	r5,r3
   23510:	95000005 	stb	r20,0(r18)
   23514:	1021883a 	mov	r16,r2
   23518:	1823883a 	mov	r17,r3
   2351c:	002bc4c0 	call	2bc4c <__ledf2>
   23520:	bdc00044 	addi	r23,r23,1
   23524:	800d883a 	mov	r6,r16
   23528:	880f883a 	mov	r7,r17
   2352c:	0009883a 	mov	r4,zero
   23530:	014ffc34 	movhi	r5,16368
   23534:	103fcf0e 	bge	r2,zero,23474 <__alt_data_end+0xfffe3474>
   23538:	d8c01317 	ldw	r3,76(sp)
   2353c:	d8c00515 	stw	r3,20(sp)
   23540:	d9400917 	ldw	r5,36(sp)
   23544:	e009883a 	mov	r4,fp
   23548:	00265dc0 	call	265dc <_Bfree>
   2354c:	d9000517 	ldw	r4,20(sp)
   23550:	d9802317 	ldw	r6,140(sp)
   23554:	d9c02517 	ldw	r7,148(sp)
   23558:	b8000005 	stb	zero,0(r23)
   2355c:	20800044 	addi	r2,r4,1
   23560:	30800015 	stw	r2,0(r6)
   23564:	3802aa26 	beq	r7,zero,24010 <_dtoa_r+0x1178>
   23568:	3dc00015 	stw	r23,0(r7)
   2356c:	d8800717 	ldw	r2,28(sp)
   23570:	003e7906 	br	22f58 <__alt_data_end+0xfffe2f58>
   23574:	00800434 	movhi	r2,16
   23578:	10bfffc4 	addi	r2,r2,-1
   2357c:	88a2703a 	and	r17,r17,r2
   23580:	883e851e 	bne	r17,zero,22f98 <__alt_data_end+0xfffe2f98>
   23584:	008000f4 	movhi	r2,3
   23588:	10bd3604 	addi	r2,r2,-2856
   2358c:	003e8406 	br	22fa0 <__alt_data_end+0xfffe2fa0>
   23590:	10c00204 	addi	r3,r2,8
   23594:	003e8706 	br	22fb4 <__alt_data_end+0xfffe2fb4>
   23598:	01400434 	movhi	r5,16
   2359c:	297fffc4 	addi	r5,r5,-1
   235a0:	994a703a 	and	r5,r19,r5
   235a4:	9009883a 	mov	r4,r18
   235a8:	843f0044 	addi	r16,r16,-1023
   235ac:	294ffc34 	orhi	r5,r5,16368
   235b0:	dd800217 	ldw	r22,8(sp)
   235b4:	d8001115 	stw	zero,68(sp)
   235b8:	003ea506 	br	23050 <__alt_data_end+0xfffe3050>
   235bc:	008000f4 	movhi	r2,3
   235c0:	10bd2d04 	addi	r2,r2,-2892
   235c4:	003e6406 	br	22f58 <__alt_data_end+0xfffe2f58>
   235c8:	e0001115 	stw	zero,68(fp)
   235cc:	000b883a 	mov	r5,zero
   235d0:	e009883a 	mov	r4,fp
   235d4:	00265340 	call	26534 <_Balloc>
   235d8:	01bfffc4 	movi	r6,-1
   235dc:	01c00044 	movi	r7,1
   235e0:	d8800715 	stw	r2,28(sp)
   235e4:	d9800c15 	stw	r6,48(sp)
   235e8:	e0801015 	stw	r2,64(fp)
   235ec:	d8000315 	stw	zero,12(sp)
   235f0:	d9c00b15 	stw	r7,44(sp)
   235f4:	d9800615 	stw	r6,24(sp)
   235f8:	d8002215 	stw	zero,136(sp)
   235fc:	d8800117 	ldw	r2,4(sp)
   23600:	10008916 	blt	r2,zero,23828 <_dtoa_r+0x990>
   23604:	d9000517 	ldw	r4,20(sp)
   23608:	00c00384 	movi	r3,14
   2360c:	19008616 	blt	r3,r4,23828 <_dtoa_r+0x990>
   23610:	200490fa 	slli	r2,r4,3
   23614:	00c000f4 	movhi	r3,3
   23618:	d9802217 	ldw	r6,136(sp)
   2361c:	18fd5504 	addi	r3,r3,-2732
   23620:	1885883a 	add	r2,r3,r2
   23624:	14000017 	ldw	r16,0(r2)
   23628:	14400117 	ldw	r17,4(r2)
   2362c:	30016316 	blt	r6,zero,23bbc <_dtoa_r+0xd24>
   23630:	800d883a 	mov	r6,r16
   23634:	880f883a 	mov	r7,r17
   23638:	9009883a 	mov	r4,r18
   2363c:	980b883a 	mov	r5,r19
   23640:	002b2000 	call	2b200 <__divdf3>
   23644:	180b883a 	mov	r5,r3
   23648:	1009883a 	mov	r4,r2
   2364c:	002cd540 	call	2cd54 <__fixdfsi>
   23650:	1009883a 	mov	r4,r2
   23654:	102b883a 	mov	r21,r2
   23658:	002cdd40 	call	2cdd4 <__floatsidf>
   2365c:	800d883a 	mov	r6,r16
   23660:	880f883a 	mov	r7,r17
   23664:	1009883a 	mov	r4,r2
   23668:	180b883a 	mov	r5,r3
   2366c:	002bd400 	call	2bd40 <__muldf3>
   23670:	100d883a 	mov	r6,r2
   23674:	180f883a 	mov	r7,r3
   23678:	9009883a 	mov	r4,r18
   2367c:	980b883a 	mov	r5,r19
   23680:	002c4580 	call	2c458 <__subdf3>
   23684:	d9c00717 	ldw	r7,28(sp)
   23688:	1009883a 	mov	r4,r2
   2368c:	a8800c04 	addi	r2,r21,48
   23690:	38800005 	stb	r2,0(r7)
   23694:	3dc00044 	addi	r23,r7,1
   23698:	d9c00617 	ldw	r7,24(sp)
   2369c:	01800044 	movi	r6,1
   236a0:	180b883a 	mov	r5,r3
   236a4:	2005883a 	mov	r2,r4
   236a8:	39803826 	beq	r7,r6,2378c <_dtoa_r+0x8f4>
   236ac:	000d883a 	mov	r6,zero
   236b0:	01d00934 	movhi	r7,16420
   236b4:	002bd400 	call	2bd40 <__muldf3>
   236b8:	000d883a 	mov	r6,zero
   236bc:	000f883a 	mov	r7,zero
   236c0:	1009883a 	mov	r4,r2
   236c4:	180b883a 	mov	r5,r3
   236c8:	1025883a 	mov	r18,r2
   236cc:	1827883a 	mov	r19,r3
   236d0:	002bae80 	call	2bae8 <__eqdf2>
   236d4:	103f9a26 	beq	r2,zero,23540 <__alt_data_end+0xfffe3540>
   236d8:	d9c00617 	ldw	r7,24(sp)
   236dc:	d8c00717 	ldw	r3,28(sp)
   236e0:	b829883a 	mov	r20,r23
   236e4:	38bfffc4 	addi	r2,r7,-1
   236e8:	18ad883a 	add	r22,r3,r2
   236ec:	00000a06 	br	23718 <_dtoa_r+0x880>
   236f0:	002bd400 	call	2bd40 <__muldf3>
   236f4:	000d883a 	mov	r6,zero
   236f8:	000f883a 	mov	r7,zero
   236fc:	1009883a 	mov	r4,r2
   23700:	180b883a 	mov	r5,r3
   23704:	1025883a 	mov	r18,r2
   23708:	1827883a 	mov	r19,r3
   2370c:	b829883a 	mov	r20,r23
   23710:	002bae80 	call	2bae8 <__eqdf2>
   23714:	103f8a26 	beq	r2,zero,23540 <__alt_data_end+0xfffe3540>
   23718:	800d883a 	mov	r6,r16
   2371c:	880f883a 	mov	r7,r17
   23720:	9009883a 	mov	r4,r18
   23724:	980b883a 	mov	r5,r19
   23728:	002b2000 	call	2b200 <__divdf3>
   2372c:	180b883a 	mov	r5,r3
   23730:	1009883a 	mov	r4,r2
   23734:	002cd540 	call	2cd54 <__fixdfsi>
   23738:	1009883a 	mov	r4,r2
   2373c:	102b883a 	mov	r21,r2
   23740:	002cdd40 	call	2cdd4 <__floatsidf>
   23744:	800d883a 	mov	r6,r16
   23748:	880f883a 	mov	r7,r17
   2374c:	1009883a 	mov	r4,r2
   23750:	180b883a 	mov	r5,r3
   23754:	002bd400 	call	2bd40 <__muldf3>
   23758:	100d883a 	mov	r6,r2
   2375c:	180f883a 	mov	r7,r3
   23760:	9009883a 	mov	r4,r18
   23764:	980b883a 	mov	r5,r19
   23768:	002c4580 	call	2c458 <__subdf3>
   2376c:	aa000c04 	addi	r8,r21,48
   23770:	a2000005 	stb	r8,0(r20)
   23774:	000d883a 	mov	r6,zero
   23778:	01d00934 	movhi	r7,16420
   2377c:	1009883a 	mov	r4,r2
   23780:	180b883a 	mov	r5,r3
   23784:	a5c00044 	addi	r23,r20,1
   23788:	b53fd91e 	bne	r22,r20,236f0 <__alt_data_end+0xfffe36f0>
   2378c:	100d883a 	mov	r6,r2
   23790:	180f883a 	mov	r7,r3
   23794:	1009883a 	mov	r4,r2
   23798:	180b883a 	mov	r5,r3
   2379c:	002a9540 	call	2a954 <__adddf3>
   237a0:	100d883a 	mov	r6,r2
   237a4:	180f883a 	mov	r7,r3
   237a8:	8009883a 	mov	r4,r16
   237ac:	880b883a 	mov	r5,r17
   237b0:	1027883a 	mov	r19,r2
   237b4:	1825883a 	mov	r18,r3
   237b8:	002bc4c0 	call	2bc4c <__ledf2>
   237bc:	10000816 	blt	r2,zero,237e0 <_dtoa_r+0x948>
   237c0:	980d883a 	mov	r6,r19
   237c4:	900f883a 	mov	r7,r18
   237c8:	8009883a 	mov	r4,r16
   237cc:	880b883a 	mov	r5,r17
   237d0:	002bae80 	call	2bae8 <__eqdf2>
   237d4:	103f5a1e 	bne	r2,zero,23540 <__alt_data_end+0xfffe3540>
   237d8:	ad40004c 	andi	r21,r21,1
   237dc:	a83f5826 	beq	r21,zero,23540 <__alt_data_end+0xfffe3540>
   237e0:	bd3fffc3 	ldbu	r20,-1(r23)
   237e4:	b8bfffc4 	addi	r2,r23,-1
   237e8:	1007883a 	mov	r3,r2
   237ec:	01400e44 	movi	r5,57
   237f0:	d9800717 	ldw	r6,28(sp)
   237f4:	00000506 	br	2380c <_dtoa_r+0x974>
   237f8:	18ffffc4 	addi	r3,r3,-1
   237fc:	11824726 	beq	r2,r6,2411c <_dtoa_r+0x1284>
   23800:	1d000003 	ldbu	r20,0(r3)
   23804:	102f883a 	mov	r23,r2
   23808:	10bfffc4 	addi	r2,r2,-1
   2380c:	a1003fcc 	andi	r4,r20,255
   23810:	2100201c 	xori	r4,r4,128
   23814:	213fe004 	addi	r4,r4,-128
   23818:	217ff726 	beq	r4,r5,237f8 <__alt_data_end+0xfffe37f8>
   2381c:	a2000044 	addi	r8,r20,1
   23820:	12000005 	stb	r8,0(r2)
   23824:	003f4606 	br	23540 <__alt_data_end+0xfffe3540>
   23828:	d9000b17 	ldw	r4,44(sp)
   2382c:	2000c826 	beq	r4,zero,23b50 <_dtoa_r+0xcb8>
   23830:	d9800317 	ldw	r6,12(sp)
   23834:	00c00044 	movi	r3,1
   23838:	1980f90e 	bge	r3,r6,23c20 <_dtoa_r+0xd88>
   2383c:	d8800617 	ldw	r2,24(sp)
   23840:	d8c00a17 	ldw	r3,40(sp)
   23844:	157fffc4 	addi	r21,r2,-1
   23848:	1d41f316 	blt	r3,r21,24018 <_dtoa_r+0x1180>
   2384c:	1d6bc83a 	sub	r21,r3,r21
   23850:	d9c00617 	ldw	r7,24(sp)
   23854:	3802aa16 	blt	r7,zero,24300 <_dtoa_r+0x1468>
   23858:	dd000817 	ldw	r20,32(sp)
   2385c:	d8800617 	ldw	r2,24(sp)
   23860:	d8c00817 	ldw	r3,32(sp)
   23864:	01400044 	movi	r5,1
   23868:	e009883a 	mov	r4,fp
   2386c:	1887883a 	add	r3,r3,r2
   23870:	d8c00815 	stw	r3,32(sp)
   23874:	b0ad883a 	add	r22,r22,r2
   23878:	00269400 	call	26940 <__i2b>
   2387c:	1023883a 	mov	r17,r2
   23880:	a0000826 	beq	r20,zero,238a4 <_dtoa_r+0xa0c>
   23884:	0580070e 	bge	zero,r22,238a4 <_dtoa_r+0xa0c>
   23888:	a005883a 	mov	r2,r20
   2388c:	b500b916 	blt	r22,r20,23b74 <_dtoa_r+0xcdc>
   23890:	d9000817 	ldw	r4,32(sp)
   23894:	a0a9c83a 	sub	r20,r20,r2
   23898:	b0adc83a 	sub	r22,r22,r2
   2389c:	2089c83a 	sub	r4,r4,r2
   238a0:	d9000815 	stw	r4,32(sp)
   238a4:	d9800a17 	ldw	r6,40(sp)
   238a8:	0181810e 	bge	zero,r6,23eb0 <_dtoa_r+0x1018>
   238ac:	d9c00b17 	ldw	r7,44(sp)
   238b0:	3800b326 	beq	r7,zero,23b80 <_dtoa_r+0xce8>
   238b4:	a800b226 	beq	r21,zero,23b80 <_dtoa_r+0xce8>
   238b8:	880b883a 	mov	r5,r17
   238bc:	a80d883a 	mov	r6,r21
   238c0:	e009883a 	mov	r4,fp
   238c4:	0026b740 	call	26b74 <__pow5mult>
   238c8:	d9800917 	ldw	r6,36(sp)
   238cc:	100b883a 	mov	r5,r2
   238d0:	e009883a 	mov	r4,fp
   238d4:	1023883a 	mov	r17,r2
   238d8:	002697c0 	call	2697c <__multiply>
   238dc:	1021883a 	mov	r16,r2
   238e0:	d8800a17 	ldw	r2,40(sp)
   238e4:	d9400917 	ldw	r5,36(sp)
   238e8:	e009883a 	mov	r4,fp
   238ec:	1545c83a 	sub	r2,r2,r21
   238f0:	d8800a15 	stw	r2,40(sp)
   238f4:	00265dc0 	call	265dc <_Bfree>
   238f8:	d8c00a17 	ldw	r3,40(sp)
   238fc:	18009f1e 	bne	r3,zero,23b7c <_dtoa_r+0xce4>
   23900:	05c00044 	movi	r23,1
   23904:	e009883a 	mov	r4,fp
   23908:	b80b883a 	mov	r5,r23
   2390c:	00269400 	call	26940 <__i2b>
   23910:	d9000d17 	ldw	r4,52(sp)
   23914:	102b883a 	mov	r21,r2
   23918:	2000ce26 	beq	r4,zero,23c54 <_dtoa_r+0xdbc>
   2391c:	200d883a 	mov	r6,r4
   23920:	100b883a 	mov	r5,r2
   23924:	e009883a 	mov	r4,fp
   23928:	0026b740 	call	26b74 <__pow5mult>
   2392c:	d9800317 	ldw	r6,12(sp)
   23930:	102b883a 	mov	r21,r2
   23934:	b981810e 	bge	r23,r6,23f3c <_dtoa_r+0x10a4>
   23938:	0027883a 	mov	r19,zero
   2393c:	a8800417 	ldw	r2,16(r21)
   23940:	05c00804 	movi	r23,32
   23944:	10800104 	addi	r2,r2,4
   23948:	1085883a 	add	r2,r2,r2
   2394c:	1085883a 	add	r2,r2,r2
   23950:	a885883a 	add	r2,r21,r2
   23954:	11000017 	ldw	r4,0(r2)
   23958:	00268280 	call	26828 <__hi0bits>
   2395c:	b885c83a 	sub	r2,r23,r2
   23960:	1585883a 	add	r2,r2,r22
   23964:	108007cc 	andi	r2,r2,31
   23968:	1000b326 	beq	r2,zero,23c38 <_dtoa_r+0xda0>
   2396c:	00c00804 	movi	r3,32
   23970:	1887c83a 	sub	r3,r3,r2
   23974:	01000104 	movi	r4,4
   23978:	20c2cd0e 	bge	r4,r3,244b0 <_dtoa_r+0x1618>
   2397c:	00c00704 	movi	r3,28
   23980:	1885c83a 	sub	r2,r3,r2
   23984:	d8c00817 	ldw	r3,32(sp)
   23988:	a0a9883a 	add	r20,r20,r2
   2398c:	b0ad883a 	add	r22,r22,r2
   23990:	1887883a 	add	r3,r3,r2
   23994:	d8c00815 	stw	r3,32(sp)
   23998:	d9800817 	ldw	r6,32(sp)
   2399c:	0180040e 	bge	zero,r6,239b0 <_dtoa_r+0xb18>
   239a0:	800b883a 	mov	r5,r16
   239a4:	e009883a 	mov	r4,fp
   239a8:	0026cb40 	call	26cb4 <__lshift>
   239ac:	1021883a 	mov	r16,r2
   239b0:	0580050e 	bge	zero,r22,239c8 <_dtoa_r+0xb30>
   239b4:	a80b883a 	mov	r5,r21
   239b8:	b00d883a 	mov	r6,r22
   239bc:	e009883a 	mov	r4,fp
   239c0:	0026cb40 	call	26cb4 <__lshift>
   239c4:	102b883a 	mov	r21,r2
   239c8:	d9c00e17 	ldw	r7,56(sp)
   239cc:	3801211e 	bne	r7,zero,23e54 <_dtoa_r+0xfbc>
   239d0:	d9800617 	ldw	r6,24(sp)
   239d4:	0181380e 	bge	zero,r6,23eb8 <_dtoa_r+0x1020>
   239d8:	d8c00b17 	ldw	r3,44(sp)
   239dc:	1800ab1e 	bne	r3,zero,23c8c <_dtoa_r+0xdf4>
   239e0:	dc800717 	ldw	r18,28(sp)
   239e4:	dcc00617 	ldw	r19,24(sp)
   239e8:	9029883a 	mov	r20,r18
   239ec:	00000206 	br	239f8 <_dtoa_r+0xb60>
   239f0:	00266040 	call	26604 <__multadd>
   239f4:	1021883a 	mov	r16,r2
   239f8:	a80b883a 	mov	r5,r21
   239fc:	8009883a 	mov	r4,r16
   23a00:	0022c980 	call	22c98 <quorem>
   23a04:	10800c04 	addi	r2,r2,48
   23a08:	90800005 	stb	r2,0(r18)
   23a0c:	94800044 	addi	r18,r18,1
   23a10:	9507c83a 	sub	r3,r18,r20
   23a14:	000f883a 	mov	r7,zero
   23a18:	01800284 	movi	r6,10
   23a1c:	800b883a 	mov	r5,r16
   23a20:	e009883a 	mov	r4,fp
   23a24:	1cfff216 	blt	r3,r19,239f0 <__alt_data_end+0xfffe39f0>
   23a28:	1011883a 	mov	r8,r2
   23a2c:	d8800617 	ldw	r2,24(sp)
   23a30:	0082370e 	bge	zero,r2,24310 <_dtoa_r+0x1478>
   23a34:	d9000717 	ldw	r4,28(sp)
   23a38:	0025883a 	mov	r18,zero
   23a3c:	20af883a 	add	r23,r4,r2
   23a40:	01800044 	movi	r6,1
   23a44:	800b883a 	mov	r5,r16
   23a48:	e009883a 	mov	r4,fp
   23a4c:	da001715 	stw	r8,92(sp)
   23a50:	0026cb40 	call	26cb4 <__lshift>
   23a54:	a80b883a 	mov	r5,r21
   23a58:	1009883a 	mov	r4,r2
   23a5c:	d8800915 	stw	r2,36(sp)
   23a60:	0026dfc0 	call	26dfc <__mcmp>
   23a64:	da001717 	ldw	r8,92(sp)
   23a68:	0081800e 	bge	zero,r2,2406c <_dtoa_r+0x11d4>
   23a6c:	b93fffc3 	ldbu	r4,-1(r23)
   23a70:	b8bfffc4 	addi	r2,r23,-1
   23a74:	1007883a 	mov	r3,r2
   23a78:	01800e44 	movi	r6,57
   23a7c:	d9c00717 	ldw	r7,28(sp)
   23a80:	00000506 	br	23a98 <_dtoa_r+0xc00>
   23a84:	18ffffc4 	addi	r3,r3,-1
   23a88:	11c12326 	beq	r2,r7,23f18 <_dtoa_r+0x1080>
   23a8c:	19000003 	ldbu	r4,0(r3)
   23a90:	102f883a 	mov	r23,r2
   23a94:	10bfffc4 	addi	r2,r2,-1
   23a98:	21403fcc 	andi	r5,r4,255
   23a9c:	2940201c 	xori	r5,r5,128
   23aa0:	297fe004 	addi	r5,r5,-128
   23aa4:	29bff726 	beq	r5,r6,23a84 <__alt_data_end+0xfffe3a84>
   23aa8:	21000044 	addi	r4,r4,1
   23aac:	11000005 	stb	r4,0(r2)
   23ab0:	a80b883a 	mov	r5,r21
   23ab4:	e009883a 	mov	r4,fp
   23ab8:	00265dc0 	call	265dc <_Bfree>
   23abc:	883ea026 	beq	r17,zero,23540 <__alt_data_end+0xfffe3540>
   23ac0:	90000426 	beq	r18,zero,23ad4 <_dtoa_r+0xc3c>
   23ac4:	94400326 	beq	r18,r17,23ad4 <_dtoa_r+0xc3c>
   23ac8:	900b883a 	mov	r5,r18
   23acc:	e009883a 	mov	r4,fp
   23ad0:	00265dc0 	call	265dc <_Bfree>
   23ad4:	880b883a 	mov	r5,r17
   23ad8:	e009883a 	mov	r4,fp
   23adc:	00265dc0 	call	265dc <_Bfree>
   23ae0:	003e9706 	br	23540 <__alt_data_end+0xfffe3540>
   23ae4:	01800044 	movi	r6,1
   23ae8:	d9800e15 	stw	r6,56(sp)
   23aec:	003d9606 	br	23148 <__alt_data_end+0xfffe3148>
   23af0:	d8800817 	ldw	r2,32(sp)
   23af4:	d8c00517 	ldw	r3,20(sp)
   23af8:	d8000d15 	stw	zero,52(sp)
   23afc:	10c5c83a 	sub	r2,r2,r3
   23b00:	00c9c83a 	sub	r4,zero,r3
   23b04:	d8800815 	stw	r2,32(sp)
   23b08:	d9000a15 	stw	r4,40(sp)
   23b0c:	003d9706 	br	2316c <__alt_data_end+0xfffe316c>
   23b10:	05adc83a 	sub	r22,zero,r22
   23b14:	dd800815 	stw	r22,32(sp)
   23b18:	002d883a 	mov	r22,zero
   23b1c:	003d8e06 	br	23158 <__alt_data_end+0xfffe3158>
   23b20:	d9000517 	ldw	r4,20(sp)
   23b24:	002cdd40 	call	2cdd4 <__floatsidf>
   23b28:	100d883a 	mov	r6,r2
   23b2c:	180f883a 	mov	r7,r3
   23b30:	a009883a 	mov	r4,r20
   23b34:	880b883a 	mov	r5,r17
   23b38:	002bae80 	call	2bae8 <__eqdf2>
   23b3c:	103d7126 	beq	r2,zero,23104 <__alt_data_end+0xfffe3104>
   23b40:	d9c00517 	ldw	r7,20(sp)
   23b44:	39ffffc4 	addi	r7,r7,-1
   23b48:	d9c00515 	stw	r7,20(sp)
   23b4c:	003d6d06 	br	23104 <__alt_data_end+0xfffe3104>
   23b50:	dd400a17 	ldw	r21,40(sp)
   23b54:	dd000817 	ldw	r20,32(sp)
   23b58:	0023883a 	mov	r17,zero
   23b5c:	003f4806 	br	23880 <__alt_data_end+0xfffe3880>
   23b60:	10e3c83a 	sub	r17,r2,r3
   23b64:	9448983a 	sll	r4,r18,r17
   23b68:	003d3206 	br	23034 <__alt_data_end+0xfffe3034>
   23b6c:	d8000e15 	stw	zero,56(sp)
   23b70:	003d7506 	br	23148 <__alt_data_end+0xfffe3148>
   23b74:	b005883a 	mov	r2,r22
   23b78:	003f4506 	br	23890 <__alt_data_end+0xfffe3890>
   23b7c:	dc000915 	stw	r16,36(sp)
   23b80:	d9800a17 	ldw	r6,40(sp)
   23b84:	d9400917 	ldw	r5,36(sp)
   23b88:	e009883a 	mov	r4,fp
   23b8c:	0026b740 	call	26b74 <__pow5mult>
   23b90:	1021883a 	mov	r16,r2
   23b94:	003f5a06 	br	23900 <__alt_data_end+0xfffe3900>
   23b98:	01c00044 	movi	r7,1
   23b9c:	d9c00b15 	stw	r7,44(sp)
   23ba0:	d8802217 	ldw	r2,136(sp)
   23ba4:	0081280e 	bge	zero,r2,24048 <_dtoa_r+0x11b0>
   23ba8:	100d883a 	mov	r6,r2
   23bac:	1021883a 	mov	r16,r2
   23bb0:	d8800c15 	stw	r2,48(sp)
   23bb4:	d8800615 	stw	r2,24(sp)
   23bb8:	003d8806 	br	231dc <__alt_data_end+0xfffe31dc>
   23bbc:	d8800617 	ldw	r2,24(sp)
   23bc0:	00be9b16 	blt	zero,r2,23630 <__alt_data_end+0xfffe3630>
   23bc4:	10010f1e 	bne	r2,zero,24004 <_dtoa_r+0x116c>
   23bc8:	880b883a 	mov	r5,r17
   23bcc:	000d883a 	mov	r6,zero
   23bd0:	01d00534 	movhi	r7,16404
   23bd4:	8009883a 	mov	r4,r16
   23bd8:	002bd400 	call	2bd40 <__muldf3>
   23bdc:	900d883a 	mov	r6,r18
   23be0:	980f883a 	mov	r7,r19
   23be4:	1009883a 	mov	r4,r2
   23be8:	180b883a 	mov	r5,r3
   23bec:	002bb700 	call	2bb70 <__gedf2>
   23bf0:	002b883a 	mov	r21,zero
   23bf4:	0023883a 	mov	r17,zero
   23bf8:	1000bf16 	blt	r2,zero,23ef8 <_dtoa_r+0x1060>
   23bfc:	d9802217 	ldw	r6,136(sp)
   23c00:	ddc00717 	ldw	r23,28(sp)
   23c04:	018c303a 	nor	r6,zero,r6
   23c08:	d9800515 	stw	r6,20(sp)
   23c0c:	a80b883a 	mov	r5,r21
   23c10:	e009883a 	mov	r4,fp
   23c14:	00265dc0 	call	265dc <_Bfree>
   23c18:	883e4926 	beq	r17,zero,23540 <__alt_data_end+0xfffe3540>
   23c1c:	003fad06 	br	23ad4 <__alt_data_end+0xfffe3ad4>
   23c20:	d9c01117 	ldw	r7,68(sp)
   23c24:	3801bc26 	beq	r7,zero,24318 <_dtoa_r+0x1480>
   23c28:	10810cc4 	addi	r2,r2,1075
   23c2c:	dd400a17 	ldw	r21,40(sp)
   23c30:	dd000817 	ldw	r20,32(sp)
   23c34:	003f0a06 	br	23860 <__alt_data_end+0xfffe3860>
   23c38:	00800704 	movi	r2,28
   23c3c:	d9000817 	ldw	r4,32(sp)
   23c40:	a0a9883a 	add	r20,r20,r2
   23c44:	b0ad883a 	add	r22,r22,r2
   23c48:	2089883a 	add	r4,r4,r2
   23c4c:	d9000815 	stw	r4,32(sp)
   23c50:	003f5106 	br	23998 <__alt_data_end+0xfffe3998>
   23c54:	d8c00317 	ldw	r3,12(sp)
   23c58:	b8c1fc0e 	bge	r23,r3,2444c <_dtoa_r+0x15b4>
   23c5c:	0027883a 	mov	r19,zero
   23c60:	b805883a 	mov	r2,r23
   23c64:	003f3e06 	br	23960 <__alt_data_end+0xfffe3960>
   23c68:	880b883a 	mov	r5,r17
   23c6c:	e009883a 	mov	r4,fp
   23c70:	000f883a 	mov	r7,zero
   23c74:	01800284 	movi	r6,10
   23c78:	00266040 	call	26604 <__multadd>
   23c7c:	d9000c17 	ldw	r4,48(sp)
   23c80:	1023883a 	mov	r17,r2
   23c84:	0102040e 	bge	zero,r4,24498 <_dtoa_r+0x1600>
   23c88:	d9000615 	stw	r4,24(sp)
   23c8c:	0500050e 	bge	zero,r20,23ca4 <_dtoa_r+0xe0c>
   23c90:	880b883a 	mov	r5,r17
   23c94:	a00d883a 	mov	r6,r20
   23c98:	e009883a 	mov	r4,fp
   23c9c:	0026cb40 	call	26cb4 <__lshift>
   23ca0:	1023883a 	mov	r17,r2
   23ca4:	9801241e 	bne	r19,zero,24138 <_dtoa_r+0x12a0>
   23ca8:	8829883a 	mov	r20,r17
   23cac:	d9000617 	ldw	r4,24(sp)
   23cb0:	dcc00717 	ldw	r19,28(sp)
   23cb4:	9480004c 	andi	r18,r18,1
   23cb8:	20bfffc4 	addi	r2,r4,-1
   23cbc:	9885883a 	add	r2,r19,r2
   23cc0:	d8800415 	stw	r2,16(sp)
   23cc4:	dc800615 	stw	r18,24(sp)
   23cc8:	a80b883a 	mov	r5,r21
   23ccc:	8009883a 	mov	r4,r16
   23cd0:	0022c980 	call	22c98 <quorem>
   23cd4:	880b883a 	mov	r5,r17
   23cd8:	8009883a 	mov	r4,r16
   23cdc:	102f883a 	mov	r23,r2
   23ce0:	0026dfc0 	call	26dfc <__mcmp>
   23ce4:	a80b883a 	mov	r5,r21
   23ce8:	a00d883a 	mov	r6,r20
   23cec:	e009883a 	mov	r4,fp
   23cf0:	102d883a 	mov	r22,r2
   23cf4:	0026e5c0 	call	26e5c <__mdiff>
   23cf8:	1007883a 	mov	r3,r2
   23cfc:	10800317 	ldw	r2,12(r2)
   23d00:	bc800c04 	addi	r18,r23,48
   23d04:	180b883a 	mov	r5,r3
   23d08:	10004e1e 	bne	r2,zero,23e44 <_dtoa_r+0xfac>
   23d0c:	8009883a 	mov	r4,r16
   23d10:	d8c01615 	stw	r3,88(sp)
   23d14:	0026dfc0 	call	26dfc <__mcmp>
   23d18:	d8c01617 	ldw	r3,88(sp)
   23d1c:	e009883a 	mov	r4,fp
   23d20:	d8801615 	stw	r2,88(sp)
   23d24:	180b883a 	mov	r5,r3
   23d28:	00265dc0 	call	265dc <_Bfree>
   23d2c:	d8801617 	ldw	r2,88(sp)
   23d30:	1000041e 	bne	r2,zero,23d44 <_dtoa_r+0xeac>
   23d34:	d9800317 	ldw	r6,12(sp)
   23d38:	3000021e 	bne	r6,zero,23d44 <_dtoa_r+0xeac>
   23d3c:	d8c00617 	ldw	r3,24(sp)
   23d40:	18003726 	beq	r3,zero,23e20 <_dtoa_r+0xf88>
   23d44:	b0002016 	blt	r22,zero,23dc8 <_dtoa_r+0xf30>
   23d48:	b000041e 	bne	r22,zero,23d5c <_dtoa_r+0xec4>
   23d4c:	d9000317 	ldw	r4,12(sp)
   23d50:	2000021e 	bne	r4,zero,23d5c <_dtoa_r+0xec4>
   23d54:	d8c00617 	ldw	r3,24(sp)
   23d58:	18001b26 	beq	r3,zero,23dc8 <_dtoa_r+0xf30>
   23d5c:	00810716 	blt	zero,r2,2417c <_dtoa_r+0x12e4>
   23d60:	d8c00417 	ldw	r3,16(sp)
   23d64:	9d800044 	addi	r22,r19,1
   23d68:	9c800005 	stb	r18,0(r19)
   23d6c:	b02f883a 	mov	r23,r22
   23d70:	98c10626 	beq	r19,r3,2418c <_dtoa_r+0x12f4>
   23d74:	800b883a 	mov	r5,r16
   23d78:	000f883a 	mov	r7,zero
   23d7c:	01800284 	movi	r6,10
   23d80:	e009883a 	mov	r4,fp
   23d84:	00266040 	call	26604 <__multadd>
   23d88:	1021883a 	mov	r16,r2
   23d8c:	000f883a 	mov	r7,zero
   23d90:	01800284 	movi	r6,10
   23d94:	880b883a 	mov	r5,r17
   23d98:	e009883a 	mov	r4,fp
   23d9c:	8d002526 	beq	r17,r20,23e34 <_dtoa_r+0xf9c>
   23da0:	00266040 	call	26604 <__multadd>
   23da4:	a00b883a 	mov	r5,r20
   23da8:	000f883a 	mov	r7,zero
   23dac:	01800284 	movi	r6,10
   23db0:	e009883a 	mov	r4,fp
   23db4:	1023883a 	mov	r17,r2
   23db8:	00266040 	call	26604 <__multadd>
   23dbc:	1029883a 	mov	r20,r2
   23dc0:	b027883a 	mov	r19,r22
   23dc4:	003fc006 	br	23cc8 <__alt_data_end+0xfffe3cc8>
   23dc8:	9011883a 	mov	r8,r18
   23dcc:	00800e0e 	bge	zero,r2,23e08 <_dtoa_r+0xf70>
   23dd0:	800b883a 	mov	r5,r16
   23dd4:	01800044 	movi	r6,1
   23dd8:	e009883a 	mov	r4,fp
   23ddc:	da001715 	stw	r8,92(sp)
   23de0:	0026cb40 	call	26cb4 <__lshift>
   23de4:	a80b883a 	mov	r5,r21
   23de8:	1009883a 	mov	r4,r2
   23dec:	1021883a 	mov	r16,r2
   23df0:	0026dfc0 	call	26dfc <__mcmp>
   23df4:	da001717 	ldw	r8,92(sp)
   23df8:	0081960e 	bge	zero,r2,24454 <_dtoa_r+0x15bc>
   23dfc:	00800e44 	movi	r2,57
   23e00:	40817026 	beq	r8,r2,243c4 <_dtoa_r+0x152c>
   23e04:	ba000c44 	addi	r8,r23,49
   23e08:	8825883a 	mov	r18,r17
   23e0c:	9dc00044 	addi	r23,r19,1
   23e10:	9a000005 	stb	r8,0(r19)
   23e14:	a023883a 	mov	r17,r20
   23e18:	dc000915 	stw	r16,36(sp)
   23e1c:	003f2406 	br	23ab0 <__alt_data_end+0xfffe3ab0>
   23e20:	00800e44 	movi	r2,57
   23e24:	9011883a 	mov	r8,r18
   23e28:	90816626 	beq	r18,r2,243c4 <_dtoa_r+0x152c>
   23e2c:	05bff516 	blt	zero,r22,23e04 <__alt_data_end+0xfffe3e04>
   23e30:	003ff506 	br	23e08 <__alt_data_end+0xfffe3e08>
   23e34:	00266040 	call	26604 <__multadd>
   23e38:	1023883a 	mov	r17,r2
   23e3c:	1029883a 	mov	r20,r2
   23e40:	003fdf06 	br	23dc0 <__alt_data_end+0xfffe3dc0>
   23e44:	e009883a 	mov	r4,fp
   23e48:	00265dc0 	call	265dc <_Bfree>
   23e4c:	00800044 	movi	r2,1
   23e50:	003fbc06 	br	23d44 <__alt_data_end+0xfffe3d44>
   23e54:	a80b883a 	mov	r5,r21
   23e58:	8009883a 	mov	r4,r16
   23e5c:	0026dfc0 	call	26dfc <__mcmp>
   23e60:	103edb0e 	bge	r2,zero,239d0 <__alt_data_end+0xfffe39d0>
   23e64:	800b883a 	mov	r5,r16
   23e68:	000f883a 	mov	r7,zero
   23e6c:	01800284 	movi	r6,10
   23e70:	e009883a 	mov	r4,fp
   23e74:	00266040 	call	26604 <__multadd>
   23e78:	1021883a 	mov	r16,r2
   23e7c:	d8800517 	ldw	r2,20(sp)
   23e80:	d8c00b17 	ldw	r3,44(sp)
   23e84:	10bfffc4 	addi	r2,r2,-1
   23e88:	d8800515 	stw	r2,20(sp)
   23e8c:	183f761e 	bne	r3,zero,23c68 <__alt_data_end+0xfffe3c68>
   23e90:	d9000c17 	ldw	r4,48(sp)
   23e94:	0101730e 	bge	zero,r4,24464 <_dtoa_r+0x15cc>
   23e98:	d9000615 	stw	r4,24(sp)
   23e9c:	003ed006 	br	239e0 <__alt_data_end+0xfffe39e0>
   23ea0:	00800084 	movi	r2,2
   23ea4:	3081861e 	bne	r6,r2,244c0 <_dtoa_r+0x1628>
   23ea8:	d8000b15 	stw	zero,44(sp)
   23eac:	003f3c06 	br	23ba0 <__alt_data_end+0xfffe3ba0>
   23eb0:	dc000917 	ldw	r16,36(sp)
   23eb4:	003e9206 	br	23900 <__alt_data_end+0xfffe3900>
   23eb8:	d9c00317 	ldw	r7,12(sp)
   23ebc:	00800084 	movi	r2,2
   23ec0:	11fec50e 	bge	r2,r7,239d8 <__alt_data_end+0xfffe39d8>
   23ec4:	d9000617 	ldw	r4,24(sp)
   23ec8:	20013c1e 	bne	r4,zero,243bc <_dtoa_r+0x1524>
   23ecc:	a80b883a 	mov	r5,r21
   23ed0:	000f883a 	mov	r7,zero
   23ed4:	01800144 	movi	r6,5
   23ed8:	e009883a 	mov	r4,fp
   23edc:	00266040 	call	26604 <__multadd>
   23ee0:	100b883a 	mov	r5,r2
   23ee4:	8009883a 	mov	r4,r16
   23ee8:	102b883a 	mov	r21,r2
   23eec:	0026dfc0 	call	26dfc <__mcmp>
   23ef0:	dc000915 	stw	r16,36(sp)
   23ef4:	00bf410e 	bge	zero,r2,23bfc <__alt_data_end+0xfffe3bfc>
   23ef8:	d9c00717 	ldw	r7,28(sp)
   23efc:	00800c44 	movi	r2,49
   23f00:	38800005 	stb	r2,0(r7)
   23f04:	d8800517 	ldw	r2,20(sp)
   23f08:	3dc00044 	addi	r23,r7,1
   23f0c:	10800044 	addi	r2,r2,1
   23f10:	d8800515 	stw	r2,20(sp)
   23f14:	003f3d06 	br	23c0c <__alt_data_end+0xfffe3c0c>
   23f18:	d9800517 	ldw	r6,20(sp)
   23f1c:	d9c00717 	ldw	r7,28(sp)
   23f20:	00800c44 	movi	r2,49
   23f24:	31800044 	addi	r6,r6,1
   23f28:	d9800515 	stw	r6,20(sp)
   23f2c:	38800005 	stb	r2,0(r7)
   23f30:	003edf06 	br	23ab0 <__alt_data_end+0xfffe3ab0>
   23f34:	d8000b15 	stw	zero,44(sp)
   23f38:	003c9f06 	br	231b8 <__alt_data_end+0xfffe31b8>
   23f3c:	903e7e1e 	bne	r18,zero,23938 <__alt_data_end+0xfffe3938>
   23f40:	00800434 	movhi	r2,16
   23f44:	10bfffc4 	addi	r2,r2,-1
   23f48:	9884703a 	and	r2,r19,r2
   23f4c:	1000ea1e 	bne	r2,zero,242f8 <_dtoa_r+0x1460>
   23f50:	9cdffc2c 	andhi	r19,r19,32752
   23f54:	9800e826 	beq	r19,zero,242f8 <_dtoa_r+0x1460>
   23f58:	d9c00817 	ldw	r7,32(sp)
   23f5c:	b5800044 	addi	r22,r22,1
   23f60:	04c00044 	movi	r19,1
   23f64:	39c00044 	addi	r7,r7,1
   23f68:	d9c00815 	stw	r7,32(sp)
   23f6c:	d8800d17 	ldw	r2,52(sp)
   23f70:	103e721e 	bne	r2,zero,2393c <__alt_data_end+0xfffe393c>
   23f74:	00800044 	movi	r2,1
   23f78:	003e7906 	br	23960 <__alt_data_end+0xfffe3960>
   23f7c:	8009883a 	mov	r4,r16
   23f80:	002cdd40 	call	2cdd4 <__floatsidf>
   23f84:	d9800f17 	ldw	r6,60(sp)
   23f88:	d9c01017 	ldw	r7,64(sp)
   23f8c:	1009883a 	mov	r4,r2
   23f90:	180b883a 	mov	r5,r3
   23f94:	002bd400 	call	2bd40 <__muldf3>
   23f98:	000d883a 	mov	r6,zero
   23f9c:	01d00734 	movhi	r7,16412
   23fa0:	1009883a 	mov	r4,r2
   23fa4:	180b883a 	mov	r5,r3
   23fa8:	002a9540 	call	2a954 <__adddf3>
   23fac:	047f3034 	movhi	r17,64704
   23fb0:	1021883a 	mov	r16,r2
   23fb4:	1c63883a 	add	r17,r3,r17
   23fb8:	d9000f17 	ldw	r4,60(sp)
   23fbc:	d9401017 	ldw	r5,64(sp)
   23fc0:	000d883a 	mov	r6,zero
   23fc4:	01d00534 	movhi	r7,16404
   23fc8:	002c4580 	call	2c458 <__subdf3>
   23fcc:	800d883a 	mov	r6,r16
   23fd0:	880f883a 	mov	r7,r17
   23fd4:	1009883a 	mov	r4,r2
   23fd8:	180b883a 	mov	r5,r3
   23fdc:	102b883a 	mov	r21,r2
   23fe0:	1829883a 	mov	r20,r3
   23fe4:	002bb700 	call	2bb70 <__gedf2>
   23fe8:	00806c16 	blt	zero,r2,2419c <_dtoa_r+0x1304>
   23fec:	89e0003c 	xorhi	r7,r17,32768
   23ff0:	800d883a 	mov	r6,r16
   23ff4:	a809883a 	mov	r4,r21
   23ff8:	a00b883a 	mov	r5,r20
   23ffc:	002bc4c0 	call	2bc4c <__ledf2>
   24000:	103d7e0e 	bge	r2,zero,235fc <__alt_data_end+0xfffe35fc>
   24004:	002b883a 	mov	r21,zero
   24008:	0023883a 	mov	r17,zero
   2400c:	003efb06 	br	23bfc <__alt_data_end+0xfffe3bfc>
   24010:	d8800717 	ldw	r2,28(sp)
   24014:	003bd006 	br	22f58 <__alt_data_end+0xfffe2f58>
   24018:	d9000a17 	ldw	r4,40(sp)
   2401c:	d9800d17 	ldw	r6,52(sp)
   24020:	dd400a15 	stw	r21,40(sp)
   24024:	a905c83a 	sub	r2,r21,r4
   24028:	308d883a 	add	r6,r6,r2
   2402c:	d9800d15 	stw	r6,52(sp)
   24030:	002b883a 	mov	r21,zero
   24034:	003e0606 	br	23850 <__alt_data_end+0xfffe3850>
   24038:	9023883a 	mov	r17,r18
   2403c:	9829883a 	mov	r20,r19
   24040:	04000084 	movi	r16,2
   24044:	003c9206 	br	23290 <__alt_data_end+0xfffe3290>
   24048:	04000044 	movi	r16,1
   2404c:	dc000c15 	stw	r16,48(sp)
   24050:	dc000615 	stw	r16,24(sp)
   24054:	dc002215 	stw	r16,136(sp)
   24058:	e0001115 	stw	zero,68(fp)
   2405c:	000b883a 	mov	r5,zero
   24060:	003c6906 	br	23208 <__alt_data_end+0xfffe3208>
   24064:	3021883a 	mov	r16,r6
   24068:	003ffb06 	br	24058 <__alt_data_end+0xfffe4058>
   2406c:	1000021e 	bne	r2,zero,24078 <_dtoa_r+0x11e0>
   24070:	4200004c 	andi	r8,r8,1
   24074:	403e7d1e 	bne	r8,zero,23a6c <__alt_data_end+0xfffe3a6c>
   24078:	01000c04 	movi	r4,48
   2407c:	00000106 	br	24084 <_dtoa_r+0x11ec>
   24080:	102f883a 	mov	r23,r2
   24084:	b8bfffc4 	addi	r2,r23,-1
   24088:	10c00007 	ldb	r3,0(r2)
   2408c:	193ffc26 	beq	r3,r4,24080 <__alt_data_end+0xfffe4080>
   24090:	003e8706 	br	23ab0 <__alt_data_end+0xfffe3ab0>
   24094:	d8800517 	ldw	r2,20(sp)
   24098:	00a3c83a 	sub	r17,zero,r2
   2409c:	8800a426 	beq	r17,zero,24330 <_dtoa_r+0x1498>
   240a0:	888003cc 	andi	r2,r17,15
   240a4:	100490fa 	slli	r2,r2,3
   240a8:	00c000f4 	movhi	r3,3
   240ac:	18fd5504 	addi	r3,r3,-2732
   240b0:	1885883a 	add	r2,r3,r2
   240b4:	11800017 	ldw	r6,0(r2)
   240b8:	11c00117 	ldw	r7,4(r2)
   240bc:	9009883a 	mov	r4,r18
   240c0:	980b883a 	mov	r5,r19
   240c4:	8823d13a 	srai	r17,r17,4
   240c8:	002bd400 	call	2bd40 <__muldf3>
   240cc:	d8800f15 	stw	r2,60(sp)
   240d0:	d8c01015 	stw	r3,64(sp)
   240d4:	8800e826 	beq	r17,zero,24478 <_dtoa_r+0x15e0>
   240d8:	050000f4 	movhi	r20,3
   240dc:	a53d4b04 	addi	r20,r20,-2772
   240e0:	04000084 	movi	r16,2
   240e4:	8980004c 	andi	r6,r17,1
   240e8:	1009883a 	mov	r4,r2
   240ec:	8823d07a 	srai	r17,r17,1
   240f0:	180b883a 	mov	r5,r3
   240f4:	30000426 	beq	r6,zero,24108 <_dtoa_r+0x1270>
   240f8:	a1800017 	ldw	r6,0(r20)
   240fc:	a1c00117 	ldw	r7,4(r20)
   24100:	84000044 	addi	r16,r16,1
   24104:	002bd400 	call	2bd40 <__muldf3>
   24108:	a5000204 	addi	r20,r20,8
   2410c:	883ff51e 	bne	r17,zero,240e4 <__alt_data_end+0xfffe40e4>
   24110:	d8800f15 	stw	r2,60(sp)
   24114:	d8c01015 	stw	r3,64(sp)
   24118:	003c7606 	br	232f4 <__alt_data_end+0xfffe32f4>
   2411c:	00c00c04 	movi	r3,48
   24120:	10c00005 	stb	r3,0(r2)
   24124:	d8c00517 	ldw	r3,20(sp)
   24128:	bd3fffc3 	ldbu	r20,-1(r23)
   2412c:	18c00044 	addi	r3,r3,1
   24130:	d8c00515 	stw	r3,20(sp)
   24134:	003db906 	br	2381c <__alt_data_end+0xfffe381c>
   24138:	89400117 	ldw	r5,4(r17)
   2413c:	e009883a 	mov	r4,fp
   24140:	00265340 	call	26534 <_Balloc>
   24144:	89800417 	ldw	r6,16(r17)
   24148:	89400304 	addi	r5,r17,12
   2414c:	11000304 	addi	r4,r2,12
   24150:	31800084 	addi	r6,r6,2
   24154:	318d883a 	add	r6,r6,r6
   24158:	318d883a 	add	r6,r6,r6
   2415c:	1027883a 	mov	r19,r2
   24160:	00261680 	call	26168 <memcpy>
   24164:	01800044 	movi	r6,1
   24168:	980b883a 	mov	r5,r19
   2416c:	e009883a 	mov	r4,fp
   24170:	0026cb40 	call	26cb4 <__lshift>
   24174:	1029883a 	mov	r20,r2
   24178:	003ecc06 	br	23cac <__alt_data_end+0xfffe3cac>
   2417c:	00800e44 	movi	r2,57
   24180:	90809026 	beq	r18,r2,243c4 <_dtoa_r+0x152c>
   24184:	92000044 	addi	r8,r18,1
   24188:	003f1f06 	br	23e08 <__alt_data_end+0xfffe3e08>
   2418c:	9011883a 	mov	r8,r18
   24190:	8825883a 	mov	r18,r17
   24194:	a023883a 	mov	r17,r20
   24198:	003e2906 	br	23a40 <__alt_data_end+0xfffe3a40>
   2419c:	002b883a 	mov	r21,zero
   241a0:	0023883a 	mov	r17,zero
   241a4:	003f5406 	br	23ef8 <__alt_data_end+0xfffe3ef8>
   241a8:	61bfffc4 	addi	r6,r12,-1
   241ac:	300490fa 	slli	r2,r6,3
   241b0:	00c000f4 	movhi	r3,3
   241b4:	18fd5504 	addi	r3,r3,-2732
   241b8:	1885883a 	add	r2,r3,r2
   241bc:	11000017 	ldw	r4,0(r2)
   241c0:	11400117 	ldw	r5,4(r2)
   241c4:	d8800717 	ldw	r2,28(sp)
   241c8:	880f883a 	mov	r7,r17
   241cc:	d9801215 	stw	r6,72(sp)
   241d0:	800d883a 	mov	r6,r16
   241d4:	db001615 	stw	r12,88(sp)
   241d8:	15c00044 	addi	r23,r2,1
   241dc:	002bd400 	call	2bd40 <__muldf3>
   241e0:	d9401017 	ldw	r5,64(sp)
   241e4:	d9000f17 	ldw	r4,60(sp)
   241e8:	d8c01515 	stw	r3,84(sp)
   241ec:	d8801415 	stw	r2,80(sp)
   241f0:	002cd540 	call	2cd54 <__fixdfsi>
   241f4:	1009883a 	mov	r4,r2
   241f8:	1021883a 	mov	r16,r2
   241fc:	002cdd40 	call	2cdd4 <__floatsidf>
   24200:	d9000f17 	ldw	r4,60(sp)
   24204:	d9401017 	ldw	r5,64(sp)
   24208:	100d883a 	mov	r6,r2
   2420c:	180f883a 	mov	r7,r3
   24210:	002c4580 	call	2c458 <__subdf3>
   24214:	1829883a 	mov	r20,r3
   24218:	d8c00717 	ldw	r3,28(sp)
   2421c:	84000c04 	addi	r16,r16,48
   24220:	1023883a 	mov	r17,r2
   24224:	1c000005 	stb	r16,0(r3)
   24228:	db001617 	ldw	r12,88(sp)
   2422c:	00800044 	movi	r2,1
   24230:	60802226 	beq	r12,r2,242bc <_dtoa_r+0x1424>
   24234:	d9c00717 	ldw	r7,28(sp)
   24238:	8805883a 	mov	r2,r17
   2423c:	b82b883a 	mov	r21,r23
   24240:	3b19883a 	add	r12,r7,r12
   24244:	6023883a 	mov	r17,r12
   24248:	a007883a 	mov	r3,r20
   2424c:	dc800f15 	stw	r18,60(sp)
   24250:	000d883a 	mov	r6,zero
   24254:	01d00934 	movhi	r7,16420
   24258:	1009883a 	mov	r4,r2
   2425c:	180b883a 	mov	r5,r3
   24260:	002bd400 	call	2bd40 <__muldf3>
   24264:	180b883a 	mov	r5,r3
   24268:	1009883a 	mov	r4,r2
   2426c:	1829883a 	mov	r20,r3
   24270:	1025883a 	mov	r18,r2
   24274:	002cd540 	call	2cd54 <__fixdfsi>
   24278:	1009883a 	mov	r4,r2
   2427c:	1021883a 	mov	r16,r2
   24280:	002cdd40 	call	2cdd4 <__floatsidf>
   24284:	100d883a 	mov	r6,r2
   24288:	180f883a 	mov	r7,r3
   2428c:	9009883a 	mov	r4,r18
   24290:	a00b883a 	mov	r5,r20
   24294:	84000c04 	addi	r16,r16,48
   24298:	002c4580 	call	2c458 <__subdf3>
   2429c:	ad400044 	addi	r21,r21,1
   242a0:	ac3fffc5 	stb	r16,-1(r21)
   242a4:	ac7fea1e 	bne	r21,r17,24250 <__alt_data_end+0xfffe4250>
   242a8:	1023883a 	mov	r17,r2
   242ac:	d8801217 	ldw	r2,72(sp)
   242b0:	dc800f17 	ldw	r18,60(sp)
   242b4:	1829883a 	mov	r20,r3
   242b8:	b8af883a 	add	r23,r23,r2
   242bc:	d9001417 	ldw	r4,80(sp)
   242c0:	d9401517 	ldw	r5,84(sp)
   242c4:	000d883a 	mov	r6,zero
   242c8:	01cff834 	movhi	r7,16352
   242cc:	002a9540 	call	2a954 <__adddf3>
   242d0:	880d883a 	mov	r6,r17
   242d4:	a00f883a 	mov	r7,r20
   242d8:	1009883a 	mov	r4,r2
   242dc:	180b883a 	mov	r5,r3
   242e0:	002bc4c0 	call	2bc4c <__ledf2>
   242e4:	10003e0e 	bge	r2,zero,243e0 <_dtoa_r+0x1548>
   242e8:	d9001317 	ldw	r4,76(sp)
   242ec:	bd3fffc3 	ldbu	r20,-1(r23)
   242f0:	d9000515 	stw	r4,20(sp)
   242f4:	003d3b06 	br	237e4 <__alt_data_end+0xfffe37e4>
   242f8:	0027883a 	mov	r19,zero
   242fc:	003f1b06 	br	23f6c <__alt_data_end+0xfffe3f6c>
   24300:	d8800817 	ldw	r2,32(sp)
   24304:	11e9c83a 	sub	r20,r2,r7
   24308:	0005883a 	mov	r2,zero
   2430c:	003d5406 	br	23860 <__alt_data_end+0xfffe3860>
   24310:	00800044 	movi	r2,1
   24314:	003dc706 	br	23a34 <__alt_data_end+0xfffe3a34>
   24318:	d8c00217 	ldw	r3,8(sp)
   2431c:	00800d84 	movi	r2,54
   24320:	dd400a17 	ldw	r21,40(sp)
   24324:	10c5c83a 	sub	r2,r2,r3
   24328:	dd000817 	ldw	r20,32(sp)
   2432c:	003d4c06 	br	23860 <__alt_data_end+0xfffe3860>
   24330:	dc800f15 	stw	r18,60(sp)
   24334:	dcc01015 	stw	r19,64(sp)
   24338:	04000084 	movi	r16,2
   2433c:	003bed06 	br	232f4 <__alt_data_end+0xfffe32f4>
   24340:	d9000617 	ldw	r4,24(sp)
   24344:	203f0d26 	beq	r4,zero,23f7c <__alt_data_end+0xfffe3f7c>
   24348:	d9800c17 	ldw	r6,48(sp)
   2434c:	01bcab0e 	bge	zero,r6,235fc <__alt_data_end+0xfffe35fc>
   24350:	d9401017 	ldw	r5,64(sp)
   24354:	d9000f17 	ldw	r4,60(sp)
   24358:	000d883a 	mov	r6,zero
   2435c:	01d00934 	movhi	r7,16420
   24360:	002bd400 	call	2bd40 <__muldf3>
   24364:	81000044 	addi	r4,r16,1
   24368:	d8800f15 	stw	r2,60(sp)
   2436c:	d8c01015 	stw	r3,64(sp)
   24370:	002cdd40 	call	2cdd4 <__floatsidf>
   24374:	d9800f17 	ldw	r6,60(sp)
   24378:	d9c01017 	ldw	r7,64(sp)
   2437c:	1009883a 	mov	r4,r2
   24380:	180b883a 	mov	r5,r3
   24384:	002bd400 	call	2bd40 <__muldf3>
   24388:	01d00734 	movhi	r7,16412
   2438c:	000d883a 	mov	r6,zero
   24390:	1009883a 	mov	r4,r2
   24394:	180b883a 	mov	r5,r3
   24398:	002a9540 	call	2a954 <__adddf3>
   2439c:	d9c00517 	ldw	r7,20(sp)
   243a0:	047f3034 	movhi	r17,64704
   243a4:	1021883a 	mov	r16,r2
   243a8:	39ffffc4 	addi	r7,r7,-1
   243ac:	d9c01315 	stw	r7,76(sp)
   243b0:	1c63883a 	add	r17,r3,r17
   243b4:	db000c17 	ldw	r12,48(sp)
   243b8:	003bea06 	br	23364 <__alt_data_end+0xfffe3364>
   243bc:	dc000915 	stw	r16,36(sp)
   243c0:	003e0e06 	br	23bfc <__alt_data_end+0xfffe3bfc>
   243c4:	01000e44 	movi	r4,57
   243c8:	8825883a 	mov	r18,r17
   243cc:	9dc00044 	addi	r23,r19,1
   243d0:	99000005 	stb	r4,0(r19)
   243d4:	a023883a 	mov	r17,r20
   243d8:	dc000915 	stw	r16,36(sp)
   243dc:	003da406 	br	23a70 <__alt_data_end+0xfffe3a70>
   243e0:	d9801417 	ldw	r6,80(sp)
   243e4:	d9c01517 	ldw	r7,84(sp)
   243e8:	0009883a 	mov	r4,zero
   243ec:	014ff834 	movhi	r5,16352
   243f0:	002c4580 	call	2c458 <__subdf3>
   243f4:	880d883a 	mov	r6,r17
   243f8:	a00f883a 	mov	r7,r20
   243fc:	1009883a 	mov	r4,r2
   24400:	180b883a 	mov	r5,r3
   24404:	002bb700 	call	2bb70 <__gedf2>
   24408:	00bc7c0e 	bge	zero,r2,235fc <__alt_data_end+0xfffe35fc>
   2440c:	01000c04 	movi	r4,48
   24410:	00000106 	br	24418 <_dtoa_r+0x1580>
   24414:	102f883a 	mov	r23,r2
   24418:	b8bfffc4 	addi	r2,r23,-1
   2441c:	10c00007 	ldb	r3,0(r2)
   24420:	193ffc26 	beq	r3,r4,24414 <__alt_data_end+0xfffe4414>
   24424:	d9801317 	ldw	r6,76(sp)
   24428:	d9800515 	stw	r6,20(sp)
   2442c:	003c4406 	br	23540 <__alt_data_end+0xfffe3540>
   24430:	d9801317 	ldw	r6,76(sp)
   24434:	d9800515 	stw	r6,20(sp)
   24438:	003cea06 	br	237e4 <__alt_data_end+0xfffe37e4>
   2443c:	dd800f17 	ldw	r22,60(sp)
   24440:	dcc01017 	ldw	r19,64(sp)
   24444:	dc801217 	ldw	r18,72(sp)
   24448:	003c6c06 	br	235fc <__alt_data_end+0xfffe35fc>
   2444c:	903e031e 	bne	r18,zero,23c5c <__alt_data_end+0xfffe3c5c>
   24450:	003ebb06 	br	23f40 <__alt_data_end+0xfffe3f40>
   24454:	103e6c1e 	bne	r2,zero,23e08 <__alt_data_end+0xfffe3e08>
   24458:	4080004c 	andi	r2,r8,1
   2445c:	103e6a26 	beq	r2,zero,23e08 <__alt_data_end+0xfffe3e08>
   24460:	003e6606 	br	23dfc <__alt_data_end+0xfffe3dfc>
   24464:	d8c00317 	ldw	r3,12(sp)
   24468:	00800084 	movi	r2,2
   2446c:	10c02916 	blt	r2,r3,24514 <_dtoa_r+0x167c>
   24470:	d9000c17 	ldw	r4,48(sp)
   24474:	003e8806 	br	23e98 <__alt_data_end+0xfffe3e98>
   24478:	04000084 	movi	r16,2
   2447c:	003b9d06 	br	232f4 <__alt_data_end+0xfffe32f4>
   24480:	d9001317 	ldw	r4,76(sp)
   24484:	d9000515 	stw	r4,20(sp)
   24488:	003cd606 	br	237e4 <__alt_data_end+0xfffe37e4>
   2448c:	d8801317 	ldw	r2,76(sp)
   24490:	d8800515 	stw	r2,20(sp)
   24494:	003c2a06 	br	23540 <__alt_data_end+0xfffe3540>
   24498:	d9800317 	ldw	r6,12(sp)
   2449c:	00800084 	movi	r2,2
   244a0:	11801516 	blt	r2,r6,244f8 <_dtoa_r+0x1660>
   244a4:	d9c00c17 	ldw	r7,48(sp)
   244a8:	d9c00615 	stw	r7,24(sp)
   244ac:	003df706 	br	23c8c <__alt_data_end+0xfffe3c8c>
   244b0:	193d3926 	beq	r3,r4,23998 <__alt_data_end+0xfffe3998>
   244b4:	00c00f04 	movi	r3,60
   244b8:	1885c83a 	sub	r2,r3,r2
   244bc:	003ddf06 	br	23c3c <__alt_data_end+0xfffe3c3c>
   244c0:	e009883a 	mov	r4,fp
   244c4:	e0001115 	stw	zero,68(fp)
   244c8:	000b883a 	mov	r5,zero
   244cc:	00265340 	call	26534 <_Balloc>
   244d0:	d8800715 	stw	r2,28(sp)
   244d4:	d8c00717 	ldw	r3,28(sp)
   244d8:	00bfffc4 	movi	r2,-1
   244dc:	01000044 	movi	r4,1
   244e0:	d8800c15 	stw	r2,48(sp)
   244e4:	e0c01015 	stw	r3,64(fp)
   244e8:	d9000b15 	stw	r4,44(sp)
   244ec:	d8800615 	stw	r2,24(sp)
   244f0:	d8002215 	stw	zero,136(sp)
   244f4:	003c4106 	br	235fc <__alt_data_end+0xfffe35fc>
   244f8:	d8c00c17 	ldw	r3,48(sp)
   244fc:	d8c00615 	stw	r3,24(sp)
   24500:	003e7006 	br	23ec4 <__alt_data_end+0xfffe3ec4>
   24504:	04400044 	movi	r17,1
   24508:	003b2006 	br	2318c <__alt_data_end+0xfffe318c>
   2450c:	000b883a 	mov	r5,zero
   24510:	003b3d06 	br	23208 <__alt_data_end+0xfffe3208>
   24514:	d8800c17 	ldw	r2,48(sp)
   24518:	d8800615 	stw	r2,24(sp)
   2451c:	003e6906 	br	23ec4 <__alt_data_end+0xfffe3ec4>

00024520 <__sflush_r>:
   24520:	2880030b 	ldhu	r2,12(r5)
   24524:	defffb04 	addi	sp,sp,-20
   24528:	dcc00315 	stw	r19,12(sp)
   2452c:	dc400115 	stw	r17,4(sp)
   24530:	dfc00415 	stw	ra,16(sp)
   24534:	dc800215 	stw	r18,8(sp)
   24538:	dc000015 	stw	r16,0(sp)
   2453c:	10c0020c 	andi	r3,r2,8
   24540:	2823883a 	mov	r17,r5
   24544:	2027883a 	mov	r19,r4
   24548:	1800311e 	bne	r3,zero,24610 <__sflush_r+0xf0>
   2454c:	28c00117 	ldw	r3,4(r5)
   24550:	10820014 	ori	r2,r2,2048
   24554:	2880030d 	sth	r2,12(r5)
   24558:	00c04b0e 	bge	zero,r3,24688 <__sflush_r+0x168>
   2455c:	8a000a17 	ldw	r8,40(r17)
   24560:	40002326 	beq	r8,zero,245f0 <__sflush_r+0xd0>
   24564:	9c000017 	ldw	r16,0(r19)
   24568:	10c4000c 	andi	r3,r2,4096
   2456c:	98000015 	stw	zero,0(r19)
   24570:	18004826 	beq	r3,zero,24694 <__sflush_r+0x174>
   24574:	89801417 	ldw	r6,80(r17)
   24578:	10c0010c 	andi	r3,r2,4
   2457c:	18000626 	beq	r3,zero,24598 <__sflush_r+0x78>
   24580:	88c00117 	ldw	r3,4(r17)
   24584:	88800c17 	ldw	r2,48(r17)
   24588:	30cdc83a 	sub	r6,r6,r3
   2458c:	10000226 	beq	r2,zero,24598 <__sflush_r+0x78>
   24590:	88800f17 	ldw	r2,60(r17)
   24594:	308dc83a 	sub	r6,r6,r2
   24598:	89400717 	ldw	r5,28(r17)
   2459c:	000f883a 	mov	r7,zero
   245a0:	9809883a 	mov	r4,r19
   245a4:	403ee83a 	callr	r8
   245a8:	00ffffc4 	movi	r3,-1
   245ac:	10c04426 	beq	r2,r3,246c0 <__sflush_r+0x1a0>
   245b0:	88c0030b 	ldhu	r3,12(r17)
   245b4:	89000417 	ldw	r4,16(r17)
   245b8:	88000115 	stw	zero,4(r17)
   245bc:	197dffcc 	andi	r5,r3,63487
   245c0:	8940030d 	sth	r5,12(r17)
   245c4:	89000015 	stw	r4,0(r17)
   245c8:	18c4000c 	andi	r3,r3,4096
   245cc:	18002c1e 	bne	r3,zero,24680 <__sflush_r+0x160>
   245d0:	89400c17 	ldw	r5,48(r17)
   245d4:	9c000015 	stw	r16,0(r19)
   245d8:	28000526 	beq	r5,zero,245f0 <__sflush_r+0xd0>
   245dc:	88801004 	addi	r2,r17,64
   245e0:	28800226 	beq	r5,r2,245ec <__sflush_r+0xcc>
   245e4:	9809883a 	mov	r4,r19
   245e8:	0024c8c0 	call	24c8c <_free_r>
   245ec:	88000c15 	stw	zero,48(r17)
   245f0:	0005883a 	mov	r2,zero
   245f4:	dfc00417 	ldw	ra,16(sp)
   245f8:	dcc00317 	ldw	r19,12(sp)
   245fc:	dc800217 	ldw	r18,8(sp)
   24600:	dc400117 	ldw	r17,4(sp)
   24604:	dc000017 	ldw	r16,0(sp)
   24608:	dec00504 	addi	sp,sp,20
   2460c:	f800283a 	ret
   24610:	2c800417 	ldw	r18,16(r5)
   24614:	903ff626 	beq	r18,zero,245f0 <__alt_data_end+0xfffe45f0>
   24618:	2c000017 	ldw	r16,0(r5)
   2461c:	108000cc 	andi	r2,r2,3
   24620:	2c800015 	stw	r18,0(r5)
   24624:	84a1c83a 	sub	r16,r16,r18
   24628:	1000131e 	bne	r2,zero,24678 <__sflush_r+0x158>
   2462c:	28800517 	ldw	r2,20(r5)
   24630:	88800215 	stw	r2,8(r17)
   24634:	04000316 	blt	zero,r16,24644 <__sflush_r+0x124>
   24638:	003fed06 	br	245f0 <__alt_data_end+0xfffe45f0>
   2463c:	90a5883a 	add	r18,r18,r2
   24640:	043feb0e 	bge	zero,r16,245f0 <__alt_data_end+0xfffe45f0>
   24644:	88800917 	ldw	r2,36(r17)
   24648:	89400717 	ldw	r5,28(r17)
   2464c:	800f883a 	mov	r7,r16
   24650:	900d883a 	mov	r6,r18
   24654:	9809883a 	mov	r4,r19
   24658:	103ee83a 	callr	r2
   2465c:	80a1c83a 	sub	r16,r16,r2
   24660:	00bff616 	blt	zero,r2,2463c <__alt_data_end+0xfffe463c>
   24664:	88c0030b 	ldhu	r3,12(r17)
   24668:	00bfffc4 	movi	r2,-1
   2466c:	18c01014 	ori	r3,r3,64
   24670:	88c0030d 	sth	r3,12(r17)
   24674:	003fdf06 	br	245f4 <__alt_data_end+0xfffe45f4>
   24678:	0005883a 	mov	r2,zero
   2467c:	003fec06 	br	24630 <__alt_data_end+0xfffe4630>
   24680:	88801415 	stw	r2,80(r17)
   24684:	003fd206 	br	245d0 <__alt_data_end+0xfffe45d0>
   24688:	28c00f17 	ldw	r3,60(r5)
   2468c:	00ffb316 	blt	zero,r3,2455c <__alt_data_end+0xfffe455c>
   24690:	003fd706 	br	245f0 <__alt_data_end+0xfffe45f0>
   24694:	89400717 	ldw	r5,28(r17)
   24698:	000d883a 	mov	r6,zero
   2469c:	01c00044 	movi	r7,1
   246a0:	9809883a 	mov	r4,r19
   246a4:	403ee83a 	callr	r8
   246a8:	100d883a 	mov	r6,r2
   246ac:	00bfffc4 	movi	r2,-1
   246b0:	30801426 	beq	r6,r2,24704 <__sflush_r+0x1e4>
   246b4:	8880030b 	ldhu	r2,12(r17)
   246b8:	8a000a17 	ldw	r8,40(r17)
   246bc:	003fae06 	br	24578 <__alt_data_end+0xfffe4578>
   246c0:	98c00017 	ldw	r3,0(r19)
   246c4:	183fba26 	beq	r3,zero,245b0 <__alt_data_end+0xfffe45b0>
   246c8:	01000744 	movi	r4,29
   246cc:	19000626 	beq	r3,r4,246e8 <__sflush_r+0x1c8>
   246d0:	01000584 	movi	r4,22
   246d4:	19000426 	beq	r3,r4,246e8 <__sflush_r+0x1c8>
   246d8:	88c0030b 	ldhu	r3,12(r17)
   246dc:	18c01014 	ori	r3,r3,64
   246e0:	88c0030d 	sth	r3,12(r17)
   246e4:	003fc306 	br	245f4 <__alt_data_end+0xfffe45f4>
   246e8:	8880030b 	ldhu	r2,12(r17)
   246ec:	88c00417 	ldw	r3,16(r17)
   246f0:	88000115 	stw	zero,4(r17)
   246f4:	10bdffcc 	andi	r2,r2,63487
   246f8:	8880030d 	sth	r2,12(r17)
   246fc:	88c00015 	stw	r3,0(r17)
   24700:	003fb306 	br	245d0 <__alt_data_end+0xfffe45d0>
   24704:	98800017 	ldw	r2,0(r19)
   24708:	103fea26 	beq	r2,zero,246b4 <__alt_data_end+0xfffe46b4>
   2470c:	00c00744 	movi	r3,29
   24710:	10c00226 	beq	r2,r3,2471c <__sflush_r+0x1fc>
   24714:	00c00584 	movi	r3,22
   24718:	10c0031e 	bne	r2,r3,24728 <__sflush_r+0x208>
   2471c:	9c000015 	stw	r16,0(r19)
   24720:	0005883a 	mov	r2,zero
   24724:	003fb306 	br	245f4 <__alt_data_end+0xfffe45f4>
   24728:	88c0030b 	ldhu	r3,12(r17)
   2472c:	3005883a 	mov	r2,r6
   24730:	18c01014 	ori	r3,r3,64
   24734:	88c0030d 	sth	r3,12(r17)
   24738:	003fae06 	br	245f4 <__alt_data_end+0xfffe45f4>

0002473c <_fflush_r>:
   2473c:	defffd04 	addi	sp,sp,-12
   24740:	dc000115 	stw	r16,4(sp)
   24744:	dfc00215 	stw	ra,8(sp)
   24748:	2021883a 	mov	r16,r4
   2474c:	20000226 	beq	r4,zero,24758 <_fflush_r+0x1c>
   24750:	20800e17 	ldw	r2,56(r4)
   24754:	10000c26 	beq	r2,zero,24788 <_fflush_r+0x4c>
   24758:	2880030f 	ldh	r2,12(r5)
   2475c:	1000051e 	bne	r2,zero,24774 <_fflush_r+0x38>
   24760:	0005883a 	mov	r2,zero
   24764:	dfc00217 	ldw	ra,8(sp)
   24768:	dc000117 	ldw	r16,4(sp)
   2476c:	dec00304 	addi	sp,sp,12
   24770:	f800283a 	ret
   24774:	8009883a 	mov	r4,r16
   24778:	dfc00217 	ldw	ra,8(sp)
   2477c:	dc000117 	ldw	r16,4(sp)
   24780:	dec00304 	addi	sp,sp,12
   24784:	00245201 	jmpi	24520 <__sflush_r>
   24788:	d9400015 	stw	r5,0(sp)
   2478c:	0024b180 	call	24b18 <__sinit>
   24790:	d9400017 	ldw	r5,0(sp)
   24794:	003ff006 	br	24758 <__alt_data_end+0xfffe4758>

00024798 <fflush>:
   24798:	20000526 	beq	r4,zero,247b0 <fflush+0x18>
   2479c:	008000f4 	movhi	r2,3
   247a0:	10848804 	addi	r2,r2,4640
   247a4:	200b883a 	mov	r5,r4
   247a8:	11000017 	ldw	r4,0(r2)
   247ac:	002473c1 	jmpi	2473c <_fflush_r>
   247b0:	008000f4 	movhi	r2,3
   247b4:	10848704 	addi	r2,r2,4636
   247b8:	11000017 	ldw	r4,0(r2)
   247bc:	014000b4 	movhi	r5,2
   247c0:	2951cf04 	addi	r5,r5,18236
   247c4:	002551c1 	jmpi	2551c <_fwalk_reent>

000247c8 <__fp_unlock>:
   247c8:	0005883a 	mov	r2,zero
   247cc:	f800283a 	ret

000247d0 <_cleanup_r>:
   247d0:	014000f4 	movhi	r5,3
   247d4:	29654d04 	addi	r5,r5,-27340
   247d8:	002551c1 	jmpi	2551c <_fwalk_reent>

000247dc <__sinit.part.1>:
   247dc:	defff704 	addi	sp,sp,-36
   247e0:	00c000b4 	movhi	r3,2
   247e4:	dfc00815 	stw	ra,32(sp)
   247e8:	ddc00715 	stw	r23,28(sp)
   247ec:	dd800615 	stw	r22,24(sp)
   247f0:	dd400515 	stw	r21,20(sp)
   247f4:	dd000415 	stw	r20,16(sp)
   247f8:	dcc00315 	stw	r19,12(sp)
   247fc:	dc800215 	stw	r18,8(sp)
   24800:	dc400115 	stw	r17,4(sp)
   24804:	dc000015 	stw	r16,0(sp)
   24808:	18d1f404 	addi	r3,r3,18384
   2480c:	24000117 	ldw	r16,4(r4)
   24810:	20c00f15 	stw	r3,60(r4)
   24814:	2080bb04 	addi	r2,r4,748
   24818:	00c000c4 	movi	r3,3
   2481c:	20c0b915 	stw	r3,740(r4)
   24820:	2080ba15 	stw	r2,744(r4)
   24824:	2000b815 	stw	zero,736(r4)
   24828:	05c00204 	movi	r23,8
   2482c:	00800104 	movi	r2,4
   24830:	2025883a 	mov	r18,r4
   24834:	b80d883a 	mov	r6,r23
   24838:	81001704 	addi	r4,r16,92
   2483c:	000b883a 	mov	r5,zero
   24840:	80000015 	stw	zero,0(r16)
   24844:	80000115 	stw	zero,4(r16)
   24848:	80000215 	stw	zero,8(r16)
   2484c:	8080030d 	sth	r2,12(r16)
   24850:	80001915 	stw	zero,100(r16)
   24854:	8000038d 	sth	zero,14(r16)
   24858:	80000415 	stw	zero,16(r16)
   2485c:	80000515 	stw	zero,20(r16)
   24860:	80000615 	stw	zero,24(r16)
   24864:	002640c0 	call	2640c <memset>
   24868:	058000b4 	movhi	r22,2
   2486c:	94400217 	ldw	r17,8(r18)
   24870:	054000b4 	movhi	r21,2
   24874:	050000b4 	movhi	r20,2
   24878:	04c000b4 	movhi	r19,2
   2487c:	b59ed704 	addi	r22,r22,31580
   24880:	ad5eee04 	addi	r21,r21,31672
   24884:	a51f0d04 	addi	r20,r20,31796
   24888:	9cdf2404 	addi	r19,r19,31888
   2488c:	85800815 	stw	r22,32(r16)
   24890:	85400915 	stw	r21,36(r16)
   24894:	85000a15 	stw	r20,40(r16)
   24898:	84c00b15 	stw	r19,44(r16)
   2489c:	84000715 	stw	r16,28(r16)
   248a0:	00800284 	movi	r2,10
   248a4:	8880030d 	sth	r2,12(r17)
   248a8:	00800044 	movi	r2,1
   248ac:	b80d883a 	mov	r6,r23
   248b0:	89001704 	addi	r4,r17,92
   248b4:	000b883a 	mov	r5,zero
   248b8:	88000015 	stw	zero,0(r17)
   248bc:	88000115 	stw	zero,4(r17)
   248c0:	88000215 	stw	zero,8(r17)
   248c4:	88001915 	stw	zero,100(r17)
   248c8:	8880038d 	sth	r2,14(r17)
   248cc:	88000415 	stw	zero,16(r17)
   248d0:	88000515 	stw	zero,20(r17)
   248d4:	88000615 	stw	zero,24(r17)
   248d8:	002640c0 	call	2640c <memset>
   248dc:	94000317 	ldw	r16,12(r18)
   248e0:	00800484 	movi	r2,18
   248e4:	8c400715 	stw	r17,28(r17)
   248e8:	8d800815 	stw	r22,32(r17)
   248ec:	8d400915 	stw	r21,36(r17)
   248f0:	8d000a15 	stw	r20,40(r17)
   248f4:	8cc00b15 	stw	r19,44(r17)
   248f8:	8080030d 	sth	r2,12(r16)
   248fc:	00800084 	movi	r2,2
   24900:	80000015 	stw	zero,0(r16)
   24904:	80000115 	stw	zero,4(r16)
   24908:	80000215 	stw	zero,8(r16)
   2490c:	80001915 	stw	zero,100(r16)
   24910:	8080038d 	sth	r2,14(r16)
   24914:	80000415 	stw	zero,16(r16)
   24918:	80000515 	stw	zero,20(r16)
   2491c:	80000615 	stw	zero,24(r16)
   24920:	b80d883a 	mov	r6,r23
   24924:	000b883a 	mov	r5,zero
   24928:	81001704 	addi	r4,r16,92
   2492c:	002640c0 	call	2640c <memset>
   24930:	00800044 	movi	r2,1
   24934:	84000715 	stw	r16,28(r16)
   24938:	85800815 	stw	r22,32(r16)
   2493c:	85400915 	stw	r21,36(r16)
   24940:	85000a15 	stw	r20,40(r16)
   24944:	84c00b15 	stw	r19,44(r16)
   24948:	90800e15 	stw	r2,56(r18)
   2494c:	dfc00817 	ldw	ra,32(sp)
   24950:	ddc00717 	ldw	r23,28(sp)
   24954:	dd800617 	ldw	r22,24(sp)
   24958:	dd400517 	ldw	r21,20(sp)
   2495c:	dd000417 	ldw	r20,16(sp)
   24960:	dcc00317 	ldw	r19,12(sp)
   24964:	dc800217 	ldw	r18,8(sp)
   24968:	dc400117 	ldw	r17,4(sp)
   2496c:	dc000017 	ldw	r16,0(sp)
   24970:	dec00904 	addi	sp,sp,36
   24974:	f800283a 	ret

00024978 <__fp_lock>:
   24978:	0005883a 	mov	r2,zero
   2497c:	f800283a 	ret

00024980 <__sfmoreglue>:
   24980:	defffc04 	addi	sp,sp,-16
   24984:	dc400115 	stw	r17,4(sp)
   24988:	2c7fffc4 	addi	r17,r5,-1
   2498c:	8c401a24 	muli	r17,r17,104
   24990:	dc800215 	stw	r18,8(sp)
   24994:	2825883a 	mov	r18,r5
   24998:	89401d04 	addi	r5,r17,116
   2499c:	dc000015 	stw	r16,0(sp)
   249a0:	dfc00315 	stw	ra,12(sp)
   249a4:	00258780 	call	25878 <_malloc_r>
   249a8:	1021883a 	mov	r16,r2
   249ac:	10000726 	beq	r2,zero,249cc <__sfmoreglue+0x4c>
   249b0:	11000304 	addi	r4,r2,12
   249b4:	10000015 	stw	zero,0(r2)
   249b8:	14800115 	stw	r18,4(r2)
   249bc:	11000215 	stw	r4,8(r2)
   249c0:	89801a04 	addi	r6,r17,104
   249c4:	000b883a 	mov	r5,zero
   249c8:	002640c0 	call	2640c <memset>
   249cc:	8005883a 	mov	r2,r16
   249d0:	dfc00317 	ldw	ra,12(sp)
   249d4:	dc800217 	ldw	r18,8(sp)
   249d8:	dc400117 	ldw	r17,4(sp)
   249dc:	dc000017 	ldw	r16,0(sp)
   249e0:	dec00404 	addi	sp,sp,16
   249e4:	f800283a 	ret

000249e8 <__sfp>:
   249e8:	defffb04 	addi	sp,sp,-20
   249ec:	dc000015 	stw	r16,0(sp)
   249f0:	040000f4 	movhi	r16,3
   249f4:	84048704 	addi	r16,r16,4636
   249f8:	dcc00315 	stw	r19,12(sp)
   249fc:	2027883a 	mov	r19,r4
   24a00:	81000017 	ldw	r4,0(r16)
   24a04:	dfc00415 	stw	ra,16(sp)
   24a08:	dc800215 	stw	r18,8(sp)
   24a0c:	20800e17 	ldw	r2,56(r4)
   24a10:	dc400115 	stw	r17,4(sp)
   24a14:	1000021e 	bne	r2,zero,24a20 <__sfp+0x38>
   24a18:	00247dc0 	call	247dc <__sinit.part.1>
   24a1c:	81000017 	ldw	r4,0(r16)
   24a20:	2480b804 	addi	r18,r4,736
   24a24:	047fffc4 	movi	r17,-1
   24a28:	91000117 	ldw	r4,4(r18)
   24a2c:	94000217 	ldw	r16,8(r18)
   24a30:	213fffc4 	addi	r4,r4,-1
   24a34:	20000a16 	blt	r4,zero,24a60 <__sfp+0x78>
   24a38:	8080030f 	ldh	r2,12(r16)
   24a3c:	10000c26 	beq	r2,zero,24a70 <__sfp+0x88>
   24a40:	80c01d04 	addi	r3,r16,116
   24a44:	00000206 	br	24a50 <__sfp+0x68>
   24a48:	18bfe60f 	ldh	r2,-104(r3)
   24a4c:	10000826 	beq	r2,zero,24a70 <__sfp+0x88>
   24a50:	213fffc4 	addi	r4,r4,-1
   24a54:	1c3ffd04 	addi	r16,r3,-12
   24a58:	18c01a04 	addi	r3,r3,104
   24a5c:	247ffa1e 	bne	r4,r17,24a48 <__alt_data_end+0xfffe4a48>
   24a60:	90800017 	ldw	r2,0(r18)
   24a64:	10001d26 	beq	r2,zero,24adc <__sfp+0xf4>
   24a68:	1025883a 	mov	r18,r2
   24a6c:	003fee06 	br	24a28 <__alt_data_end+0xfffe4a28>
   24a70:	00bfffc4 	movi	r2,-1
   24a74:	8080038d 	sth	r2,14(r16)
   24a78:	00800044 	movi	r2,1
   24a7c:	8080030d 	sth	r2,12(r16)
   24a80:	80001915 	stw	zero,100(r16)
   24a84:	80000015 	stw	zero,0(r16)
   24a88:	80000215 	stw	zero,8(r16)
   24a8c:	80000115 	stw	zero,4(r16)
   24a90:	80000415 	stw	zero,16(r16)
   24a94:	80000515 	stw	zero,20(r16)
   24a98:	80000615 	stw	zero,24(r16)
   24a9c:	01800204 	movi	r6,8
   24aa0:	000b883a 	mov	r5,zero
   24aa4:	81001704 	addi	r4,r16,92
   24aa8:	002640c0 	call	2640c <memset>
   24aac:	8005883a 	mov	r2,r16
   24ab0:	80000c15 	stw	zero,48(r16)
   24ab4:	80000d15 	stw	zero,52(r16)
   24ab8:	80001115 	stw	zero,68(r16)
   24abc:	80001215 	stw	zero,72(r16)
   24ac0:	dfc00417 	ldw	ra,16(sp)
   24ac4:	dcc00317 	ldw	r19,12(sp)
   24ac8:	dc800217 	ldw	r18,8(sp)
   24acc:	dc400117 	ldw	r17,4(sp)
   24ad0:	dc000017 	ldw	r16,0(sp)
   24ad4:	dec00504 	addi	sp,sp,20
   24ad8:	f800283a 	ret
   24adc:	01400104 	movi	r5,4
   24ae0:	9809883a 	mov	r4,r19
   24ae4:	00249800 	call	24980 <__sfmoreglue>
   24ae8:	90800015 	stw	r2,0(r18)
   24aec:	103fde1e 	bne	r2,zero,24a68 <__alt_data_end+0xfffe4a68>
   24af0:	00800304 	movi	r2,12
   24af4:	98800015 	stw	r2,0(r19)
   24af8:	0005883a 	mov	r2,zero
   24afc:	003ff006 	br	24ac0 <__alt_data_end+0xfffe4ac0>

00024b00 <_cleanup>:
   24b00:	008000f4 	movhi	r2,3
   24b04:	10848704 	addi	r2,r2,4636
   24b08:	11000017 	ldw	r4,0(r2)
   24b0c:	014000f4 	movhi	r5,3
   24b10:	29654d04 	addi	r5,r5,-27340
   24b14:	002551c1 	jmpi	2551c <_fwalk_reent>

00024b18 <__sinit>:
   24b18:	20800e17 	ldw	r2,56(r4)
   24b1c:	10000126 	beq	r2,zero,24b24 <__sinit+0xc>
   24b20:	f800283a 	ret
   24b24:	00247dc1 	jmpi	247dc <__sinit.part.1>

00024b28 <__sfp_lock_acquire>:
   24b28:	f800283a 	ret

00024b2c <__sfp_lock_release>:
   24b2c:	f800283a 	ret

00024b30 <__sinit_lock_acquire>:
   24b30:	f800283a 	ret

00024b34 <__sinit_lock_release>:
   24b34:	f800283a 	ret

00024b38 <__fp_lock_all>:
   24b38:	008000f4 	movhi	r2,3
   24b3c:	10848804 	addi	r2,r2,4640
   24b40:	11000017 	ldw	r4,0(r2)
   24b44:	014000b4 	movhi	r5,2
   24b48:	29525e04 	addi	r5,r5,18808
   24b4c:	00254581 	jmpi	25458 <_fwalk>

00024b50 <__fp_unlock_all>:
   24b50:	008000f4 	movhi	r2,3
   24b54:	10848804 	addi	r2,r2,4640
   24b58:	11000017 	ldw	r4,0(r2)
   24b5c:	014000b4 	movhi	r5,2
   24b60:	2951f204 	addi	r5,r5,18376
   24b64:	00254581 	jmpi	25458 <_fwalk>

00024b68 <_malloc_trim_r>:
   24b68:	defffb04 	addi	sp,sp,-20
   24b6c:	dcc00315 	stw	r19,12(sp)
   24b70:	04c000f4 	movhi	r19,3
   24b74:	dc800215 	stw	r18,8(sp)
   24b78:	dc400115 	stw	r17,4(sp)
   24b7c:	dc000015 	stw	r16,0(sp)
   24b80:	dfc00415 	stw	ra,16(sp)
   24b84:	2821883a 	mov	r16,r5
   24b88:	9cff0304 	addi	r19,r19,-1012
   24b8c:	2025883a 	mov	r18,r4
   24b90:	002d5380 	call	2d538 <__malloc_lock>
   24b94:	98800217 	ldw	r2,8(r19)
   24b98:	14400117 	ldw	r17,4(r2)
   24b9c:	00bfff04 	movi	r2,-4
   24ba0:	88a2703a 	and	r17,r17,r2
   24ba4:	8c21c83a 	sub	r16,r17,r16
   24ba8:	8403fbc4 	addi	r16,r16,4079
   24bac:	8020d33a 	srli	r16,r16,12
   24bb0:	0083ffc4 	movi	r2,4095
   24bb4:	843fffc4 	addi	r16,r16,-1
   24bb8:	8020933a 	slli	r16,r16,12
   24bbc:	1400060e 	bge	r2,r16,24bd8 <_malloc_trim_r+0x70>
   24bc0:	000b883a 	mov	r5,zero
   24bc4:	9009883a 	mov	r4,r18
   24bc8:	0027b080 	call	27b08 <_sbrk_r>
   24bcc:	98c00217 	ldw	r3,8(r19)
   24bd0:	1c47883a 	add	r3,r3,r17
   24bd4:	10c00a26 	beq	r2,r3,24c00 <_malloc_trim_r+0x98>
   24bd8:	9009883a 	mov	r4,r18
   24bdc:	002d55c0 	call	2d55c <__malloc_unlock>
   24be0:	0005883a 	mov	r2,zero
   24be4:	dfc00417 	ldw	ra,16(sp)
   24be8:	dcc00317 	ldw	r19,12(sp)
   24bec:	dc800217 	ldw	r18,8(sp)
   24bf0:	dc400117 	ldw	r17,4(sp)
   24bf4:	dc000017 	ldw	r16,0(sp)
   24bf8:	dec00504 	addi	sp,sp,20
   24bfc:	f800283a 	ret
   24c00:	040bc83a 	sub	r5,zero,r16
   24c04:	9009883a 	mov	r4,r18
   24c08:	0027b080 	call	27b08 <_sbrk_r>
   24c0c:	00ffffc4 	movi	r3,-1
   24c10:	10c00d26 	beq	r2,r3,24c48 <_malloc_trim_r+0xe0>
   24c14:	00c000f4 	movhi	r3,3
   24c18:	18cb6004 	addi	r3,r3,11648
   24c1c:	18800017 	ldw	r2,0(r3)
   24c20:	99000217 	ldw	r4,8(r19)
   24c24:	8c23c83a 	sub	r17,r17,r16
   24c28:	8c400054 	ori	r17,r17,1
   24c2c:	1421c83a 	sub	r16,r2,r16
   24c30:	24400115 	stw	r17,4(r4)
   24c34:	9009883a 	mov	r4,r18
   24c38:	1c000015 	stw	r16,0(r3)
   24c3c:	002d55c0 	call	2d55c <__malloc_unlock>
   24c40:	00800044 	movi	r2,1
   24c44:	003fe706 	br	24be4 <__alt_data_end+0xfffe4be4>
   24c48:	000b883a 	mov	r5,zero
   24c4c:	9009883a 	mov	r4,r18
   24c50:	0027b080 	call	27b08 <_sbrk_r>
   24c54:	99000217 	ldw	r4,8(r19)
   24c58:	014003c4 	movi	r5,15
   24c5c:	1107c83a 	sub	r3,r2,r4
   24c60:	28ffdd0e 	bge	r5,r3,24bd8 <__alt_data_end+0xfffe4bd8>
   24c64:	014000f4 	movhi	r5,3
   24c68:	29448a04 	addi	r5,r5,4648
   24c6c:	29400017 	ldw	r5,0(r5)
   24c70:	18c00054 	ori	r3,r3,1
   24c74:	20c00115 	stw	r3,4(r4)
   24c78:	00c000f4 	movhi	r3,3
   24c7c:	1145c83a 	sub	r2,r2,r5
   24c80:	18cb6004 	addi	r3,r3,11648
   24c84:	18800015 	stw	r2,0(r3)
   24c88:	003fd306 	br	24bd8 <__alt_data_end+0xfffe4bd8>

00024c8c <_free_r>:
   24c8c:	28004126 	beq	r5,zero,24d94 <_free_r+0x108>
   24c90:	defffd04 	addi	sp,sp,-12
   24c94:	dc400115 	stw	r17,4(sp)
   24c98:	dc000015 	stw	r16,0(sp)
   24c9c:	2023883a 	mov	r17,r4
   24ca0:	2821883a 	mov	r16,r5
   24ca4:	dfc00215 	stw	ra,8(sp)
   24ca8:	002d5380 	call	2d538 <__malloc_lock>
   24cac:	81ffff17 	ldw	r7,-4(r16)
   24cb0:	00bfff84 	movi	r2,-2
   24cb4:	010000f4 	movhi	r4,3
   24cb8:	81bffe04 	addi	r6,r16,-8
   24cbc:	3884703a 	and	r2,r7,r2
   24cc0:	213f0304 	addi	r4,r4,-1012
   24cc4:	308b883a 	add	r5,r6,r2
   24cc8:	2a400117 	ldw	r9,4(r5)
   24ccc:	22000217 	ldw	r8,8(r4)
   24cd0:	00ffff04 	movi	r3,-4
   24cd4:	48c6703a 	and	r3,r9,r3
   24cd8:	2a005726 	beq	r5,r8,24e38 <_free_r+0x1ac>
   24cdc:	28c00115 	stw	r3,4(r5)
   24ce0:	39c0004c 	andi	r7,r7,1
   24ce4:	3800091e 	bne	r7,zero,24d0c <_free_r+0x80>
   24ce8:	823ffe17 	ldw	r8,-8(r16)
   24cec:	22400204 	addi	r9,r4,8
   24cf0:	320dc83a 	sub	r6,r6,r8
   24cf4:	31c00217 	ldw	r7,8(r6)
   24cf8:	1205883a 	add	r2,r2,r8
   24cfc:	3a406526 	beq	r7,r9,24e94 <_free_r+0x208>
   24d00:	32000317 	ldw	r8,12(r6)
   24d04:	3a000315 	stw	r8,12(r7)
   24d08:	41c00215 	stw	r7,8(r8)
   24d0c:	28cf883a 	add	r7,r5,r3
   24d10:	39c00117 	ldw	r7,4(r7)
   24d14:	39c0004c 	andi	r7,r7,1
   24d18:	38003a26 	beq	r7,zero,24e04 <_free_r+0x178>
   24d1c:	10c00054 	ori	r3,r2,1
   24d20:	30c00115 	stw	r3,4(r6)
   24d24:	3087883a 	add	r3,r6,r2
   24d28:	18800015 	stw	r2,0(r3)
   24d2c:	00c07fc4 	movi	r3,511
   24d30:	18801936 	bltu	r3,r2,24d98 <_free_r+0x10c>
   24d34:	1004d0fa 	srli	r2,r2,3
   24d38:	01c00044 	movi	r7,1
   24d3c:	21400117 	ldw	r5,4(r4)
   24d40:	10c00044 	addi	r3,r2,1
   24d44:	18c7883a 	add	r3,r3,r3
   24d48:	1005d0ba 	srai	r2,r2,2
   24d4c:	18c7883a 	add	r3,r3,r3
   24d50:	18c7883a 	add	r3,r3,r3
   24d54:	1907883a 	add	r3,r3,r4
   24d58:	3884983a 	sll	r2,r7,r2
   24d5c:	19c00017 	ldw	r7,0(r3)
   24d60:	1a3ffe04 	addi	r8,r3,-8
   24d64:	1144b03a 	or	r2,r2,r5
   24d68:	32000315 	stw	r8,12(r6)
   24d6c:	31c00215 	stw	r7,8(r6)
   24d70:	20800115 	stw	r2,4(r4)
   24d74:	19800015 	stw	r6,0(r3)
   24d78:	39800315 	stw	r6,12(r7)
   24d7c:	8809883a 	mov	r4,r17
   24d80:	dfc00217 	ldw	ra,8(sp)
   24d84:	dc400117 	ldw	r17,4(sp)
   24d88:	dc000017 	ldw	r16,0(sp)
   24d8c:	dec00304 	addi	sp,sp,12
   24d90:	002d55c1 	jmpi	2d55c <__malloc_unlock>
   24d94:	f800283a 	ret
   24d98:	100ad27a 	srli	r5,r2,9
   24d9c:	00c00104 	movi	r3,4
   24da0:	19404a36 	bltu	r3,r5,24ecc <_free_r+0x240>
   24da4:	100ad1ba 	srli	r5,r2,6
   24da8:	28c00e44 	addi	r3,r5,57
   24dac:	18c7883a 	add	r3,r3,r3
   24db0:	29400e04 	addi	r5,r5,56
   24db4:	18c7883a 	add	r3,r3,r3
   24db8:	18c7883a 	add	r3,r3,r3
   24dbc:	1909883a 	add	r4,r3,r4
   24dc0:	20c00017 	ldw	r3,0(r4)
   24dc4:	01c000f4 	movhi	r7,3
   24dc8:	213ffe04 	addi	r4,r4,-8
   24dcc:	39ff0304 	addi	r7,r7,-1012
   24dd0:	20c04426 	beq	r4,r3,24ee4 <_free_r+0x258>
   24dd4:	01ffff04 	movi	r7,-4
   24dd8:	19400117 	ldw	r5,4(r3)
   24ddc:	29ca703a 	and	r5,r5,r7
   24de0:	1140022e 	bgeu	r2,r5,24dec <_free_r+0x160>
   24de4:	18c00217 	ldw	r3,8(r3)
   24de8:	20fffb1e 	bne	r4,r3,24dd8 <__alt_data_end+0xfffe4dd8>
   24dec:	19000317 	ldw	r4,12(r3)
   24df0:	31000315 	stw	r4,12(r6)
   24df4:	30c00215 	stw	r3,8(r6)
   24df8:	21800215 	stw	r6,8(r4)
   24dfc:	19800315 	stw	r6,12(r3)
   24e00:	003fde06 	br	24d7c <__alt_data_end+0xfffe4d7c>
   24e04:	29c00217 	ldw	r7,8(r5)
   24e08:	10c5883a 	add	r2,r2,r3
   24e0c:	00c000f4 	movhi	r3,3
   24e10:	18ff0504 	addi	r3,r3,-1004
   24e14:	38c03b26 	beq	r7,r3,24f04 <_free_r+0x278>
   24e18:	2a000317 	ldw	r8,12(r5)
   24e1c:	11400054 	ori	r5,r2,1
   24e20:	3087883a 	add	r3,r6,r2
   24e24:	3a000315 	stw	r8,12(r7)
   24e28:	41c00215 	stw	r7,8(r8)
   24e2c:	31400115 	stw	r5,4(r6)
   24e30:	18800015 	stw	r2,0(r3)
   24e34:	003fbd06 	br	24d2c <__alt_data_end+0xfffe4d2c>
   24e38:	39c0004c 	andi	r7,r7,1
   24e3c:	10c5883a 	add	r2,r2,r3
   24e40:	3800071e 	bne	r7,zero,24e60 <_free_r+0x1d4>
   24e44:	81fffe17 	ldw	r7,-8(r16)
   24e48:	31cdc83a 	sub	r6,r6,r7
   24e4c:	30c00317 	ldw	r3,12(r6)
   24e50:	31400217 	ldw	r5,8(r6)
   24e54:	11c5883a 	add	r2,r2,r7
   24e58:	28c00315 	stw	r3,12(r5)
   24e5c:	19400215 	stw	r5,8(r3)
   24e60:	10c00054 	ori	r3,r2,1
   24e64:	30c00115 	stw	r3,4(r6)
   24e68:	00c000f4 	movhi	r3,3
   24e6c:	18c48b04 	addi	r3,r3,4652
   24e70:	18c00017 	ldw	r3,0(r3)
   24e74:	21800215 	stw	r6,8(r4)
   24e78:	10ffc036 	bltu	r2,r3,24d7c <__alt_data_end+0xfffe4d7c>
   24e7c:	008000f4 	movhi	r2,3
   24e80:	108b5704 	addi	r2,r2,11612
   24e84:	11400017 	ldw	r5,0(r2)
   24e88:	8809883a 	mov	r4,r17
   24e8c:	0024b680 	call	24b68 <_malloc_trim_r>
   24e90:	003fba06 	br	24d7c <__alt_data_end+0xfffe4d7c>
   24e94:	28c9883a 	add	r4,r5,r3
   24e98:	21000117 	ldw	r4,4(r4)
   24e9c:	2100004c 	andi	r4,r4,1
   24ea0:	2000391e 	bne	r4,zero,24f88 <_free_r+0x2fc>
   24ea4:	29c00217 	ldw	r7,8(r5)
   24ea8:	29000317 	ldw	r4,12(r5)
   24eac:	1885883a 	add	r2,r3,r2
   24eb0:	10c00054 	ori	r3,r2,1
   24eb4:	39000315 	stw	r4,12(r7)
   24eb8:	21c00215 	stw	r7,8(r4)
   24ebc:	30c00115 	stw	r3,4(r6)
   24ec0:	308d883a 	add	r6,r6,r2
   24ec4:	30800015 	stw	r2,0(r6)
   24ec8:	003fac06 	br	24d7c <__alt_data_end+0xfffe4d7c>
   24ecc:	00c00504 	movi	r3,20
   24ed0:	19401536 	bltu	r3,r5,24f28 <_free_r+0x29c>
   24ed4:	28c01704 	addi	r3,r5,92
   24ed8:	18c7883a 	add	r3,r3,r3
   24edc:	294016c4 	addi	r5,r5,91
   24ee0:	003fb406 	br	24db4 <__alt_data_end+0xfffe4db4>
   24ee4:	280bd0ba 	srai	r5,r5,2
   24ee8:	00c00044 	movi	r3,1
   24eec:	38800117 	ldw	r2,4(r7)
   24ef0:	194a983a 	sll	r5,r3,r5
   24ef4:	2007883a 	mov	r3,r4
   24ef8:	2884b03a 	or	r2,r5,r2
   24efc:	38800115 	stw	r2,4(r7)
   24f00:	003fbb06 	br	24df0 <__alt_data_end+0xfffe4df0>
   24f04:	21800515 	stw	r6,20(r4)
   24f08:	21800415 	stw	r6,16(r4)
   24f0c:	10c00054 	ori	r3,r2,1
   24f10:	31c00315 	stw	r7,12(r6)
   24f14:	31c00215 	stw	r7,8(r6)
   24f18:	30c00115 	stw	r3,4(r6)
   24f1c:	308d883a 	add	r6,r6,r2
   24f20:	30800015 	stw	r2,0(r6)
   24f24:	003f9506 	br	24d7c <__alt_data_end+0xfffe4d7c>
   24f28:	00c01504 	movi	r3,84
   24f2c:	19400536 	bltu	r3,r5,24f44 <_free_r+0x2b8>
   24f30:	100ad33a 	srli	r5,r2,12
   24f34:	28c01bc4 	addi	r3,r5,111
   24f38:	18c7883a 	add	r3,r3,r3
   24f3c:	29401b84 	addi	r5,r5,110
   24f40:	003f9c06 	br	24db4 <__alt_data_end+0xfffe4db4>
   24f44:	00c05504 	movi	r3,340
   24f48:	19400536 	bltu	r3,r5,24f60 <_free_r+0x2d4>
   24f4c:	100ad3fa 	srli	r5,r2,15
   24f50:	28c01e04 	addi	r3,r5,120
   24f54:	18c7883a 	add	r3,r3,r3
   24f58:	29401dc4 	addi	r5,r5,119
   24f5c:	003f9506 	br	24db4 <__alt_data_end+0xfffe4db4>
   24f60:	00c15504 	movi	r3,1364
   24f64:	19400536 	bltu	r3,r5,24f7c <_free_r+0x2f0>
   24f68:	100ad4ba 	srli	r5,r2,18
   24f6c:	28c01f44 	addi	r3,r5,125
   24f70:	18c7883a 	add	r3,r3,r3
   24f74:	29401f04 	addi	r5,r5,124
   24f78:	003f8e06 	br	24db4 <__alt_data_end+0xfffe4db4>
   24f7c:	00c03f84 	movi	r3,254
   24f80:	01401f84 	movi	r5,126
   24f84:	003f8b06 	br	24db4 <__alt_data_end+0xfffe4db4>
   24f88:	10c00054 	ori	r3,r2,1
   24f8c:	30c00115 	stw	r3,4(r6)
   24f90:	308d883a 	add	r6,r6,r2
   24f94:	30800015 	stw	r2,0(r6)
   24f98:	003f7806 	br	24d7c <__alt_data_end+0xfffe4d7c>

00024f9c <__sfvwrite_r>:
   24f9c:	30800217 	ldw	r2,8(r6)
   24fa0:	10006726 	beq	r2,zero,25140 <__sfvwrite_r+0x1a4>
   24fa4:	28c0030b 	ldhu	r3,12(r5)
   24fa8:	defff404 	addi	sp,sp,-48
   24fac:	dd400715 	stw	r21,28(sp)
   24fb0:	dd000615 	stw	r20,24(sp)
   24fb4:	dc000215 	stw	r16,8(sp)
   24fb8:	dfc00b15 	stw	ra,44(sp)
   24fbc:	df000a15 	stw	fp,40(sp)
   24fc0:	ddc00915 	stw	r23,36(sp)
   24fc4:	dd800815 	stw	r22,32(sp)
   24fc8:	dcc00515 	stw	r19,20(sp)
   24fcc:	dc800415 	stw	r18,16(sp)
   24fd0:	dc400315 	stw	r17,12(sp)
   24fd4:	1880020c 	andi	r2,r3,8
   24fd8:	2821883a 	mov	r16,r5
   24fdc:	202b883a 	mov	r21,r4
   24fe0:	3029883a 	mov	r20,r6
   24fe4:	10002726 	beq	r2,zero,25084 <__sfvwrite_r+0xe8>
   24fe8:	28800417 	ldw	r2,16(r5)
   24fec:	10002526 	beq	r2,zero,25084 <__sfvwrite_r+0xe8>
   24ff0:	1880008c 	andi	r2,r3,2
   24ff4:	a4400017 	ldw	r17,0(r20)
   24ff8:	10002a26 	beq	r2,zero,250a4 <__sfvwrite_r+0x108>
   24ffc:	05a00034 	movhi	r22,32768
   25000:	0027883a 	mov	r19,zero
   25004:	0025883a 	mov	r18,zero
   25008:	b5bf0004 	addi	r22,r22,-1024
   2500c:	980d883a 	mov	r6,r19
   25010:	a809883a 	mov	r4,r21
   25014:	90004626 	beq	r18,zero,25130 <__sfvwrite_r+0x194>
   25018:	900f883a 	mov	r7,r18
   2501c:	b480022e 	bgeu	r22,r18,25028 <__sfvwrite_r+0x8c>
   25020:	01e00034 	movhi	r7,32768
   25024:	39ff0004 	addi	r7,r7,-1024
   25028:	80800917 	ldw	r2,36(r16)
   2502c:	81400717 	ldw	r5,28(r16)
   25030:	103ee83a 	callr	r2
   25034:	0080570e 	bge	zero,r2,25194 <__sfvwrite_r+0x1f8>
   25038:	a0c00217 	ldw	r3,8(r20)
   2503c:	98a7883a 	add	r19,r19,r2
   25040:	90a5c83a 	sub	r18,r18,r2
   25044:	1885c83a 	sub	r2,r3,r2
   25048:	a0800215 	stw	r2,8(r20)
   2504c:	103fef1e 	bne	r2,zero,2500c <__alt_data_end+0xfffe500c>
   25050:	0005883a 	mov	r2,zero
   25054:	dfc00b17 	ldw	ra,44(sp)
   25058:	df000a17 	ldw	fp,40(sp)
   2505c:	ddc00917 	ldw	r23,36(sp)
   25060:	dd800817 	ldw	r22,32(sp)
   25064:	dd400717 	ldw	r21,28(sp)
   25068:	dd000617 	ldw	r20,24(sp)
   2506c:	dcc00517 	ldw	r19,20(sp)
   25070:	dc800417 	ldw	r18,16(sp)
   25074:	dc400317 	ldw	r17,12(sp)
   25078:	dc000217 	ldw	r16,8(sp)
   2507c:	dec00c04 	addi	sp,sp,48
   25080:	f800283a 	ret
   25084:	800b883a 	mov	r5,r16
   25088:	a809883a 	mov	r4,r21
   2508c:	0022b440 	call	22b44 <__swsetup_r>
   25090:	1000eb1e 	bne	r2,zero,25440 <__sfvwrite_r+0x4a4>
   25094:	80c0030b 	ldhu	r3,12(r16)
   25098:	a4400017 	ldw	r17,0(r20)
   2509c:	1880008c 	andi	r2,r3,2
   250a0:	103fd61e 	bne	r2,zero,24ffc <__alt_data_end+0xfffe4ffc>
   250a4:	1880004c 	andi	r2,r3,1
   250a8:	10003f1e 	bne	r2,zero,251a8 <__sfvwrite_r+0x20c>
   250ac:	0039883a 	mov	fp,zero
   250b0:	0025883a 	mov	r18,zero
   250b4:	90001a26 	beq	r18,zero,25120 <__sfvwrite_r+0x184>
   250b8:	1880800c 	andi	r2,r3,512
   250bc:	84c00217 	ldw	r19,8(r16)
   250c0:	10002126 	beq	r2,zero,25148 <__sfvwrite_r+0x1ac>
   250c4:	982f883a 	mov	r23,r19
   250c8:	94c09336 	bltu	r18,r19,25318 <__sfvwrite_r+0x37c>
   250cc:	1881200c 	andi	r2,r3,1152
   250d0:	10009e1e 	bne	r2,zero,2534c <__sfvwrite_r+0x3b0>
   250d4:	81000017 	ldw	r4,0(r16)
   250d8:	b80d883a 	mov	r6,r23
   250dc:	e00b883a 	mov	r5,fp
   250e0:	00262b00 	call	262b0 <memmove>
   250e4:	80c00217 	ldw	r3,8(r16)
   250e8:	81000017 	ldw	r4,0(r16)
   250ec:	9005883a 	mov	r2,r18
   250f0:	1ce7c83a 	sub	r19,r3,r19
   250f4:	25cf883a 	add	r7,r4,r23
   250f8:	84c00215 	stw	r19,8(r16)
   250fc:	81c00015 	stw	r7,0(r16)
   25100:	a0c00217 	ldw	r3,8(r20)
   25104:	e0b9883a 	add	fp,fp,r2
   25108:	90a5c83a 	sub	r18,r18,r2
   2510c:	18a7c83a 	sub	r19,r3,r2
   25110:	a4c00215 	stw	r19,8(r20)
   25114:	983fce26 	beq	r19,zero,25050 <__alt_data_end+0xfffe5050>
   25118:	80c0030b 	ldhu	r3,12(r16)
   2511c:	903fe61e 	bne	r18,zero,250b8 <__alt_data_end+0xfffe50b8>
   25120:	8f000017 	ldw	fp,0(r17)
   25124:	8c800117 	ldw	r18,4(r17)
   25128:	8c400204 	addi	r17,r17,8
   2512c:	003fe106 	br	250b4 <__alt_data_end+0xfffe50b4>
   25130:	8cc00017 	ldw	r19,0(r17)
   25134:	8c800117 	ldw	r18,4(r17)
   25138:	8c400204 	addi	r17,r17,8
   2513c:	003fb306 	br	2500c <__alt_data_end+0xfffe500c>
   25140:	0005883a 	mov	r2,zero
   25144:	f800283a 	ret
   25148:	81000017 	ldw	r4,0(r16)
   2514c:	80800417 	ldw	r2,16(r16)
   25150:	11005736 	bltu	r2,r4,252b0 <__sfvwrite_r+0x314>
   25154:	85c00517 	ldw	r23,20(r16)
   25158:	95c05536 	bltu	r18,r23,252b0 <__sfvwrite_r+0x314>
   2515c:	00a00034 	movhi	r2,32768
   25160:	10bfffc4 	addi	r2,r2,-1
   25164:	9009883a 	mov	r4,r18
   25168:	1480012e 	bgeu	r2,r18,25170 <__sfvwrite_r+0x1d4>
   2516c:	1009883a 	mov	r4,r2
   25170:	b80b883a 	mov	r5,r23
   25174:	002a7a00 	call	2a7a0 <__divsi3>
   25178:	15cf383a 	mul	r7,r2,r23
   2517c:	81400717 	ldw	r5,28(r16)
   25180:	80800917 	ldw	r2,36(r16)
   25184:	e00d883a 	mov	r6,fp
   25188:	a809883a 	mov	r4,r21
   2518c:	103ee83a 	callr	r2
   25190:	00bfdb16 	blt	zero,r2,25100 <__alt_data_end+0xfffe5100>
   25194:	8080030b 	ldhu	r2,12(r16)
   25198:	10801014 	ori	r2,r2,64
   2519c:	8080030d 	sth	r2,12(r16)
   251a0:	00bfffc4 	movi	r2,-1
   251a4:	003fab06 	br	25054 <__alt_data_end+0xfffe5054>
   251a8:	0027883a 	mov	r19,zero
   251ac:	0011883a 	mov	r8,zero
   251b0:	0039883a 	mov	fp,zero
   251b4:	0025883a 	mov	r18,zero
   251b8:	90001f26 	beq	r18,zero,25238 <__sfvwrite_r+0x29c>
   251bc:	40005a26 	beq	r8,zero,25328 <__sfvwrite_r+0x38c>
   251c0:	982d883a 	mov	r22,r19
   251c4:	94c0012e 	bgeu	r18,r19,251cc <__sfvwrite_r+0x230>
   251c8:	902d883a 	mov	r22,r18
   251cc:	81000017 	ldw	r4,0(r16)
   251d0:	80800417 	ldw	r2,16(r16)
   251d4:	b02f883a 	mov	r23,r22
   251d8:	81c00517 	ldw	r7,20(r16)
   251dc:	1100032e 	bgeu	r2,r4,251ec <__sfvwrite_r+0x250>
   251e0:	80c00217 	ldw	r3,8(r16)
   251e4:	38c7883a 	add	r3,r7,r3
   251e8:	1d801816 	blt	r3,r22,2524c <__sfvwrite_r+0x2b0>
   251ec:	b1c03e16 	blt	r22,r7,252e8 <__sfvwrite_r+0x34c>
   251f0:	80800917 	ldw	r2,36(r16)
   251f4:	81400717 	ldw	r5,28(r16)
   251f8:	e00d883a 	mov	r6,fp
   251fc:	da000115 	stw	r8,4(sp)
   25200:	a809883a 	mov	r4,r21
   25204:	103ee83a 	callr	r2
   25208:	102f883a 	mov	r23,r2
   2520c:	da000117 	ldw	r8,4(sp)
   25210:	00bfe00e 	bge	zero,r2,25194 <__alt_data_end+0xfffe5194>
   25214:	9de7c83a 	sub	r19,r19,r23
   25218:	98001f26 	beq	r19,zero,25298 <__sfvwrite_r+0x2fc>
   2521c:	a0800217 	ldw	r2,8(r20)
   25220:	e5f9883a 	add	fp,fp,r23
   25224:	95e5c83a 	sub	r18,r18,r23
   25228:	15efc83a 	sub	r23,r2,r23
   2522c:	a5c00215 	stw	r23,8(r20)
   25230:	b83f8726 	beq	r23,zero,25050 <__alt_data_end+0xfffe5050>
   25234:	903fe11e 	bne	r18,zero,251bc <__alt_data_end+0xfffe51bc>
   25238:	8f000017 	ldw	fp,0(r17)
   2523c:	8c800117 	ldw	r18,4(r17)
   25240:	0011883a 	mov	r8,zero
   25244:	8c400204 	addi	r17,r17,8
   25248:	003fdb06 	br	251b8 <__alt_data_end+0xfffe51b8>
   2524c:	180d883a 	mov	r6,r3
   25250:	e00b883a 	mov	r5,fp
   25254:	da000115 	stw	r8,4(sp)
   25258:	d8c00015 	stw	r3,0(sp)
   2525c:	00262b00 	call	262b0 <memmove>
   25260:	d8c00017 	ldw	r3,0(sp)
   25264:	80800017 	ldw	r2,0(r16)
   25268:	800b883a 	mov	r5,r16
   2526c:	a809883a 	mov	r4,r21
   25270:	10c5883a 	add	r2,r2,r3
   25274:	80800015 	stw	r2,0(r16)
   25278:	d8c00015 	stw	r3,0(sp)
   2527c:	002473c0 	call	2473c <_fflush_r>
   25280:	d8c00017 	ldw	r3,0(sp)
   25284:	da000117 	ldw	r8,4(sp)
   25288:	103fc21e 	bne	r2,zero,25194 <__alt_data_end+0xfffe5194>
   2528c:	182f883a 	mov	r23,r3
   25290:	9de7c83a 	sub	r19,r19,r23
   25294:	983fe11e 	bne	r19,zero,2521c <__alt_data_end+0xfffe521c>
   25298:	800b883a 	mov	r5,r16
   2529c:	a809883a 	mov	r4,r21
   252a0:	002473c0 	call	2473c <_fflush_r>
   252a4:	103fbb1e 	bne	r2,zero,25194 <__alt_data_end+0xfffe5194>
   252a8:	0011883a 	mov	r8,zero
   252ac:	003fdb06 	br	2521c <__alt_data_end+0xfffe521c>
   252b0:	94c0012e 	bgeu	r18,r19,252b8 <__sfvwrite_r+0x31c>
   252b4:	9027883a 	mov	r19,r18
   252b8:	980d883a 	mov	r6,r19
   252bc:	e00b883a 	mov	r5,fp
   252c0:	00262b00 	call	262b0 <memmove>
   252c4:	80800217 	ldw	r2,8(r16)
   252c8:	80c00017 	ldw	r3,0(r16)
   252cc:	14c5c83a 	sub	r2,r2,r19
   252d0:	1cc7883a 	add	r3,r3,r19
   252d4:	80800215 	stw	r2,8(r16)
   252d8:	80c00015 	stw	r3,0(r16)
   252dc:	10004326 	beq	r2,zero,253ec <__sfvwrite_r+0x450>
   252e0:	9805883a 	mov	r2,r19
   252e4:	003f8606 	br	25100 <__alt_data_end+0xfffe5100>
   252e8:	b00d883a 	mov	r6,r22
   252ec:	e00b883a 	mov	r5,fp
   252f0:	da000115 	stw	r8,4(sp)
   252f4:	00262b00 	call	262b0 <memmove>
   252f8:	80800217 	ldw	r2,8(r16)
   252fc:	80c00017 	ldw	r3,0(r16)
   25300:	da000117 	ldw	r8,4(sp)
   25304:	1585c83a 	sub	r2,r2,r22
   25308:	1dad883a 	add	r22,r3,r22
   2530c:	80800215 	stw	r2,8(r16)
   25310:	85800015 	stw	r22,0(r16)
   25314:	003fbf06 	br	25214 <__alt_data_end+0xfffe5214>
   25318:	81000017 	ldw	r4,0(r16)
   2531c:	9027883a 	mov	r19,r18
   25320:	902f883a 	mov	r23,r18
   25324:	003f6c06 	br	250d8 <__alt_data_end+0xfffe50d8>
   25328:	900d883a 	mov	r6,r18
   2532c:	01400284 	movi	r5,10
   25330:	e009883a 	mov	r4,fp
   25334:	00260840 	call	26084 <memchr>
   25338:	10003e26 	beq	r2,zero,25434 <__sfvwrite_r+0x498>
   2533c:	10800044 	addi	r2,r2,1
   25340:	1727c83a 	sub	r19,r2,fp
   25344:	02000044 	movi	r8,1
   25348:	003f9d06 	br	251c0 <__alt_data_end+0xfffe51c0>
   2534c:	80800517 	ldw	r2,20(r16)
   25350:	81400417 	ldw	r5,16(r16)
   25354:	81c00017 	ldw	r7,0(r16)
   25358:	10a7883a 	add	r19,r2,r2
   2535c:	9885883a 	add	r2,r19,r2
   25360:	1026d7fa 	srli	r19,r2,31
   25364:	396dc83a 	sub	r22,r7,r5
   25368:	b1000044 	addi	r4,r22,1
   2536c:	9885883a 	add	r2,r19,r2
   25370:	1027d07a 	srai	r19,r2,1
   25374:	2485883a 	add	r2,r4,r18
   25378:	980d883a 	mov	r6,r19
   2537c:	9880022e 	bgeu	r19,r2,25388 <__sfvwrite_r+0x3ec>
   25380:	1027883a 	mov	r19,r2
   25384:	100d883a 	mov	r6,r2
   25388:	18c1000c 	andi	r3,r3,1024
   2538c:	18001c26 	beq	r3,zero,25400 <__sfvwrite_r+0x464>
   25390:	300b883a 	mov	r5,r6
   25394:	a809883a 	mov	r4,r21
   25398:	00258780 	call	25878 <_malloc_r>
   2539c:	102f883a 	mov	r23,r2
   253a0:	10002926 	beq	r2,zero,25448 <__sfvwrite_r+0x4ac>
   253a4:	81400417 	ldw	r5,16(r16)
   253a8:	b00d883a 	mov	r6,r22
   253ac:	1009883a 	mov	r4,r2
   253b0:	00261680 	call	26168 <memcpy>
   253b4:	8080030b 	ldhu	r2,12(r16)
   253b8:	00fedfc4 	movi	r3,-1153
   253bc:	10c4703a 	and	r2,r2,r3
   253c0:	10802014 	ori	r2,r2,128
   253c4:	8080030d 	sth	r2,12(r16)
   253c8:	bd89883a 	add	r4,r23,r22
   253cc:	9d8fc83a 	sub	r7,r19,r22
   253d0:	85c00415 	stw	r23,16(r16)
   253d4:	84c00515 	stw	r19,20(r16)
   253d8:	81000015 	stw	r4,0(r16)
   253dc:	9027883a 	mov	r19,r18
   253e0:	81c00215 	stw	r7,8(r16)
   253e4:	902f883a 	mov	r23,r18
   253e8:	003f3b06 	br	250d8 <__alt_data_end+0xfffe50d8>
   253ec:	800b883a 	mov	r5,r16
   253f0:	a809883a 	mov	r4,r21
   253f4:	002473c0 	call	2473c <_fflush_r>
   253f8:	103fb926 	beq	r2,zero,252e0 <__alt_data_end+0xfffe52e0>
   253fc:	003f6506 	br	25194 <__alt_data_end+0xfffe5194>
   25400:	a809883a 	mov	r4,r21
   25404:	00275300 	call	27530 <_realloc_r>
   25408:	102f883a 	mov	r23,r2
   2540c:	103fee1e 	bne	r2,zero,253c8 <__alt_data_end+0xfffe53c8>
   25410:	81400417 	ldw	r5,16(r16)
   25414:	a809883a 	mov	r4,r21
   25418:	0024c8c0 	call	24c8c <_free_r>
   2541c:	8080030b 	ldhu	r2,12(r16)
   25420:	00ffdfc4 	movi	r3,-129
   25424:	1884703a 	and	r2,r3,r2
   25428:	00c00304 	movi	r3,12
   2542c:	a8c00015 	stw	r3,0(r21)
   25430:	003f5906 	br	25198 <__alt_data_end+0xfffe5198>
   25434:	94c00044 	addi	r19,r18,1
   25438:	02000044 	movi	r8,1
   2543c:	003f6006 	br	251c0 <__alt_data_end+0xfffe51c0>
   25440:	00bfffc4 	movi	r2,-1
   25444:	003f0306 	br	25054 <__alt_data_end+0xfffe5054>
   25448:	00800304 	movi	r2,12
   2544c:	a8800015 	stw	r2,0(r21)
   25450:	8080030b 	ldhu	r2,12(r16)
   25454:	003f5006 	br	25198 <__alt_data_end+0xfffe5198>

00025458 <_fwalk>:
   25458:	defff704 	addi	sp,sp,-36
   2545c:	dd000415 	stw	r20,16(sp)
   25460:	dfc00815 	stw	ra,32(sp)
   25464:	ddc00715 	stw	r23,28(sp)
   25468:	dd800615 	stw	r22,24(sp)
   2546c:	dd400515 	stw	r21,20(sp)
   25470:	dcc00315 	stw	r19,12(sp)
   25474:	dc800215 	stw	r18,8(sp)
   25478:	dc400115 	stw	r17,4(sp)
   2547c:	dc000015 	stw	r16,0(sp)
   25480:	2500b804 	addi	r20,r4,736
   25484:	a0002326 	beq	r20,zero,25514 <_fwalk+0xbc>
   25488:	282b883a 	mov	r21,r5
   2548c:	002f883a 	mov	r23,zero
   25490:	05800044 	movi	r22,1
   25494:	04ffffc4 	movi	r19,-1
   25498:	a4400117 	ldw	r17,4(r20)
   2549c:	a4800217 	ldw	r18,8(r20)
   254a0:	8c7fffc4 	addi	r17,r17,-1
   254a4:	88000d16 	blt	r17,zero,254dc <_fwalk+0x84>
   254a8:	94000304 	addi	r16,r18,12
   254ac:	94800384 	addi	r18,r18,14
   254b0:	8080000b 	ldhu	r2,0(r16)
   254b4:	8c7fffc4 	addi	r17,r17,-1
   254b8:	813ffd04 	addi	r4,r16,-12
   254bc:	b080042e 	bgeu	r22,r2,254d0 <_fwalk+0x78>
   254c0:	9080000f 	ldh	r2,0(r18)
   254c4:	14c00226 	beq	r2,r19,254d0 <_fwalk+0x78>
   254c8:	a83ee83a 	callr	r21
   254cc:	b8aeb03a 	or	r23,r23,r2
   254d0:	84001a04 	addi	r16,r16,104
   254d4:	94801a04 	addi	r18,r18,104
   254d8:	8cfff51e 	bne	r17,r19,254b0 <__alt_data_end+0xfffe54b0>
   254dc:	a5000017 	ldw	r20,0(r20)
   254e0:	a03fed1e 	bne	r20,zero,25498 <__alt_data_end+0xfffe5498>
   254e4:	b805883a 	mov	r2,r23
   254e8:	dfc00817 	ldw	ra,32(sp)
   254ec:	ddc00717 	ldw	r23,28(sp)
   254f0:	dd800617 	ldw	r22,24(sp)
   254f4:	dd400517 	ldw	r21,20(sp)
   254f8:	dd000417 	ldw	r20,16(sp)
   254fc:	dcc00317 	ldw	r19,12(sp)
   25500:	dc800217 	ldw	r18,8(sp)
   25504:	dc400117 	ldw	r17,4(sp)
   25508:	dc000017 	ldw	r16,0(sp)
   2550c:	dec00904 	addi	sp,sp,36
   25510:	f800283a 	ret
   25514:	002f883a 	mov	r23,zero
   25518:	003ff206 	br	254e4 <__alt_data_end+0xfffe54e4>

0002551c <_fwalk_reent>:
   2551c:	defff704 	addi	sp,sp,-36
   25520:	dd000415 	stw	r20,16(sp)
   25524:	dfc00815 	stw	ra,32(sp)
   25528:	ddc00715 	stw	r23,28(sp)
   2552c:	dd800615 	stw	r22,24(sp)
   25530:	dd400515 	stw	r21,20(sp)
   25534:	dcc00315 	stw	r19,12(sp)
   25538:	dc800215 	stw	r18,8(sp)
   2553c:	dc400115 	stw	r17,4(sp)
   25540:	dc000015 	stw	r16,0(sp)
   25544:	2500b804 	addi	r20,r4,736
   25548:	a0002326 	beq	r20,zero,255d8 <_fwalk_reent+0xbc>
   2554c:	282b883a 	mov	r21,r5
   25550:	2027883a 	mov	r19,r4
   25554:	002f883a 	mov	r23,zero
   25558:	05800044 	movi	r22,1
   2555c:	04bfffc4 	movi	r18,-1
   25560:	a4400117 	ldw	r17,4(r20)
   25564:	a4000217 	ldw	r16,8(r20)
   25568:	8c7fffc4 	addi	r17,r17,-1
   2556c:	88000c16 	blt	r17,zero,255a0 <_fwalk_reent+0x84>
   25570:	84000304 	addi	r16,r16,12
   25574:	8080000b 	ldhu	r2,0(r16)
   25578:	8c7fffc4 	addi	r17,r17,-1
   2557c:	817ffd04 	addi	r5,r16,-12
   25580:	b080052e 	bgeu	r22,r2,25598 <_fwalk_reent+0x7c>
   25584:	8080008f 	ldh	r2,2(r16)
   25588:	9809883a 	mov	r4,r19
   2558c:	14800226 	beq	r2,r18,25598 <_fwalk_reent+0x7c>
   25590:	a83ee83a 	callr	r21
   25594:	b8aeb03a 	or	r23,r23,r2
   25598:	84001a04 	addi	r16,r16,104
   2559c:	8cbff51e 	bne	r17,r18,25574 <__alt_data_end+0xfffe5574>
   255a0:	a5000017 	ldw	r20,0(r20)
   255a4:	a03fee1e 	bne	r20,zero,25560 <__alt_data_end+0xfffe5560>
   255a8:	b805883a 	mov	r2,r23
   255ac:	dfc00817 	ldw	ra,32(sp)
   255b0:	ddc00717 	ldw	r23,28(sp)
   255b4:	dd800617 	ldw	r22,24(sp)
   255b8:	dd400517 	ldw	r21,20(sp)
   255bc:	dd000417 	ldw	r20,16(sp)
   255c0:	dcc00317 	ldw	r19,12(sp)
   255c4:	dc800217 	ldw	r18,8(sp)
   255c8:	dc400117 	ldw	r17,4(sp)
   255cc:	dc000017 	ldw	r16,0(sp)
   255d0:	dec00904 	addi	sp,sp,36
   255d4:	f800283a 	ret
   255d8:	002f883a 	mov	r23,zero
   255dc:	003ff206 	br	255a8 <__alt_data_end+0xfffe55a8>

000255e0 <_setlocale_r>:
   255e0:	30001b26 	beq	r6,zero,25650 <_setlocale_r+0x70>
   255e4:	014000f4 	movhi	r5,3
   255e8:	defffe04 	addi	sp,sp,-8
   255ec:	297d3b04 	addi	r5,r5,-2836
   255f0:	3009883a 	mov	r4,r6
   255f4:	dc000015 	stw	r16,0(sp)
   255f8:	dfc00115 	stw	ra,4(sp)
   255fc:	3021883a 	mov	r16,r6
   25600:	0027c980 	call	27c98 <strcmp>
   25604:	1000061e 	bne	r2,zero,25620 <_setlocale_r+0x40>
   25608:	008000f4 	movhi	r2,3
   2560c:	10bd3a04 	addi	r2,r2,-2840
   25610:	dfc00117 	ldw	ra,4(sp)
   25614:	dc000017 	ldw	r16,0(sp)
   25618:	dec00204 	addi	sp,sp,8
   2561c:	f800283a 	ret
   25620:	014000f4 	movhi	r5,3
   25624:	297d3a04 	addi	r5,r5,-2840
   25628:	8009883a 	mov	r4,r16
   2562c:	0027c980 	call	27c98 <strcmp>
   25630:	103ff526 	beq	r2,zero,25608 <__alt_data_end+0xfffe5608>
   25634:	014000f4 	movhi	r5,3
   25638:	297d2504 	addi	r5,r5,-2924
   2563c:	8009883a 	mov	r4,r16
   25640:	0027c980 	call	27c98 <strcmp>
   25644:	103ff026 	beq	r2,zero,25608 <__alt_data_end+0xfffe5608>
   25648:	0005883a 	mov	r2,zero
   2564c:	003ff006 	br	25610 <__alt_data_end+0xfffe5610>
   25650:	008000f4 	movhi	r2,3
   25654:	10bd3a04 	addi	r2,r2,-2840
   25658:	f800283a 	ret

0002565c <__locale_charset>:
   2565c:	008000f4 	movhi	r2,3
   25660:	10beed04 	addi	r2,r2,-1100
   25664:	f800283a 	ret

00025668 <__locale_mb_cur_max>:
   25668:	008000f4 	movhi	r2,3
   2566c:	10848904 	addi	r2,r2,4644
   25670:	10800017 	ldw	r2,0(r2)
   25674:	f800283a 	ret

00025678 <__locale_msgcharset>:
   25678:	008000f4 	movhi	r2,3
   2567c:	10bee504 	addi	r2,r2,-1132
   25680:	f800283a 	ret

00025684 <__locale_cjk_lang>:
   25684:	0005883a 	mov	r2,zero
   25688:	f800283a 	ret

0002568c <_localeconv_r>:
   2568c:	008000f4 	movhi	r2,3
   25690:	10bef504 	addi	r2,r2,-1068
   25694:	f800283a 	ret

00025698 <setlocale>:
   25698:	008000f4 	movhi	r2,3
   2569c:	10848804 	addi	r2,r2,4640
   256a0:	280d883a 	mov	r6,r5
   256a4:	200b883a 	mov	r5,r4
   256a8:	11000017 	ldw	r4,0(r2)
   256ac:	00255e01 	jmpi	255e0 <_setlocale_r>

000256b0 <localeconv>:
   256b0:	008000f4 	movhi	r2,3
   256b4:	10bef504 	addi	r2,r2,-1068
   256b8:	f800283a 	ret

000256bc <__smakebuf_r>:
   256bc:	2880030b 	ldhu	r2,12(r5)
   256c0:	10c0008c 	andi	r3,r2,2
   256c4:	1800411e 	bne	r3,zero,257cc <__smakebuf_r+0x110>
   256c8:	deffec04 	addi	sp,sp,-80
   256cc:	dc000f15 	stw	r16,60(sp)
   256d0:	2821883a 	mov	r16,r5
   256d4:	2940038f 	ldh	r5,14(r5)
   256d8:	dc401015 	stw	r17,64(sp)
   256dc:	dfc01315 	stw	ra,76(sp)
   256e0:	dcc01215 	stw	r19,72(sp)
   256e4:	dc801115 	stw	r18,68(sp)
   256e8:	2023883a 	mov	r17,r4
   256ec:	28001c16 	blt	r5,zero,25760 <__smakebuf_r+0xa4>
   256f0:	d80d883a 	mov	r6,sp
   256f4:	00298400 	call	29840 <_fstat_r>
   256f8:	10001816 	blt	r2,zero,2575c <__smakebuf_r+0xa0>
   256fc:	d8800117 	ldw	r2,4(sp)
   25700:	00e00014 	movui	r3,32768
   25704:	10bc000c 	andi	r2,r2,61440
   25708:	14c80020 	cmpeqi	r19,r2,8192
   2570c:	10c03726 	beq	r2,r3,257ec <__smakebuf_r+0x130>
   25710:	80c0030b 	ldhu	r3,12(r16)
   25714:	18c20014 	ori	r3,r3,2048
   25718:	80c0030d 	sth	r3,12(r16)
   2571c:	00c80004 	movi	r3,8192
   25720:	10c0521e 	bne	r2,r3,2586c <__smakebuf_r+0x1b0>
   25724:	8140038f 	ldh	r5,14(r16)
   25728:	8809883a 	mov	r4,r17
   2572c:	002989c0 	call	2989c <_isatty_r>
   25730:	10004c26 	beq	r2,zero,25864 <__smakebuf_r+0x1a8>
   25734:	8080030b 	ldhu	r2,12(r16)
   25738:	80c010c4 	addi	r3,r16,67
   2573c:	80c00015 	stw	r3,0(r16)
   25740:	10800054 	ori	r2,r2,1
   25744:	8080030d 	sth	r2,12(r16)
   25748:	00800044 	movi	r2,1
   2574c:	80c00415 	stw	r3,16(r16)
   25750:	80800515 	stw	r2,20(r16)
   25754:	04810004 	movi	r18,1024
   25758:	00000706 	br	25778 <__smakebuf_r+0xbc>
   2575c:	8080030b 	ldhu	r2,12(r16)
   25760:	10c0200c 	andi	r3,r2,128
   25764:	18001f1e 	bne	r3,zero,257e4 <__smakebuf_r+0x128>
   25768:	04810004 	movi	r18,1024
   2576c:	10820014 	ori	r2,r2,2048
   25770:	8080030d 	sth	r2,12(r16)
   25774:	0027883a 	mov	r19,zero
   25778:	900b883a 	mov	r5,r18
   2577c:	8809883a 	mov	r4,r17
   25780:	00258780 	call	25878 <_malloc_r>
   25784:	10002c26 	beq	r2,zero,25838 <__smakebuf_r+0x17c>
   25788:	80c0030b 	ldhu	r3,12(r16)
   2578c:	010000b4 	movhi	r4,2
   25790:	2111f404 	addi	r4,r4,18384
   25794:	89000f15 	stw	r4,60(r17)
   25798:	18c02014 	ori	r3,r3,128
   2579c:	80c0030d 	sth	r3,12(r16)
   257a0:	80800015 	stw	r2,0(r16)
   257a4:	80800415 	stw	r2,16(r16)
   257a8:	84800515 	stw	r18,20(r16)
   257ac:	98001a1e 	bne	r19,zero,25818 <__smakebuf_r+0x15c>
   257b0:	dfc01317 	ldw	ra,76(sp)
   257b4:	dcc01217 	ldw	r19,72(sp)
   257b8:	dc801117 	ldw	r18,68(sp)
   257bc:	dc401017 	ldw	r17,64(sp)
   257c0:	dc000f17 	ldw	r16,60(sp)
   257c4:	dec01404 	addi	sp,sp,80
   257c8:	f800283a 	ret
   257cc:	288010c4 	addi	r2,r5,67
   257d0:	28800015 	stw	r2,0(r5)
   257d4:	28800415 	stw	r2,16(r5)
   257d8:	00800044 	movi	r2,1
   257dc:	28800515 	stw	r2,20(r5)
   257e0:	f800283a 	ret
   257e4:	04801004 	movi	r18,64
   257e8:	003fe006 	br	2576c <__alt_data_end+0xfffe576c>
   257ec:	81000a17 	ldw	r4,40(r16)
   257f0:	00c000b4 	movhi	r3,2
   257f4:	18df0d04 	addi	r3,r3,31796
   257f8:	20ffc51e 	bne	r4,r3,25710 <__alt_data_end+0xfffe5710>
   257fc:	8080030b 	ldhu	r2,12(r16)
   25800:	04810004 	movi	r18,1024
   25804:	84801315 	stw	r18,76(r16)
   25808:	1484b03a 	or	r2,r2,r18
   2580c:	8080030d 	sth	r2,12(r16)
   25810:	0027883a 	mov	r19,zero
   25814:	003fd806 	br	25778 <__alt_data_end+0xfffe5778>
   25818:	8140038f 	ldh	r5,14(r16)
   2581c:	8809883a 	mov	r4,r17
   25820:	002989c0 	call	2989c <_isatty_r>
   25824:	103fe226 	beq	r2,zero,257b0 <__alt_data_end+0xfffe57b0>
   25828:	8080030b 	ldhu	r2,12(r16)
   2582c:	10800054 	ori	r2,r2,1
   25830:	8080030d 	sth	r2,12(r16)
   25834:	003fde06 	br	257b0 <__alt_data_end+0xfffe57b0>
   25838:	8080030b 	ldhu	r2,12(r16)
   2583c:	10c0800c 	andi	r3,r2,512
   25840:	183fdb1e 	bne	r3,zero,257b0 <__alt_data_end+0xfffe57b0>
   25844:	10800094 	ori	r2,r2,2
   25848:	80c010c4 	addi	r3,r16,67
   2584c:	8080030d 	sth	r2,12(r16)
   25850:	00800044 	movi	r2,1
   25854:	80c00015 	stw	r3,0(r16)
   25858:	80c00415 	stw	r3,16(r16)
   2585c:	80800515 	stw	r2,20(r16)
   25860:	003fd306 	br	257b0 <__alt_data_end+0xfffe57b0>
   25864:	04810004 	movi	r18,1024
   25868:	003fc306 	br	25778 <__alt_data_end+0xfffe5778>
   2586c:	0027883a 	mov	r19,zero
   25870:	04810004 	movi	r18,1024
   25874:	003fc006 	br	25778 <__alt_data_end+0xfffe5778>

00025878 <_malloc_r>:
   25878:	defff504 	addi	sp,sp,-44
   2587c:	dc800315 	stw	r18,12(sp)
   25880:	dfc00a15 	stw	ra,40(sp)
   25884:	df000915 	stw	fp,36(sp)
   25888:	ddc00815 	stw	r23,32(sp)
   2588c:	dd800715 	stw	r22,28(sp)
   25890:	dd400615 	stw	r21,24(sp)
   25894:	dd000515 	stw	r20,20(sp)
   25898:	dcc00415 	stw	r19,16(sp)
   2589c:	dc400215 	stw	r17,8(sp)
   258a0:	dc000115 	stw	r16,4(sp)
   258a4:	288002c4 	addi	r2,r5,11
   258a8:	00c00584 	movi	r3,22
   258ac:	2025883a 	mov	r18,r4
   258b0:	18807f2e 	bgeu	r3,r2,25ab0 <_malloc_r+0x238>
   258b4:	047ffe04 	movi	r17,-8
   258b8:	1462703a 	and	r17,r2,r17
   258bc:	8800a316 	blt	r17,zero,25b4c <_malloc_r+0x2d4>
   258c0:	8940a236 	bltu	r17,r5,25b4c <_malloc_r+0x2d4>
   258c4:	002d5380 	call	2d538 <__malloc_lock>
   258c8:	00807dc4 	movi	r2,503
   258cc:	1441e92e 	bgeu	r2,r17,26074 <_malloc_r+0x7fc>
   258d0:	8804d27a 	srli	r2,r17,9
   258d4:	1000a126 	beq	r2,zero,25b5c <_malloc_r+0x2e4>
   258d8:	00c00104 	movi	r3,4
   258dc:	18811e36 	bltu	r3,r2,25d58 <_malloc_r+0x4e0>
   258e0:	8804d1ba 	srli	r2,r17,6
   258e4:	12000e44 	addi	r8,r2,57
   258e8:	11c00e04 	addi	r7,r2,56
   258ec:	4209883a 	add	r4,r8,r8
   258f0:	04c000f4 	movhi	r19,3
   258f4:	2109883a 	add	r4,r4,r4
   258f8:	9cff0304 	addi	r19,r19,-1012
   258fc:	2109883a 	add	r4,r4,r4
   25900:	9909883a 	add	r4,r19,r4
   25904:	24000117 	ldw	r16,4(r4)
   25908:	213ffe04 	addi	r4,r4,-8
   2590c:	24009726 	beq	r4,r16,25b6c <_malloc_r+0x2f4>
   25910:	80800117 	ldw	r2,4(r16)
   25914:	01bfff04 	movi	r6,-4
   25918:	014003c4 	movi	r5,15
   2591c:	1184703a 	and	r2,r2,r6
   25920:	1447c83a 	sub	r3,r2,r17
   25924:	28c00716 	blt	r5,r3,25944 <_malloc_r+0xcc>
   25928:	1800920e 	bge	r3,zero,25b74 <_malloc_r+0x2fc>
   2592c:	84000317 	ldw	r16,12(r16)
   25930:	24008e26 	beq	r4,r16,25b6c <_malloc_r+0x2f4>
   25934:	80800117 	ldw	r2,4(r16)
   25938:	1184703a 	and	r2,r2,r6
   2593c:	1447c83a 	sub	r3,r2,r17
   25940:	28fff90e 	bge	r5,r3,25928 <__alt_data_end+0xfffe5928>
   25944:	3809883a 	mov	r4,r7
   25948:	018000f4 	movhi	r6,3
   2594c:	9c000417 	ldw	r16,16(r19)
   25950:	31bf0304 	addi	r6,r6,-1012
   25954:	32000204 	addi	r8,r6,8
   25958:	82013426 	beq	r16,r8,25e2c <_malloc_r+0x5b4>
   2595c:	80c00117 	ldw	r3,4(r16)
   25960:	00bfff04 	movi	r2,-4
   25964:	188e703a 	and	r7,r3,r2
   25968:	3c45c83a 	sub	r2,r7,r17
   2596c:	00c003c4 	movi	r3,15
   25970:	18811f16 	blt	r3,r2,25df0 <_malloc_r+0x578>
   25974:	32000515 	stw	r8,20(r6)
   25978:	32000415 	stw	r8,16(r6)
   2597c:	10007f0e 	bge	r2,zero,25b7c <_malloc_r+0x304>
   25980:	00807fc4 	movi	r2,511
   25984:	11c0fd36 	bltu	r2,r7,25d7c <_malloc_r+0x504>
   25988:	3806d0fa 	srli	r3,r7,3
   2598c:	01c00044 	movi	r7,1
   25990:	30800117 	ldw	r2,4(r6)
   25994:	19400044 	addi	r5,r3,1
   25998:	294b883a 	add	r5,r5,r5
   2599c:	1807d0ba 	srai	r3,r3,2
   259a0:	294b883a 	add	r5,r5,r5
   259a4:	294b883a 	add	r5,r5,r5
   259a8:	298b883a 	add	r5,r5,r6
   259ac:	38c6983a 	sll	r3,r7,r3
   259b0:	29c00017 	ldw	r7,0(r5)
   259b4:	2a7ffe04 	addi	r9,r5,-8
   259b8:	1886b03a 	or	r3,r3,r2
   259bc:	82400315 	stw	r9,12(r16)
   259c0:	81c00215 	stw	r7,8(r16)
   259c4:	30c00115 	stw	r3,4(r6)
   259c8:	2c000015 	stw	r16,0(r5)
   259cc:	3c000315 	stw	r16,12(r7)
   259d0:	2005d0ba 	srai	r2,r4,2
   259d4:	01400044 	movi	r5,1
   259d8:	288a983a 	sll	r5,r5,r2
   259dc:	19406f36 	bltu	r3,r5,25b9c <_malloc_r+0x324>
   259e0:	28c4703a 	and	r2,r5,r3
   259e4:	10000a1e 	bne	r2,zero,25a10 <_malloc_r+0x198>
   259e8:	00bfff04 	movi	r2,-4
   259ec:	294b883a 	add	r5,r5,r5
   259f0:	2088703a 	and	r4,r4,r2
   259f4:	28c4703a 	and	r2,r5,r3
   259f8:	21000104 	addi	r4,r4,4
   259fc:	1000041e 	bne	r2,zero,25a10 <_malloc_r+0x198>
   25a00:	294b883a 	add	r5,r5,r5
   25a04:	28c4703a 	and	r2,r5,r3
   25a08:	21000104 	addi	r4,r4,4
   25a0c:	103ffc26 	beq	r2,zero,25a00 <__alt_data_end+0xfffe5a00>
   25a10:	02bfff04 	movi	r10,-4
   25a14:	024003c4 	movi	r9,15
   25a18:	21800044 	addi	r6,r4,1
   25a1c:	318d883a 	add	r6,r6,r6
   25a20:	318d883a 	add	r6,r6,r6
   25a24:	318d883a 	add	r6,r6,r6
   25a28:	998d883a 	add	r6,r19,r6
   25a2c:	333ffe04 	addi	r12,r6,-8
   25a30:	2017883a 	mov	r11,r4
   25a34:	31800104 	addi	r6,r6,4
   25a38:	34000017 	ldw	r16,0(r6)
   25a3c:	31fffd04 	addi	r7,r6,-12
   25a40:	81c0041e 	bne	r16,r7,25a54 <_malloc_r+0x1dc>
   25a44:	0000fb06 	br	25e34 <_malloc_r+0x5bc>
   25a48:	1801030e 	bge	r3,zero,25e58 <_malloc_r+0x5e0>
   25a4c:	84000317 	ldw	r16,12(r16)
   25a50:	81c0f826 	beq	r16,r7,25e34 <_malloc_r+0x5bc>
   25a54:	80800117 	ldw	r2,4(r16)
   25a58:	1284703a 	and	r2,r2,r10
   25a5c:	1447c83a 	sub	r3,r2,r17
   25a60:	48fff90e 	bge	r9,r3,25a48 <__alt_data_end+0xfffe5a48>
   25a64:	80800317 	ldw	r2,12(r16)
   25a68:	81000217 	ldw	r4,8(r16)
   25a6c:	89400054 	ori	r5,r17,1
   25a70:	81400115 	stw	r5,4(r16)
   25a74:	20800315 	stw	r2,12(r4)
   25a78:	11000215 	stw	r4,8(r2)
   25a7c:	8463883a 	add	r17,r16,r17
   25a80:	9c400515 	stw	r17,20(r19)
   25a84:	9c400415 	stw	r17,16(r19)
   25a88:	18800054 	ori	r2,r3,1
   25a8c:	88800115 	stw	r2,4(r17)
   25a90:	8a000315 	stw	r8,12(r17)
   25a94:	8a000215 	stw	r8,8(r17)
   25a98:	88e3883a 	add	r17,r17,r3
   25a9c:	88c00015 	stw	r3,0(r17)
   25aa0:	9009883a 	mov	r4,r18
   25aa4:	002d55c0 	call	2d55c <__malloc_unlock>
   25aa8:	80800204 	addi	r2,r16,8
   25aac:	00001b06 	br	25b1c <_malloc_r+0x2a4>
   25ab0:	04400404 	movi	r17,16
   25ab4:	89402536 	bltu	r17,r5,25b4c <_malloc_r+0x2d4>
   25ab8:	002d5380 	call	2d538 <__malloc_lock>
   25abc:	00800184 	movi	r2,6
   25ac0:	01000084 	movi	r4,2
   25ac4:	04c000f4 	movhi	r19,3
   25ac8:	1085883a 	add	r2,r2,r2
   25acc:	9cff0304 	addi	r19,r19,-1012
   25ad0:	1085883a 	add	r2,r2,r2
   25ad4:	9885883a 	add	r2,r19,r2
   25ad8:	14000117 	ldw	r16,4(r2)
   25adc:	10fffe04 	addi	r3,r2,-8
   25ae0:	80c0d926 	beq	r16,r3,25e48 <_malloc_r+0x5d0>
   25ae4:	80c00117 	ldw	r3,4(r16)
   25ae8:	81000317 	ldw	r4,12(r16)
   25aec:	00bfff04 	movi	r2,-4
   25af0:	1884703a 	and	r2,r3,r2
   25af4:	81400217 	ldw	r5,8(r16)
   25af8:	8085883a 	add	r2,r16,r2
   25afc:	10c00117 	ldw	r3,4(r2)
   25b00:	29000315 	stw	r4,12(r5)
   25b04:	21400215 	stw	r5,8(r4)
   25b08:	18c00054 	ori	r3,r3,1
   25b0c:	10c00115 	stw	r3,4(r2)
   25b10:	9009883a 	mov	r4,r18
   25b14:	002d55c0 	call	2d55c <__malloc_unlock>
   25b18:	80800204 	addi	r2,r16,8
   25b1c:	dfc00a17 	ldw	ra,40(sp)
   25b20:	df000917 	ldw	fp,36(sp)
   25b24:	ddc00817 	ldw	r23,32(sp)
   25b28:	dd800717 	ldw	r22,28(sp)
   25b2c:	dd400617 	ldw	r21,24(sp)
   25b30:	dd000517 	ldw	r20,20(sp)
   25b34:	dcc00417 	ldw	r19,16(sp)
   25b38:	dc800317 	ldw	r18,12(sp)
   25b3c:	dc400217 	ldw	r17,8(sp)
   25b40:	dc000117 	ldw	r16,4(sp)
   25b44:	dec00b04 	addi	sp,sp,44
   25b48:	f800283a 	ret
   25b4c:	00800304 	movi	r2,12
   25b50:	90800015 	stw	r2,0(r18)
   25b54:	0005883a 	mov	r2,zero
   25b58:	003ff006 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25b5c:	01002004 	movi	r4,128
   25b60:	02001004 	movi	r8,64
   25b64:	01c00fc4 	movi	r7,63
   25b68:	003f6106 	br	258f0 <__alt_data_end+0xfffe58f0>
   25b6c:	4009883a 	mov	r4,r8
   25b70:	003f7506 	br	25948 <__alt_data_end+0xfffe5948>
   25b74:	81000317 	ldw	r4,12(r16)
   25b78:	003fde06 	br	25af4 <__alt_data_end+0xfffe5af4>
   25b7c:	81c5883a 	add	r2,r16,r7
   25b80:	11400117 	ldw	r5,4(r2)
   25b84:	9009883a 	mov	r4,r18
   25b88:	29400054 	ori	r5,r5,1
   25b8c:	11400115 	stw	r5,4(r2)
   25b90:	002d55c0 	call	2d55c <__malloc_unlock>
   25b94:	80800204 	addi	r2,r16,8
   25b98:	003fe006 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25b9c:	9c000217 	ldw	r16,8(r19)
   25ba0:	00bfff04 	movi	r2,-4
   25ba4:	85800117 	ldw	r22,4(r16)
   25ba8:	b0ac703a 	and	r22,r22,r2
   25bac:	b4400336 	bltu	r22,r17,25bbc <_malloc_r+0x344>
   25bb0:	b445c83a 	sub	r2,r22,r17
   25bb4:	00c003c4 	movi	r3,15
   25bb8:	18805d16 	blt	r3,r2,25d30 <_malloc_r+0x4b8>
   25bbc:	05c000f4 	movhi	r23,3
   25bc0:	008000f4 	movhi	r2,3
   25bc4:	108b5704 	addi	r2,r2,11612
   25bc8:	bdc48a04 	addi	r23,r23,4648
   25bcc:	15400017 	ldw	r21,0(r2)
   25bd0:	b8c00017 	ldw	r3,0(r23)
   25bd4:	00bfffc4 	movi	r2,-1
   25bd8:	858d883a 	add	r6,r16,r22
   25bdc:	8d6b883a 	add	r21,r17,r21
   25be0:	1880ea26 	beq	r3,r2,25f8c <_malloc_r+0x714>
   25be4:	ad4403c4 	addi	r21,r21,4111
   25be8:	00bc0004 	movi	r2,-4096
   25bec:	a8aa703a 	and	r21,r21,r2
   25bf0:	a80b883a 	mov	r5,r21
   25bf4:	9009883a 	mov	r4,r18
   25bf8:	d9800015 	stw	r6,0(sp)
   25bfc:	0027b080 	call	27b08 <_sbrk_r>
   25c00:	1029883a 	mov	r20,r2
   25c04:	00bfffc4 	movi	r2,-1
   25c08:	d9800017 	ldw	r6,0(sp)
   25c0c:	a080e826 	beq	r20,r2,25fb0 <_malloc_r+0x738>
   25c10:	a180a636 	bltu	r20,r6,25eac <_malloc_r+0x634>
   25c14:	070000f4 	movhi	fp,3
   25c18:	e70b6004 	addi	fp,fp,11648
   25c1c:	e0800017 	ldw	r2,0(fp)
   25c20:	a887883a 	add	r3,r21,r2
   25c24:	e0c00015 	stw	r3,0(fp)
   25c28:	3500e626 	beq	r6,r20,25fc4 <_malloc_r+0x74c>
   25c2c:	b9000017 	ldw	r4,0(r23)
   25c30:	00bfffc4 	movi	r2,-1
   25c34:	2080ee26 	beq	r4,r2,25ff0 <_malloc_r+0x778>
   25c38:	a185c83a 	sub	r2,r20,r6
   25c3c:	10c5883a 	add	r2,r2,r3
   25c40:	e0800015 	stw	r2,0(fp)
   25c44:	a0c001cc 	andi	r3,r20,7
   25c48:	1800bc26 	beq	r3,zero,25f3c <_malloc_r+0x6c4>
   25c4c:	a0e9c83a 	sub	r20,r20,r3
   25c50:	00840204 	movi	r2,4104
   25c54:	a5000204 	addi	r20,r20,8
   25c58:	10c7c83a 	sub	r3,r2,r3
   25c5c:	a545883a 	add	r2,r20,r21
   25c60:	1083ffcc 	andi	r2,r2,4095
   25c64:	18abc83a 	sub	r21,r3,r2
   25c68:	a80b883a 	mov	r5,r21
   25c6c:	9009883a 	mov	r4,r18
   25c70:	0027b080 	call	27b08 <_sbrk_r>
   25c74:	00ffffc4 	movi	r3,-1
   25c78:	10c0e126 	beq	r2,r3,26000 <_malloc_r+0x788>
   25c7c:	1505c83a 	sub	r2,r2,r20
   25c80:	1545883a 	add	r2,r2,r21
   25c84:	10800054 	ori	r2,r2,1
   25c88:	e0c00017 	ldw	r3,0(fp)
   25c8c:	9d000215 	stw	r20,8(r19)
   25c90:	a0800115 	stw	r2,4(r20)
   25c94:	a8c7883a 	add	r3,r21,r3
   25c98:	e0c00015 	stw	r3,0(fp)
   25c9c:	84c00e26 	beq	r16,r19,25cd8 <_malloc_r+0x460>
   25ca0:	018003c4 	movi	r6,15
   25ca4:	3580a72e 	bgeu	r6,r22,25f44 <_malloc_r+0x6cc>
   25ca8:	81400117 	ldw	r5,4(r16)
   25cac:	013ffe04 	movi	r4,-8
   25cb0:	b0bffd04 	addi	r2,r22,-12
   25cb4:	1104703a 	and	r2,r2,r4
   25cb8:	2900004c 	andi	r4,r5,1
   25cbc:	2088b03a 	or	r4,r4,r2
   25cc0:	81000115 	stw	r4,4(r16)
   25cc4:	01400144 	movi	r5,5
   25cc8:	8089883a 	add	r4,r16,r2
   25ccc:	21400115 	stw	r5,4(r4)
   25cd0:	21400215 	stw	r5,8(r4)
   25cd4:	3080cd36 	bltu	r6,r2,2600c <_malloc_r+0x794>
   25cd8:	008000f4 	movhi	r2,3
   25cdc:	108b5604 	addi	r2,r2,11608
   25ce0:	11000017 	ldw	r4,0(r2)
   25ce4:	20c0012e 	bgeu	r4,r3,25cec <_malloc_r+0x474>
   25ce8:	10c00015 	stw	r3,0(r2)
   25cec:	008000f4 	movhi	r2,3
   25cf0:	108b5504 	addi	r2,r2,11604
   25cf4:	11000017 	ldw	r4,0(r2)
   25cf8:	9c000217 	ldw	r16,8(r19)
   25cfc:	20c0012e 	bgeu	r4,r3,25d04 <_malloc_r+0x48c>
   25d00:	10c00015 	stw	r3,0(r2)
   25d04:	80c00117 	ldw	r3,4(r16)
   25d08:	00bfff04 	movi	r2,-4
   25d0c:	1886703a 	and	r3,r3,r2
   25d10:	1c45c83a 	sub	r2,r3,r17
   25d14:	1c400236 	bltu	r3,r17,25d20 <_malloc_r+0x4a8>
   25d18:	00c003c4 	movi	r3,15
   25d1c:	18800416 	blt	r3,r2,25d30 <_malloc_r+0x4b8>
   25d20:	9009883a 	mov	r4,r18
   25d24:	002d55c0 	call	2d55c <__malloc_unlock>
   25d28:	0005883a 	mov	r2,zero
   25d2c:	003f7b06 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25d30:	88c00054 	ori	r3,r17,1
   25d34:	80c00115 	stw	r3,4(r16)
   25d38:	8463883a 	add	r17,r16,r17
   25d3c:	10800054 	ori	r2,r2,1
   25d40:	9c400215 	stw	r17,8(r19)
   25d44:	88800115 	stw	r2,4(r17)
   25d48:	9009883a 	mov	r4,r18
   25d4c:	002d55c0 	call	2d55c <__malloc_unlock>
   25d50:	80800204 	addi	r2,r16,8
   25d54:	003f7106 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25d58:	00c00504 	movi	r3,20
   25d5c:	18804a2e 	bgeu	r3,r2,25e88 <_malloc_r+0x610>
   25d60:	00c01504 	movi	r3,84
   25d64:	18806e36 	bltu	r3,r2,25f20 <_malloc_r+0x6a8>
   25d68:	8804d33a 	srli	r2,r17,12
   25d6c:	12001bc4 	addi	r8,r2,111
   25d70:	11c01b84 	addi	r7,r2,110
   25d74:	4209883a 	add	r4,r8,r8
   25d78:	003edd06 	br	258f0 <__alt_data_end+0xfffe58f0>
   25d7c:	3804d27a 	srli	r2,r7,9
   25d80:	00c00104 	movi	r3,4
   25d84:	1880442e 	bgeu	r3,r2,25e98 <_malloc_r+0x620>
   25d88:	00c00504 	movi	r3,20
   25d8c:	18808136 	bltu	r3,r2,25f94 <_malloc_r+0x71c>
   25d90:	11401704 	addi	r5,r2,92
   25d94:	10c016c4 	addi	r3,r2,91
   25d98:	294b883a 	add	r5,r5,r5
   25d9c:	294b883a 	add	r5,r5,r5
   25da0:	294b883a 	add	r5,r5,r5
   25da4:	994b883a 	add	r5,r19,r5
   25da8:	28800017 	ldw	r2,0(r5)
   25dac:	018000f4 	movhi	r6,3
   25db0:	297ffe04 	addi	r5,r5,-8
   25db4:	31bf0304 	addi	r6,r6,-1012
   25db8:	28806526 	beq	r5,r2,25f50 <_malloc_r+0x6d8>
   25dbc:	01bfff04 	movi	r6,-4
   25dc0:	10c00117 	ldw	r3,4(r2)
   25dc4:	1986703a 	and	r3,r3,r6
   25dc8:	38c0022e 	bgeu	r7,r3,25dd4 <_malloc_r+0x55c>
   25dcc:	10800217 	ldw	r2,8(r2)
   25dd0:	28bffb1e 	bne	r5,r2,25dc0 <__alt_data_end+0xfffe5dc0>
   25dd4:	11400317 	ldw	r5,12(r2)
   25dd8:	98c00117 	ldw	r3,4(r19)
   25ddc:	81400315 	stw	r5,12(r16)
   25de0:	80800215 	stw	r2,8(r16)
   25de4:	2c000215 	stw	r16,8(r5)
   25de8:	14000315 	stw	r16,12(r2)
   25dec:	003ef806 	br	259d0 <__alt_data_end+0xfffe59d0>
   25df0:	88c00054 	ori	r3,r17,1
   25df4:	80c00115 	stw	r3,4(r16)
   25df8:	8463883a 	add	r17,r16,r17
   25dfc:	34400515 	stw	r17,20(r6)
   25e00:	34400415 	stw	r17,16(r6)
   25e04:	10c00054 	ori	r3,r2,1
   25e08:	8a000315 	stw	r8,12(r17)
   25e0c:	8a000215 	stw	r8,8(r17)
   25e10:	88c00115 	stw	r3,4(r17)
   25e14:	88a3883a 	add	r17,r17,r2
   25e18:	88800015 	stw	r2,0(r17)
   25e1c:	9009883a 	mov	r4,r18
   25e20:	002d55c0 	call	2d55c <__malloc_unlock>
   25e24:	80800204 	addi	r2,r16,8
   25e28:	003f3c06 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25e2c:	30c00117 	ldw	r3,4(r6)
   25e30:	003ee706 	br	259d0 <__alt_data_end+0xfffe59d0>
   25e34:	5ac00044 	addi	r11,r11,1
   25e38:	588000cc 	andi	r2,r11,3
   25e3c:	31800204 	addi	r6,r6,8
   25e40:	103efd1e 	bne	r2,zero,25a38 <__alt_data_end+0xfffe5a38>
   25e44:	00002406 	br	25ed8 <_malloc_r+0x660>
   25e48:	14000317 	ldw	r16,12(r2)
   25e4c:	143f251e 	bne	r2,r16,25ae4 <__alt_data_end+0xfffe5ae4>
   25e50:	21000084 	addi	r4,r4,2
   25e54:	003ebc06 	br	25948 <__alt_data_end+0xfffe5948>
   25e58:	8085883a 	add	r2,r16,r2
   25e5c:	10c00117 	ldw	r3,4(r2)
   25e60:	81000317 	ldw	r4,12(r16)
   25e64:	81400217 	ldw	r5,8(r16)
   25e68:	18c00054 	ori	r3,r3,1
   25e6c:	10c00115 	stw	r3,4(r2)
   25e70:	29000315 	stw	r4,12(r5)
   25e74:	21400215 	stw	r5,8(r4)
   25e78:	9009883a 	mov	r4,r18
   25e7c:	002d55c0 	call	2d55c <__malloc_unlock>
   25e80:	80800204 	addi	r2,r16,8
   25e84:	003f2506 	br	25b1c <__alt_data_end+0xfffe5b1c>
   25e88:	12001704 	addi	r8,r2,92
   25e8c:	11c016c4 	addi	r7,r2,91
   25e90:	4209883a 	add	r4,r8,r8
   25e94:	003e9606 	br	258f0 <__alt_data_end+0xfffe58f0>
   25e98:	3804d1ba 	srli	r2,r7,6
   25e9c:	11400e44 	addi	r5,r2,57
   25ea0:	10c00e04 	addi	r3,r2,56
   25ea4:	294b883a 	add	r5,r5,r5
   25ea8:	003fbc06 	br	25d9c <__alt_data_end+0xfffe5d9c>
   25eac:	84ff5926 	beq	r16,r19,25c14 <__alt_data_end+0xfffe5c14>
   25eb0:	008000f4 	movhi	r2,3
   25eb4:	10bf0304 	addi	r2,r2,-1012
   25eb8:	14000217 	ldw	r16,8(r2)
   25ebc:	00bfff04 	movi	r2,-4
   25ec0:	80c00117 	ldw	r3,4(r16)
   25ec4:	1886703a 	and	r3,r3,r2
   25ec8:	003f9106 	br	25d10 <__alt_data_end+0xfffe5d10>
   25ecc:	60800217 	ldw	r2,8(r12)
   25ed0:	213fffc4 	addi	r4,r4,-1
   25ed4:	1300651e 	bne	r2,r12,2606c <_malloc_r+0x7f4>
   25ed8:	208000cc 	andi	r2,r4,3
   25edc:	633ffe04 	addi	r12,r12,-8
   25ee0:	103ffa1e 	bne	r2,zero,25ecc <__alt_data_end+0xfffe5ecc>
   25ee4:	98800117 	ldw	r2,4(r19)
   25ee8:	0146303a 	nor	r3,zero,r5
   25eec:	1884703a 	and	r2,r3,r2
   25ef0:	98800115 	stw	r2,4(r19)
   25ef4:	294b883a 	add	r5,r5,r5
   25ef8:	117f2836 	bltu	r2,r5,25b9c <__alt_data_end+0xfffe5b9c>
   25efc:	283f2726 	beq	r5,zero,25b9c <__alt_data_end+0xfffe5b9c>
   25f00:	2886703a 	and	r3,r5,r2
   25f04:	5809883a 	mov	r4,r11
   25f08:	183ec31e 	bne	r3,zero,25a18 <__alt_data_end+0xfffe5a18>
   25f0c:	294b883a 	add	r5,r5,r5
   25f10:	2886703a 	and	r3,r5,r2
   25f14:	21000104 	addi	r4,r4,4
   25f18:	183ffc26 	beq	r3,zero,25f0c <__alt_data_end+0xfffe5f0c>
   25f1c:	003ebe06 	br	25a18 <__alt_data_end+0xfffe5a18>
   25f20:	00c05504 	movi	r3,340
   25f24:	18801236 	bltu	r3,r2,25f70 <_malloc_r+0x6f8>
   25f28:	8804d3fa 	srli	r2,r17,15
   25f2c:	12001e04 	addi	r8,r2,120
   25f30:	11c01dc4 	addi	r7,r2,119
   25f34:	4209883a 	add	r4,r8,r8
   25f38:	003e6d06 	br	258f0 <__alt_data_end+0xfffe58f0>
   25f3c:	00c40004 	movi	r3,4096
   25f40:	003f4606 	br	25c5c <__alt_data_end+0xfffe5c5c>
   25f44:	00800044 	movi	r2,1
   25f48:	a0800115 	stw	r2,4(r20)
   25f4c:	003f7406 	br	25d20 <__alt_data_end+0xfffe5d20>
   25f50:	1805d0ba 	srai	r2,r3,2
   25f54:	01c00044 	movi	r7,1
   25f58:	30c00117 	ldw	r3,4(r6)
   25f5c:	388e983a 	sll	r7,r7,r2
   25f60:	2805883a 	mov	r2,r5
   25f64:	38c6b03a 	or	r3,r7,r3
   25f68:	30c00115 	stw	r3,4(r6)
   25f6c:	003f9b06 	br	25ddc <__alt_data_end+0xfffe5ddc>
   25f70:	00c15504 	movi	r3,1364
   25f74:	18801a36 	bltu	r3,r2,25fe0 <_malloc_r+0x768>
   25f78:	8804d4ba 	srli	r2,r17,18
   25f7c:	12001f44 	addi	r8,r2,125
   25f80:	11c01f04 	addi	r7,r2,124
   25f84:	4209883a 	add	r4,r8,r8
   25f88:	003e5906 	br	258f0 <__alt_data_end+0xfffe58f0>
   25f8c:	ad400404 	addi	r21,r21,16
   25f90:	003f1706 	br	25bf0 <__alt_data_end+0xfffe5bf0>
   25f94:	00c01504 	movi	r3,84
   25f98:	18802336 	bltu	r3,r2,26028 <_malloc_r+0x7b0>
   25f9c:	3804d33a 	srli	r2,r7,12
   25fa0:	11401bc4 	addi	r5,r2,111
   25fa4:	10c01b84 	addi	r3,r2,110
   25fa8:	294b883a 	add	r5,r5,r5
   25fac:	003f7b06 	br	25d9c <__alt_data_end+0xfffe5d9c>
   25fb0:	9c000217 	ldw	r16,8(r19)
   25fb4:	00bfff04 	movi	r2,-4
   25fb8:	80c00117 	ldw	r3,4(r16)
   25fbc:	1886703a 	and	r3,r3,r2
   25fc0:	003f5306 	br	25d10 <__alt_data_end+0xfffe5d10>
   25fc4:	3083ffcc 	andi	r2,r6,4095
   25fc8:	103f181e 	bne	r2,zero,25c2c <__alt_data_end+0xfffe5c2c>
   25fcc:	99000217 	ldw	r4,8(r19)
   25fd0:	b545883a 	add	r2,r22,r21
   25fd4:	10800054 	ori	r2,r2,1
   25fd8:	20800115 	stw	r2,4(r4)
   25fdc:	003f3e06 	br	25cd8 <__alt_data_end+0xfffe5cd8>
   25fe0:	01003f84 	movi	r4,254
   25fe4:	02001fc4 	movi	r8,127
   25fe8:	01c01f84 	movi	r7,126
   25fec:	003e4006 	br	258f0 <__alt_data_end+0xfffe58f0>
   25ff0:	008000f4 	movhi	r2,3
   25ff4:	10848a04 	addi	r2,r2,4648
   25ff8:	15000015 	stw	r20,0(r2)
   25ffc:	003f1106 	br	25c44 <__alt_data_end+0xfffe5c44>
   26000:	00800044 	movi	r2,1
   26004:	002b883a 	mov	r21,zero
   26008:	003f1f06 	br	25c88 <__alt_data_end+0xfffe5c88>
   2600c:	81400204 	addi	r5,r16,8
   26010:	9009883a 	mov	r4,r18
   26014:	0024c8c0 	call	24c8c <_free_r>
   26018:	008000f4 	movhi	r2,3
   2601c:	108b6004 	addi	r2,r2,11648
   26020:	10c00017 	ldw	r3,0(r2)
   26024:	003f2c06 	br	25cd8 <__alt_data_end+0xfffe5cd8>
   26028:	00c05504 	movi	r3,340
   2602c:	18800536 	bltu	r3,r2,26044 <_malloc_r+0x7cc>
   26030:	3804d3fa 	srli	r2,r7,15
   26034:	11401e04 	addi	r5,r2,120
   26038:	10c01dc4 	addi	r3,r2,119
   2603c:	294b883a 	add	r5,r5,r5
   26040:	003f5606 	br	25d9c <__alt_data_end+0xfffe5d9c>
   26044:	00c15504 	movi	r3,1364
   26048:	18800536 	bltu	r3,r2,26060 <_malloc_r+0x7e8>
   2604c:	3804d4ba 	srli	r2,r7,18
   26050:	11401f44 	addi	r5,r2,125
   26054:	10c01f04 	addi	r3,r2,124
   26058:	294b883a 	add	r5,r5,r5
   2605c:	003f4f06 	br	25d9c <__alt_data_end+0xfffe5d9c>
   26060:	01403f84 	movi	r5,254
   26064:	00c01f84 	movi	r3,126
   26068:	003f4c06 	br	25d9c <__alt_data_end+0xfffe5d9c>
   2606c:	98800117 	ldw	r2,4(r19)
   26070:	003fa006 	br	25ef4 <__alt_data_end+0xfffe5ef4>
   26074:	8808d0fa 	srli	r4,r17,3
   26078:	20800044 	addi	r2,r4,1
   2607c:	1085883a 	add	r2,r2,r2
   26080:	003e9006 	br	25ac4 <__alt_data_end+0xfffe5ac4>

00026084 <memchr>:
   26084:	208000cc 	andi	r2,r4,3
   26088:	280f883a 	mov	r7,r5
   2608c:	10003426 	beq	r2,zero,26160 <memchr+0xdc>
   26090:	30bfffc4 	addi	r2,r6,-1
   26094:	30001a26 	beq	r6,zero,26100 <memchr+0x7c>
   26098:	20c00003 	ldbu	r3,0(r4)
   2609c:	29803fcc 	andi	r6,r5,255
   260a0:	30c0051e 	bne	r6,r3,260b8 <memchr+0x34>
   260a4:	00001806 	br	26108 <memchr+0x84>
   260a8:	10001526 	beq	r2,zero,26100 <memchr+0x7c>
   260ac:	20c00003 	ldbu	r3,0(r4)
   260b0:	10bfffc4 	addi	r2,r2,-1
   260b4:	30c01426 	beq	r6,r3,26108 <memchr+0x84>
   260b8:	21000044 	addi	r4,r4,1
   260bc:	20c000cc 	andi	r3,r4,3
   260c0:	183ff91e 	bne	r3,zero,260a8 <__alt_data_end+0xfffe60a8>
   260c4:	020000c4 	movi	r8,3
   260c8:	40801136 	bltu	r8,r2,26110 <memchr+0x8c>
   260cc:	10000c26 	beq	r2,zero,26100 <memchr+0x7c>
   260d0:	20c00003 	ldbu	r3,0(r4)
   260d4:	29403fcc 	andi	r5,r5,255
   260d8:	28c00b26 	beq	r5,r3,26108 <memchr+0x84>
   260dc:	20c00044 	addi	r3,r4,1
   260e0:	39803fcc 	andi	r6,r7,255
   260e4:	2089883a 	add	r4,r4,r2
   260e8:	00000306 	br	260f8 <memchr+0x74>
   260ec:	18c00044 	addi	r3,r3,1
   260f0:	197fffc3 	ldbu	r5,-1(r3)
   260f4:	31400526 	beq	r6,r5,2610c <memchr+0x88>
   260f8:	1805883a 	mov	r2,r3
   260fc:	20fffb1e 	bne	r4,r3,260ec <__alt_data_end+0xfffe60ec>
   26100:	0005883a 	mov	r2,zero
   26104:	f800283a 	ret
   26108:	2005883a 	mov	r2,r4
   2610c:	f800283a 	ret
   26110:	28c03fcc 	andi	r3,r5,255
   26114:	1812923a 	slli	r9,r3,8
   26118:	02ffbff4 	movhi	r11,65279
   2611c:	02a02074 	movhi	r10,32897
   26120:	48d2b03a 	or	r9,r9,r3
   26124:	4806943a 	slli	r3,r9,16
   26128:	5affbfc4 	addi	r11,r11,-257
   2612c:	52a02004 	addi	r10,r10,-32640
   26130:	48d2b03a 	or	r9,r9,r3
   26134:	20c00017 	ldw	r3,0(r4)
   26138:	48c6f03a 	xor	r3,r9,r3
   2613c:	1acd883a 	add	r6,r3,r11
   26140:	00c6303a 	nor	r3,zero,r3
   26144:	30c6703a 	and	r3,r6,r3
   26148:	1a86703a 	and	r3,r3,r10
   2614c:	183fe01e 	bne	r3,zero,260d0 <__alt_data_end+0xfffe60d0>
   26150:	10bfff04 	addi	r2,r2,-4
   26154:	21000104 	addi	r4,r4,4
   26158:	40bff636 	bltu	r8,r2,26134 <__alt_data_end+0xfffe6134>
   2615c:	003fdb06 	br	260cc <__alt_data_end+0xfffe60cc>
   26160:	3005883a 	mov	r2,r6
   26164:	003fd706 	br	260c4 <__alt_data_end+0xfffe60c4>

00026168 <memcpy>:
   26168:	defffd04 	addi	sp,sp,-12
   2616c:	dfc00215 	stw	ra,8(sp)
   26170:	dc400115 	stw	r17,4(sp)
   26174:	dc000015 	stw	r16,0(sp)
   26178:	00c003c4 	movi	r3,15
   2617c:	2005883a 	mov	r2,r4
   26180:	1980452e 	bgeu	r3,r6,26298 <memcpy+0x130>
   26184:	2906b03a 	or	r3,r5,r4
   26188:	18c000cc 	andi	r3,r3,3
   2618c:	1800441e 	bne	r3,zero,262a0 <memcpy+0x138>
   26190:	347ffc04 	addi	r17,r6,-16
   26194:	8822d13a 	srli	r17,r17,4
   26198:	28c00104 	addi	r3,r5,4
   2619c:	23400104 	addi	r13,r4,4
   261a0:	8820913a 	slli	r16,r17,4
   261a4:	2b000204 	addi	r12,r5,8
   261a8:	22c00204 	addi	r11,r4,8
   261ac:	84000504 	addi	r16,r16,20
   261b0:	2a800304 	addi	r10,r5,12
   261b4:	22400304 	addi	r9,r4,12
   261b8:	2c21883a 	add	r16,r5,r16
   261bc:	2811883a 	mov	r8,r5
   261c0:	200f883a 	mov	r7,r4
   261c4:	41000017 	ldw	r4,0(r8)
   261c8:	1fc00017 	ldw	ra,0(r3)
   261cc:	63c00017 	ldw	r15,0(r12)
   261d0:	39000015 	stw	r4,0(r7)
   261d4:	53800017 	ldw	r14,0(r10)
   261d8:	6fc00015 	stw	ra,0(r13)
   261dc:	5bc00015 	stw	r15,0(r11)
   261e0:	4b800015 	stw	r14,0(r9)
   261e4:	18c00404 	addi	r3,r3,16
   261e8:	39c00404 	addi	r7,r7,16
   261ec:	42000404 	addi	r8,r8,16
   261f0:	6b400404 	addi	r13,r13,16
   261f4:	63000404 	addi	r12,r12,16
   261f8:	5ac00404 	addi	r11,r11,16
   261fc:	52800404 	addi	r10,r10,16
   26200:	4a400404 	addi	r9,r9,16
   26204:	1c3fef1e 	bne	r3,r16,261c4 <__alt_data_end+0xfffe61c4>
   26208:	89c00044 	addi	r7,r17,1
   2620c:	380e913a 	slli	r7,r7,4
   26210:	310003cc 	andi	r4,r6,15
   26214:	02c000c4 	movi	r11,3
   26218:	11c7883a 	add	r3,r2,r7
   2621c:	29cb883a 	add	r5,r5,r7
   26220:	5900212e 	bgeu	r11,r4,262a8 <memcpy+0x140>
   26224:	1813883a 	mov	r9,r3
   26228:	2811883a 	mov	r8,r5
   2622c:	200f883a 	mov	r7,r4
   26230:	42800017 	ldw	r10,0(r8)
   26234:	4a400104 	addi	r9,r9,4
   26238:	39ffff04 	addi	r7,r7,-4
   2623c:	4abfff15 	stw	r10,-4(r9)
   26240:	42000104 	addi	r8,r8,4
   26244:	59fffa36 	bltu	r11,r7,26230 <__alt_data_end+0xfffe6230>
   26248:	213fff04 	addi	r4,r4,-4
   2624c:	2008d0ba 	srli	r4,r4,2
   26250:	318000cc 	andi	r6,r6,3
   26254:	21000044 	addi	r4,r4,1
   26258:	2109883a 	add	r4,r4,r4
   2625c:	2109883a 	add	r4,r4,r4
   26260:	1907883a 	add	r3,r3,r4
   26264:	290b883a 	add	r5,r5,r4
   26268:	30000626 	beq	r6,zero,26284 <memcpy+0x11c>
   2626c:	198d883a 	add	r6,r3,r6
   26270:	29c00003 	ldbu	r7,0(r5)
   26274:	18c00044 	addi	r3,r3,1
   26278:	29400044 	addi	r5,r5,1
   2627c:	19ffffc5 	stb	r7,-1(r3)
   26280:	19bffb1e 	bne	r3,r6,26270 <__alt_data_end+0xfffe6270>
   26284:	dfc00217 	ldw	ra,8(sp)
   26288:	dc400117 	ldw	r17,4(sp)
   2628c:	dc000017 	ldw	r16,0(sp)
   26290:	dec00304 	addi	sp,sp,12
   26294:	f800283a 	ret
   26298:	2007883a 	mov	r3,r4
   2629c:	003ff206 	br	26268 <__alt_data_end+0xfffe6268>
   262a0:	2007883a 	mov	r3,r4
   262a4:	003ff106 	br	2626c <__alt_data_end+0xfffe626c>
   262a8:	200d883a 	mov	r6,r4
   262ac:	003fee06 	br	26268 <__alt_data_end+0xfffe6268>

000262b0 <memmove>:
   262b0:	2005883a 	mov	r2,r4
   262b4:	29000b2e 	bgeu	r5,r4,262e4 <memmove+0x34>
   262b8:	298f883a 	add	r7,r5,r6
   262bc:	21c0092e 	bgeu	r4,r7,262e4 <memmove+0x34>
   262c0:	2187883a 	add	r3,r4,r6
   262c4:	198bc83a 	sub	r5,r3,r6
   262c8:	30004826 	beq	r6,zero,263ec <memmove+0x13c>
   262cc:	39ffffc4 	addi	r7,r7,-1
   262d0:	39000003 	ldbu	r4,0(r7)
   262d4:	18ffffc4 	addi	r3,r3,-1
   262d8:	19000005 	stb	r4,0(r3)
   262dc:	28fffb1e 	bne	r5,r3,262cc <__alt_data_end+0xfffe62cc>
   262e0:	f800283a 	ret
   262e4:	00c003c4 	movi	r3,15
   262e8:	1980412e 	bgeu	r3,r6,263f0 <memmove+0x140>
   262ec:	2886b03a 	or	r3,r5,r2
   262f0:	18c000cc 	andi	r3,r3,3
   262f4:	1800401e 	bne	r3,zero,263f8 <memmove+0x148>
   262f8:	33fffc04 	addi	r15,r6,-16
   262fc:	781ed13a 	srli	r15,r15,4
   26300:	28c00104 	addi	r3,r5,4
   26304:	13400104 	addi	r13,r2,4
   26308:	781c913a 	slli	r14,r15,4
   2630c:	2b000204 	addi	r12,r5,8
   26310:	12c00204 	addi	r11,r2,8
   26314:	73800504 	addi	r14,r14,20
   26318:	2a800304 	addi	r10,r5,12
   2631c:	12400304 	addi	r9,r2,12
   26320:	2b9d883a 	add	r14,r5,r14
   26324:	2811883a 	mov	r8,r5
   26328:	100f883a 	mov	r7,r2
   2632c:	41000017 	ldw	r4,0(r8)
   26330:	39c00404 	addi	r7,r7,16
   26334:	18c00404 	addi	r3,r3,16
   26338:	393ffc15 	stw	r4,-16(r7)
   2633c:	193ffc17 	ldw	r4,-16(r3)
   26340:	6b400404 	addi	r13,r13,16
   26344:	5ac00404 	addi	r11,r11,16
   26348:	693ffc15 	stw	r4,-16(r13)
   2634c:	61000017 	ldw	r4,0(r12)
   26350:	4a400404 	addi	r9,r9,16
   26354:	42000404 	addi	r8,r8,16
   26358:	593ffc15 	stw	r4,-16(r11)
   2635c:	51000017 	ldw	r4,0(r10)
   26360:	63000404 	addi	r12,r12,16
   26364:	52800404 	addi	r10,r10,16
   26368:	493ffc15 	stw	r4,-16(r9)
   2636c:	1bbfef1e 	bne	r3,r14,2632c <__alt_data_end+0xfffe632c>
   26370:	79000044 	addi	r4,r15,1
   26374:	2008913a 	slli	r4,r4,4
   26378:	328003cc 	andi	r10,r6,15
   2637c:	02c000c4 	movi	r11,3
   26380:	1107883a 	add	r3,r2,r4
   26384:	290b883a 	add	r5,r5,r4
   26388:	5a801e2e 	bgeu	r11,r10,26404 <memmove+0x154>
   2638c:	1813883a 	mov	r9,r3
   26390:	2811883a 	mov	r8,r5
   26394:	500f883a 	mov	r7,r10
   26398:	41000017 	ldw	r4,0(r8)
   2639c:	4a400104 	addi	r9,r9,4
   263a0:	39ffff04 	addi	r7,r7,-4
   263a4:	493fff15 	stw	r4,-4(r9)
   263a8:	42000104 	addi	r8,r8,4
   263ac:	59fffa36 	bltu	r11,r7,26398 <__alt_data_end+0xfffe6398>
   263b0:	513fff04 	addi	r4,r10,-4
   263b4:	2008d0ba 	srli	r4,r4,2
   263b8:	318000cc 	andi	r6,r6,3
   263bc:	21000044 	addi	r4,r4,1
   263c0:	2109883a 	add	r4,r4,r4
   263c4:	2109883a 	add	r4,r4,r4
   263c8:	1907883a 	add	r3,r3,r4
   263cc:	290b883a 	add	r5,r5,r4
   263d0:	30000b26 	beq	r6,zero,26400 <memmove+0x150>
   263d4:	198d883a 	add	r6,r3,r6
   263d8:	29c00003 	ldbu	r7,0(r5)
   263dc:	18c00044 	addi	r3,r3,1
   263e0:	29400044 	addi	r5,r5,1
   263e4:	19ffffc5 	stb	r7,-1(r3)
   263e8:	19bffb1e 	bne	r3,r6,263d8 <__alt_data_end+0xfffe63d8>
   263ec:	f800283a 	ret
   263f0:	1007883a 	mov	r3,r2
   263f4:	003ff606 	br	263d0 <__alt_data_end+0xfffe63d0>
   263f8:	1007883a 	mov	r3,r2
   263fc:	003ff506 	br	263d4 <__alt_data_end+0xfffe63d4>
   26400:	f800283a 	ret
   26404:	500d883a 	mov	r6,r10
   26408:	003ff106 	br	263d0 <__alt_data_end+0xfffe63d0>

0002640c <memset>:
   2640c:	20c000cc 	andi	r3,r4,3
   26410:	2005883a 	mov	r2,r4
   26414:	18004426 	beq	r3,zero,26528 <memset+0x11c>
   26418:	31ffffc4 	addi	r7,r6,-1
   2641c:	30004026 	beq	r6,zero,26520 <memset+0x114>
   26420:	2813883a 	mov	r9,r5
   26424:	200d883a 	mov	r6,r4
   26428:	2007883a 	mov	r3,r4
   2642c:	00000406 	br	26440 <memset+0x34>
   26430:	3a3fffc4 	addi	r8,r7,-1
   26434:	31800044 	addi	r6,r6,1
   26438:	38003926 	beq	r7,zero,26520 <memset+0x114>
   2643c:	400f883a 	mov	r7,r8
   26440:	18c00044 	addi	r3,r3,1
   26444:	32400005 	stb	r9,0(r6)
   26448:	1a0000cc 	andi	r8,r3,3
   2644c:	403ff81e 	bne	r8,zero,26430 <__alt_data_end+0xfffe6430>
   26450:	010000c4 	movi	r4,3
   26454:	21c02d2e 	bgeu	r4,r7,2650c <memset+0x100>
   26458:	29003fcc 	andi	r4,r5,255
   2645c:	200c923a 	slli	r6,r4,8
   26460:	3108b03a 	or	r4,r6,r4
   26464:	200c943a 	slli	r6,r4,16
   26468:	218cb03a 	or	r6,r4,r6
   2646c:	010003c4 	movi	r4,15
   26470:	21c0182e 	bgeu	r4,r7,264d4 <memset+0xc8>
   26474:	3b3ffc04 	addi	r12,r7,-16
   26478:	6018d13a 	srli	r12,r12,4
   2647c:	1a000104 	addi	r8,r3,4
   26480:	1ac00204 	addi	r11,r3,8
   26484:	6008913a 	slli	r4,r12,4
   26488:	1a800304 	addi	r10,r3,12
   2648c:	1813883a 	mov	r9,r3
   26490:	21000504 	addi	r4,r4,20
   26494:	1909883a 	add	r4,r3,r4
   26498:	49800015 	stw	r6,0(r9)
   2649c:	41800015 	stw	r6,0(r8)
   264a0:	59800015 	stw	r6,0(r11)
   264a4:	51800015 	stw	r6,0(r10)
   264a8:	42000404 	addi	r8,r8,16
   264ac:	4a400404 	addi	r9,r9,16
   264b0:	5ac00404 	addi	r11,r11,16
   264b4:	52800404 	addi	r10,r10,16
   264b8:	413ff71e 	bne	r8,r4,26498 <__alt_data_end+0xfffe6498>
   264bc:	63000044 	addi	r12,r12,1
   264c0:	6018913a 	slli	r12,r12,4
   264c4:	39c003cc 	andi	r7,r7,15
   264c8:	010000c4 	movi	r4,3
   264cc:	1b07883a 	add	r3,r3,r12
   264d0:	21c00e2e 	bgeu	r4,r7,2650c <memset+0x100>
   264d4:	1813883a 	mov	r9,r3
   264d8:	3811883a 	mov	r8,r7
   264dc:	010000c4 	movi	r4,3
   264e0:	49800015 	stw	r6,0(r9)
   264e4:	423fff04 	addi	r8,r8,-4
   264e8:	4a400104 	addi	r9,r9,4
   264ec:	223ffc36 	bltu	r4,r8,264e0 <__alt_data_end+0xfffe64e0>
   264f0:	393fff04 	addi	r4,r7,-4
   264f4:	2008d0ba 	srli	r4,r4,2
   264f8:	39c000cc 	andi	r7,r7,3
   264fc:	21000044 	addi	r4,r4,1
   26500:	2109883a 	add	r4,r4,r4
   26504:	2109883a 	add	r4,r4,r4
   26508:	1907883a 	add	r3,r3,r4
   2650c:	38000526 	beq	r7,zero,26524 <memset+0x118>
   26510:	19cf883a 	add	r7,r3,r7
   26514:	19400005 	stb	r5,0(r3)
   26518:	18c00044 	addi	r3,r3,1
   2651c:	38fffd1e 	bne	r7,r3,26514 <__alt_data_end+0xfffe6514>
   26520:	f800283a 	ret
   26524:	f800283a 	ret
   26528:	2007883a 	mov	r3,r4
   2652c:	300f883a 	mov	r7,r6
   26530:	003fc706 	br	26450 <__alt_data_end+0xfffe6450>

00026534 <_Balloc>:
   26534:	20801317 	ldw	r2,76(r4)
   26538:	defffc04 	addi	sp,sp,-16
   2653c:	dc400115 	stw	r17,4(sp)
   26540:	dc000015 	stw	r16,0(sp)
   26544:	dfc00315 	stw	ra,12(sp)
   26548:	dc800215 	stw	r18,8(sp)
   2654c:	2023883a 	mov	r17,r4
   26550:	2821883a 	mov	r16,r5
   26554:	10000f26 	beq	r2,zero,26594 <_Balloc+0x60>
   26558:	8407883a 	add	r3,r16,r16
   2655c:	18c7883a 	add	r3,r3,r3
   26560:	10c7883a 	add	r3,r2,r3
   26564:	18800017 	ldw	r2,0(r3)
   26568:	10001126 	beq	r2,zero,265b0 <_Balloc+0x7c>
   2656c:	11000017 	ldw	r4,0(r2)
   26570:	19000015 	stw	r4,0(r3)
   26574:	10000415 	stw	zero,16(r2)
   26578:	10000315 	stw	zero,12(r2)
   2657c:	dfc00317 	ldw	ra,12(sp)
   26580:	dc800217 	ldw	r18,8(sp)
   26584:	dc400117 	ldw	r17,4(sp)
   26588:	dc000017 	ldw	r16,0(sp)
   2658c:	dec00404 	addi	sp,sp,16
   26590:	f800283a 	ret
   26594:	01800844 	movi	r6,33
   26598:	01400104 	movi	r5,4
   2659c:	00294700 	call	29470 <_calloc_r>
   265a0:	88801315 	stw	r2,76(r17)
   265a4:	103fec1e 	bne	r2,zero,26558 <__alt_data_end+0xfffe6558>
   265a8:	0005883a 	mov	r2,zero
   265ac:	003ff306 	br	2657c <__alt_data_end+0xfffe657c>
   265b0:	01400044 	movi	r5,1
   265b4:	2c24983a 	sll	r18,r5,r16
   265b8:	8809883a 	mov	r4,r17
   265bc:	91800144 	addi	r6,r18,5
   265c0:	318d883a 	add	r6,r6,r6
   265c4:	318d883a 	add	r6,r6,r6
   265c8:	00294700 	call	29470 <_calloc_r>
   265cc:	103ff626 	beq	r2,zero,265a8 <__alt_data_end+0xfffe65a8>
   265d0:	14000115 	stw	r16,4(r2)
   265d4:	14800215 	stw	r18,8(r2)
   265d8:	003fe606 	br	26574 <__alt_data_end+0xfffe6574>

000265dc <_Bfree>:
   265dc:	28000826 	beq	r5,zero,26600 <_Bfree+0x24>
   265e0:	28c00117 	ldw	r3,4(r5)
   265e4:	20801317 	ldw	r2,76(r4)
   265e8:	18c7883a 	add	r3,r3,r3
   265ec:	18c7883a 	add	r3,r3,r3
   265f0:	10c5883a 	add	r2,r2,r3
   265f4:	10c00017 	ldw	r3,0(r2)
   265f8:	28c00015 	stw	r3,0(r5)
   265fc:	11400015 	stw	r5,0(r2)
   26600:	f800283a 	ret

00026604 <__multadd>:
   26604:	defffa04 	addi	sp,sp,-24
   26608:	dc800315 	stw	r18,12(sp)
   2660c:	dc400215 	stw	r17,8(sp)
   26610:	dc000115 	stw	r16,4(sp)
   26614:	2823883a 	mov	r17,r5
   26618:	2c000417 	ldw	r16,16(r5)
   2661c:	dfc00515 	stw	ra,20(sp)
   26620:	dcc00415 	stw	r19,16(sp)
   26624:	2025883a 	mov	r18,r4
   26628:	29400504 	addi	r5,r5,20
   2662c:	0011883a 	mov	r8,zero
   26630:	28c00017 	ldw	r3,0(r5)
   26634:	29400104 	addi	r5,r5,4
   26638:	42000044 	addi	r8,r8,1
   2663c:	18bfffcc 	andi	r2,r3,65535
   26640:	1185383a 	mul	r2,r2,r6
   26644:	1806d43a 	srli	r3,r3,16
   26648:	11cf883a 	add	r7,r2,r7
   2664c:	3808d43a 	srli	r4,r7,16
   26650:	1987383a 	mul	r3,r3,r6
   26654:	38bfffcc 	andi	r2,r7,65535
   26658:	1907883a 	add	r3,r3,r4
   2665c:	1808943a 	slli	r4,r3,16
   26660:	180ed43a 	srli	r7,r3,16
   26664:	2085883a 	add	r2,r4,r2
   26668:	28bfff15 	stw	r2,-4(r5)
   2666c:	443ff016 	blt	r8,r16,26630 <__alt_data_end+0xfffe6630>
   26670:	38000926 	beq	r7,zero,26698 <__multadd+0x94>
   26674:	88800217 	ldw	r2,8(r17)
   26678:	80800f0e 	bge	r16,r2,266b8 <__multadd+0xb4>
   2667c:	80800144 	addi	r2,r16,5
   26680:	1085883a 	add	r2,r2,r2
   26684:	1085883a 	add	r2,r2,r2
   26688:	8885883a 	add	r2,r17,r2
   2668c:	11c00015 	stw	r7,0(r2)
   26690:	84000044 	addi	r16,r16,1
   26694:	8c000415 	stw	r16,16(r17)
   26698:	8805883a 	mov	r2,r17
   2669c:	dfc00517 	ldw	ra,20(sp)
   266a0:	dcc00417 	ldw	r19,16(sp)
   266a4:	dc800317 	ldw	r18,12(sp)
   266a8:	dc400217 	ldw	r17,8(sp)
   266ac:	dc000117 	ldw	r16,4(sp)
   266b0:	dec00604 	addi	sp,sp,24
   266b4:	f800283a 	ret
   266b8:	89400117 	ldw	r5,4(r17)
   266bc:	9009883a 	mov	r4,r18
   266c0:	d9c00015 	stw	r7,0(sp)
   266c4:	29400044 	addi	r5,r5,1
   266c8:	00265340 	call	26534 <_Balloc>
   266cc:	89800417 	ldw	r6,16(r17)
   266d0:	89400304 	addi	r5,r17,12
   266d4:	11000304 	addi	r4,r2,12
   266d8:	31800084 	addi	r6,r6,2
   266dc:	318d883a 	add	r6,r6,r6
   266e0:	318d883a 	add	r6,r6,r6
   266e4:	1027883a 	mov	r19,r2
   266e8:	00261680 	call	26168 <memcpy>
   266ec:	d9c00017 	ldw	r7,0(sp)
   266f0:	88000a26 	beq	r17,zero,2671c <__multadd+0x118>
   266f4:	88c00117 	ldw	r3,4(r17)
   266f8:	90801317 	ldw	r2,76(r18)
   266fc:	18c7883a 	add	r3,r3,r3
   26700:	18c7883a 	add	r3,r3,r3
   26704:	10c5883a 	add	r2,r2,r3
   26708:	10c00017 	ldw	r3,0(r2)
   2670c:	88c00015 	stw	r3,0(r17)
   26710:	14400015 	stw	r17,0(r2)
   26714:	9823883a 	mov	r17,r19
   26718:	003fd806 	br	2667c <__alt_data_end+0xfffe667c>
   2671c:	9823883a 	mov	r17,r19
   26720:	003fd606 	br	2667c <__alt_data_end+0xfffe667c>

00026724 <__s2b>:
   26724:	defff904 	addi	sp,sp,-28
   26728:	dc400115 	stw	r17,4(sp)
   2672c:	dc000015 	stw	r16,0(sp)
   26730:	2023883a 	mov	r17,r4
   26734:	2821883a 	mov	r16,r5
   26738:	39000204 	addi	r4,r7,8
   2673c:	01400244 	movi	r5,9
   26740:	dcc00315 	stw	r19,12(sp)
   26744:	dc800215 	stw	r18,8(sp)
   26748:	dfc00615 	stw	ra,24(sp)
   2674c:	dd400515 	stw	r21,20(sp)
   26750:	dd000415 	stw	r20,16(sp)
   26754:	3825883a 	mov	r18,r7
   26758:	3027883a 	mov	r19,r6
   2675c:	002a7a00 	call	2a7a0 <__divsi3>
   26760:	00c00044 	movi	r3,1
   26764:	000b883a 	mov	r5,zero
   26768:	1880030e 	bge	r3,r2,26778 <__s2b+0x54>
   2676c:	18c7883a 	add	r3,r3,r3
   26770:	29400044 	addi	r5,r5,1
   26774:	18bffd16 	blt	r3,r2,2676c <__alt_data_end+0xfffe676c>
   26778:	8809883a 	mov	r4,r17
   2677c:	00265340 	call	26534 <_Balloc>
   26780:	d8c00717 	ldw	r3,28(sp)
   26784:	10c00515 	stw	r3,20(r2)
   26788:	00c00044 	movi	r3,1
   2678c:	10c00415 	stw	r3,16(r2)
   26790:	00c00244 	movi	r3,9
   26794:	1cc0210e 	bge	r3,r19,2681c <__s2b+0xf8>
   26798:	80eb883a 	add	r21,r16,r3
   2679c:	a829883a 	mov	r20,r21
   267a0:	84e1883a 	add	r16,r16,r19
   267a4:	a1c00007 	ldb	r7,0(r20)
   267a8:	01800284 	movi	r6,10
   267ac:	a5000044 	addi	r20,r20,1
   267b0:	100b883a 	mov	r5,r2
   267b4:	39fff404 	addi	r7,r7,-48
   267b8:	8809883a 	mov	r4,r17
   267bc:	00266040 	call	26604 <__multadd>
   267c0:	a43ff81e 	bne	r20,r16,267a4 <__alt_data_end+0xfffe67a4>
   267c4:	ace1883a 	add	r16,r21,r19
   267c8:	843ffe04 	addi	r16,r16,-8
   267cc:	9c800a0e 	bge	r19,r18,267f8 <__s2b+0xd4>
   267d0:	94e5c83a 	sub	r18,r18,r19
   267d4:	84a5883a 	add	r18,r16,r18
   267d8:	81c00007 	ldb	r7,0(r16)
   267dc:	01800284 	movi	r6,10
   267e0:	84000044 	addi	r16,r16,1
   267e4:	100b883a 	mov	r5,r2
   267e8:	39fff404 	addi	r7,r7,-48
   267ec:	8809883a 	mov	r4,r17
   267f0:	00266040 	call	26604 <__multadd>
   267f4:	84bff81e 	bne	r16,r18,267d8 <__alt_data_end+0xfffe67d8>
   267f8:	dfc00617 	ldw	ra,24(sp)
   267fc:	dd400517 	ldw	r21,20(sp)
   26800:	dd000417 	ldw	r20,16(sp)
   26804:	dcc00317 	ldw	r19,12(sp)
   26808:	dc800217 	ldw	r18,8(sp)
   2680c:	dc400117 	ldw	r17,4(sp)
   26810:	dc000017 	ldw	r16,0(sp)
   26814:	dec00704 	addi	sp,sp,28
   26818:	f800283a 	ret
   2681c:	84000284 	addi	r16,r16,10
   26820:	1827883a 	mov	r19,r3
   26824:	003fe906 	br	267cc <__alt_data_end+0xfffe67cc>

00026828 <__hi0bits>:
   26828:	20bfffec 	andhi	r2,r4,65535
   2682c:	1000141e 	bne	r2,zero,26880 <__hi0bits+0x58>
   26830:	2008943a 	slli	r4,r4,16
   26834:	00800404 	movi	r2,16
   26838:	20ffc02c 	andhi	r3,r4,65280
   2683c:	1800021e 	bne	r3,zero,26848 <__hi0bits+0x20>
   26840:	2008923a 	slli	r4,r4,8
   26844:	10800204 	addi	r2,r2,8
   26848:	20fc002c 	andhi	r3,r4,61440
   2684c:	1800021e 	bne	r3,zero,26858 <__hi0bits+0x30>
   26850:	2008913a 	slli	r4,r4,4
   26854:	10800104 	addi	r2,r2,4
   26858:	20f0002c 	andhi	r3,r4,49152
   2685c:	1800031e 	bne	r3,zero,2686c <__hi0bits+0x44>
   26860:	2109883a 	add	r4,r4,r4
   26864:	10800084 	addi	r2,r2,2
   26868:	2109883a 	add	r4,r4,r4
   2686c:	20000316 	blt	r4,zero,2687c <__hi0bits+0x54>
   26870:	2110002c 	andhi	r4,r4,16384
   26874:	2000041e 	bne	r4,zero,26888 <__hi0bits+0x60>
   26878:	00800804 	movi	r2,32
   2687c:	f800283a 	ret
   26880:	0005883a 	mov	r2,zero
   26884:	003fec06 	br	26838 <__alt_data_end+0xfffe6838>
   26888:	10800044 	addi	r2,r2,1
   2688c:	f800283a 	ret

00026890 <__lo0bits>:
   26890:	20c00017 	ldw	r3,0(r4)
   26894:	188001cc 	andi	r2,r3,7
   26898:	10000826 	beq	r2,zero,268bc <__lo0bits+0x2c>
   2689c:	1880004c 	andi	r2,r3,1
   268a0:	1000211e 	bne	r2,zero,26928 <__lo0bits+0x98>
   268a4:	1880008c 	andi	r2,r3,2
   268a8:	1000211e 	bne	r2,zero,26930 <__lo0bits+0xa0>
   268ac:	1806d0ba 	srli	r3,r3,2
   268b0:	00800084 	movi	r2,2
   268b4:	20c00015 	stw	r3,0(r4)
   268b8:	f800283a 	ret
   268bc:	18bfffcc 	andi	r2,r3,65535
   268c0:	10001326 	beq	r2,zero,26910 <__lo0bits+0x80>
   268c4:	0005883a 	mov	r2,zero
   268c8:	19403fcc 	andi	r5,r3,255
   268cc:	2800021e 	bne	r5,zero,268d8 <__lo0bits+0x48>
   268d0:	1806d23a 	srli	r3,r3,8
   268d4:	10800204 	addi	r2,r2,8
   268d8:	194003cc 	andi	r5,r3,15
   268dc:	2800021e 	bne	r5,zero,268e8 <__lo0bits+0x58>
   268e0:	1806d13a 	srli	r3,r3,4
   268e4:	10800104 	addi	r2,r2,4
   268e8:	194000cc 	andi	r5,r3,3
   268ec:	2800021e 	bne	r5,zero,268f8 <__lo0bits+0x68>
   268f0:	1806d0ba 	srli	r3,r3,2
   268f4:	10800084 	addi	r2,r2,2
   268f8:	1940004c 	andi	r5,r3,1
   268fc:	2800081e 	bne	r5,zero,26920 <__lo0bits+0x90>
   26900:	1806d07a 	srli	r3,r3,1
   26904:	1800051e 	bne	r3,zero,2691c <__lo0bits+0x8c>
   26908:	00800804 	movi	r2,32
   2690c:	f800283a 	ret
   26910:	1806d43a 	srli	r3,r3,16
   26914:	00800404 	movi	r2,16
   26918:	003feb06 	br	268c8 <__alt_data_end+0xfffe68c8>
   2691c:	10800044 	addi	r2,r2,1
   26920:	20c00015 	stw	r3,0(r4)
   26924:	f800283a 	ret
   26928:	0005883a 	mov	r2,zero
   2692c:	f800283a 	ret
   26930:	1806d07a 	srli	r3,r3,1
   26934:	00800044 	movi	r2,1
   26938:	20c00015 	stw	r3,0(r4)
   2693c:	f800283a 	ret

00026940 <__i2b>:
   26940:	defffd04 	addi	sp,sp,-12
   26944:	dc000015 	stw	r16,0(sp)
   26948:	04000044 	movi	r16,1
   2694c:	dc400115 	stw	r17,4(sp)
   26950:	2823883a 	mov	r17,r5
   26954:	800b883a 	mov	r5,r16
   26958:	dfc00215 	stw	ra,8(sp)
   2695c:	00265340 	call	26534 <_Balloc>
   26960:	14400515 	stw	r17,20(r2)
   26964:	14000415 	stw	r16,16(r2)
   26968:	dfc00217 	ldw	ra,8(sp)
   2696c:	dc400117 	ldw	r17,4(sp)
   26970:	dc000017 	ldw	r16,0(sp)
   26974:	dec00304 	addi	sp,sp,12
   26978:	f800283a 	ret

0002697c <__multiply>:
   2697c:	defffa04 	addi	sp,sp,-24
   26980:	dcc00315 	stw	r19,12(sp)
   26984:	dc800215 	stw	r18,8(sp)
   26988:	34c00417 	ldw	r19,16(r6)
   2698c:	2c800417 	ldw	r18,16(r5)
   26990:	dd000415 	stw	r20,16(sp)
   26994:	dc400115 	stw	r17,4(sp)
   26998:	dfc00515 	stw	ra,20(sp)
   2699c:	dc000015 	stw	r16,0(sp)
   269a0:	2829883a 	mov	r20,r5
   269a4:	3023883a 	mov	r17,r6
   269a8:	94c0050e 	bge	r18,r19,269c0 <__multiply+0x44>
   269ac:	9007883a 	mov	r3,r18
   269b0:	3029883a 	mov	r20,r6
   269b4:	9825883a 	mov	r18,r19
   269b8:	2823883a 	mov	r17,r5
   269bc:	1827883a 	mov	r19,r3
   269c0:	a0800217 	ldw	r2,8(r20)
   269c4:	94e1883a 	add	r16,r18,r19
   269c8:	a1400117 	ldw	r5,4(r20)
   269cc:	1400010e 	bge	r2,r16,269d4 <__multiply+0x58>
   269d0:	29400044 	addi	r5,r5,1
   269d4:	00265340 	call	26534 <_Balloc>
   269d8:	8415883a 	add	r10,r16,r16
   269dc:	12c00504 	addi	r11,r2,20
   269e0:	5295883a 	add	r10,r10,r10
   269e4:	5a95883a 	add	r10,r11,r10
   269e8:	5807883a 	mov	r3,r11
   269ec:	5a80032e 	bgeu	r11,r10,269fc <__multiply+0x80>
   269f0:	18000015 	stw	zero,0(r3)
   269f4:	18c00104 	addi	r3,r3,4
   269f8:	1abffd36 	bltu	r3,r10,269f0 <__alt_data_end+0xfffe69f0>
   269fc:	9ce7883a 	add	r19,r19,r19
   26a00:	94a5883a 	add	r18,r18,r18
   26a04:	89800504 	addi	r6,r17,20
   26a08:	9ce7883a 	add	r19,r19,r19
   26a0c:	a3400504 	addi	r13,r20,20
   26a10:	94a5883a 	add	r18,r18,r18
   26a14:	34d9883a 	add	r12,r6,r19
   26a18:	6c93883a 	add	r9,r13,r18
   26a1c:	3300422e 	bgeu	r6,r12,26b28 <__multiply+0x1ac>
   26a20:	37c00017 	ldw	ra,0(r6)
   26a24:	fbffffcc 	andi	r15,ra,65535
   26a28:	78001b26 	beq	r15,zero,26a98 <__multiply+0x11c>
   26a2c:	5811883a 	mov	r8,r11
   26a30:	681d883a 	mov	r14,r13
   26a34:	000f883a 	mov	r7,zero
   26a38:	71000017 	ldw	r4,0(r14)
   26a3c:	40c00017 	ldw	r3,0(r8)
   26a40:	73800104 	addi	r14,r14,4
   26a44:	217fffcc 	andi	r5,r4,65535
   26a48:	2bcb383a 	mul	r5,r5,r15
   26a4c:	2008d43a 	srli	r4,r4,16
   26a50:	1c7fffcc 	andi	r17,r3,65535
   26a54:	2c4b883a 	add	r5,r5,r17
   26a58:	29cb883a 	add	r5,r5,r7
   26a5c:	23c9383a 	mul	r4,r4,r15
   26a60:	1806d43a 	srli	r3,r3,16
   26a64:	280ed43a 	srli	r7,r5,16
   26a68:	297fffcc 	andi	r5,r5,65535
   26a6c:	20c7883a 	add	r3,r4,r3
   26a70:	19c7883a 	add	r3,r3,r7
   26a74:	1808943a 	slli	r4,r3,16
   26a78:	4023883a 	mov	r17,r8
   26a7c:	180ed43a 	srli	r7,r3,16
   26a80:	214ab03a 	or	r5,r4,r5
   26a84:	41400015 	stw	r5,0(r8)
   26a88:	42000104 	addi	r8,r8,4
   26a8c:	727fea36 	bltu	r14,r9,26a38 <__alt_data_end+0xfffe6a38>
   26a90:	89c00115 	stw	r7,4(r17)
   26a94:	37c00017 	ldw	ra,0(r6)
   26a98:	f83ed43a 	srli	ra,ra,16
   26a9c:	f8001f26 	beq	ra,zero,26b1c <__multiply+0x1a0>
   26aa0:	58c00017 	ldw	r3,0(r11)
   26aa4:	681d883a 	mov	r14,r13
   26aa8:	581f883a 	mov	r15,r11
   26aac:	1811883a 	mov	r8,r3
   26ab0:	5825883a 	mov	r18,r11
   26ab4:	000f883a 	mov	r7,zero
   26ab8:	00000106 	br	26ac0 <__multiply+0x144>
   26abc:	8825883a 	mov	r18,r17
   26ac0:	7140000b 	ldhu	r5,0(r14)
   26ac4:	4010d43a 	srli	r8,r8,16
   26ac8:	193fffcc 	andi	r4,r3,65535
   26acc:	2fcb383a 	mul	r5,r5,ra
   26ad0:	7bc00104 	addi	r15,r15,4
   26ad4:	73800104 	addi	r14,r14,4
   26ad8:	2a0b883a 	add	r5,r5,r8
   26adc:	29cb883a 	add	r5,r5,r7
   26ae0:	2806943a 	slli	r3,r5,16
   26ae4:	94400104 	addi	r17,r18,4
   26ae8:	280ad43a 	srli	r5,r5,16
   26aec:	1908b03a 	or	r4,r3,r4
   26af0:	793fff15 	stw	r4,-4(r15)
   26af4:	70ffff17 	ldw	r3,-4(r14)
   26af8:	8a000017 	ldw	r8,0(r17)
   26afc:	1806d43a 	srli	r3,r3,16
   26b00:	413fffcc 	andi	r4,r8,65535
   26b04:	1fc7383a 	mul	r3,r3,ra
   26b08:	1907883a 	add	r3,r3,r4
   26b0c:	1947883a 	add	r3,r3,r5
   26b10:	180ed43a 	srli	r7,r3,16
   26b14:	727fe936 	bltu	r14,r9,26abc <__alt_data_end+0xfffe6abc>
   26b18:	90c00115 	stw	r3,4(r18)
   26b1c:	31800104 	addi	r6,r6,4
   26b20:	5ac00104 	addi	r11,r11,4
   26b24:	333fbe36 	bltu	r6,r12,26a20 <__alt_data_end+0xfffe6a20>
   26b28:	0400090e 	bge	zero,r16,26b50 <__multiply+0x1d4>
   26b2c:	50ffff17 	ldw	r3,-4(r10)
   26b30:	52bfff04 	addi	r10,r10,-4
   26b34:	18000326 	beq	r3,zero,26b44 <__multiply+0x1c8>
   26b38:	00000506 	br	26b50 <__multiply+0x1d4>
   26b3c:	50c00017 	ldw	r3,0(r10)
   26b40:	1800031e 	bne	r3,zero,26b50 <__multiply+0x1d4>
   26b44:	843fffc4 	addi	r16,r16,-1
   26b48:	52bfff04 	addi	r10,r10,-4
   26b4c:	803ffb1e 	bne	r16,zero,26b3c <__alt_data_end+0xfffe6b3c>
   26b50:	14000415 	stw	r16,16(r2)
   26b54:	dfc00517 	ldw	ra,20(sp)
   26b58:	dd000417 	ldw	r20,16(sp)
   26b5c:	dcc00317 	ldw	r19,12(sp)
   26b60:	dc800217 	ldw	r18,8(sp)
   26b64:	dc400117 	ldw	r17,4(sp)
   26b68:	dc000017 	ldw	r16,0(sp)
   26b6c:	dec00604 	addi	sp,sp,24
   26b70:	f800283a 	ret

00026b74 <__pow5mult>:
   26b74:	defffa04 	addi	sp,sp,-24
   26b78:	dcc00315 	stw	r19,12(sp)
   26b7c:	dc000015 	stw	r16,0(sp)
   26b80:	dfc00515 	stw	ra,20(sp)
   26b84:	dd000415 	stw	r20,16(sp)
   26b88:	dc800215 	stw	r18,8(sp)
   26b8c:	dc400115 	stw	r17,4(sp)
   26b90:	308000cc 	andi	r2,r6,3
   26b94:	3021883a 	mov	r16,r6
   26b98:	2027883a 	mov	r19,r4
   26b9c:	10002f1e 	bne	r2,zero,26c5c <__pow5mult+0xe8>
   26ba0:	2825883a 	mov	r18,r5
   26ba4:	8021d0ba 	srai	r16,r16,2
   26ba8:	80001a26 	beq	r16,zero,26c14 <__pow5mult+0xa0>
   26bac:	9c401217 	ldw	r17,72(r19)
   26bb0:	8800061e 	bne	r17,zero,26bcc <__pow5mult+0x58>
   26bb4:	00003406 	br	26c88 <__pow5mult+0x114>
   26bb8:	8021d07a 	srai	r16,r16,1
   26bbc:	80001526 	beq	r16,zero,26c14 <__pow5mult+0xa0>
   26bc0:	88800017 	ldw	r2,0(r17)
   26bc4:	10001c26 	beq	r2,zero,26c38 <__pow5mult+0xc4>
   26bc8:	1023883a 	mov	r17,r2
   26bcc:	8080004c 	andi	r2,r16,1
   26bd0:	103ff926 	beq	r2,zero,26bb8 <__alt_data_end+0xfffe6bb8>
   26bd4:	880d883a 	mov	r6,r17
   26bd8:	900b883a 	mov	r5,r18
   26bdc:	9809883a 	mov	r4,r19
   26be0:	002697c0 	call	2697c <__multiply>
   26be4:	90001b26 	beq	r18,zero,26c54 <__pow5mult+0xe0>
   26be8:	91000117 	ldw	r4,4(r18)
   26bec:	98c01317 	ldw	r3,76(r19)
   26bf0:	8021d07a 	srai	r16,r16,1
   26bf4:	2109883a 	add	r4,r4,r4
   26bf8:	2109883a 	add	r4,r4,r4
   26bfc:	1907883a 	add	r3,r3,r4
   26c00:	19000017 	ldw	r4,0(r3)
   26c04:	91000015 	stw	r4,0(r18)
   26c08:	1c800015 	stw	r18,0(r3)
   26c0c:	1025883a 	mov	r18,r2
   26c10:	803feb1e 	bne	r16,zero,26bc0 <__alt_data_end+0xfffe6bc0>
   26c14:	9005883a 	mov	r2,r18
   26c18:	dfc00517 	ldw	ra,20(sp)
   26c1c:	dd000417 	ldw	r20,16(sp)
   26c20:	dcc00317 	ldw	r19,12(sp)
   26c24:	dc800217 	ldw	r18,8(sp)
   26c28:	dc400117 	ldw	r17,4(sp)
   26c2c:	dc000017 	ldw	r16,0(sp)
   26c30:	dec00604 	addi	sp,sp,24
   26c34:	f800283a 	ret
   26c38:	880d883a 	mov	r6,r17
   26c3c:	880b883a 	mov	r5,r17
   26c40:	9809883a 	mov	r4,r19
   26c44:	002697c0 	call	2697c <__multiply>
   26c48:	88800015 	stw	r2,0(r17)
   26c4c:	10000015 	stw	zero,0(r2)
   26c50:	003fdd06 	br	26bc8 <__alt_data_end+0xfffe6bc8>
   26c54:	1025883a 	mov	r18,r2
   26c58:	003fd706 	br	26bb8 <__alt_data_end+0xfffe6bb8>
   26c5c:	10bfffc4 	addi	r2,r2,-1
   26c60:	1085883a 	add	r2,r2,r2
   26c64:	00c000f4 	movhi	r3,3
   26c68:	18fd3e04 	addi	r3,r3,-2824
   26c6c:	1085883a 	add	r2,r2,r2
   26c70:	1885883a 	add	r2,r3,r2
   26c74:	11800017 	ldw	r6,0(r2)
   26c78:	000f883a 	mov	r7,zero
   26c7c:	00266040 	call	26604 <__multadd>
   26c80:	1025883a 	mov	r18,r2
   26c84:	003fc706 	br	26ba4 <__alt_data_end+0xfffe6ba4>
   26c88:	05000044 	movi	r20,1
   26c8c:	a00b883a 	mov	r5,r20
   26c90:	9809883a 	mov	r4,r19
   26c94:	00265340 	call	26534 <_Balloc>
   26c98:	1023883a 	mov	r17,r2
   26c9c:	00809c44 	movi	r2,625
   26ca0:	88800515 	stw	r2,20(r17)
   26ca4:	8d000415 	stw	r20,16(r17)
   26ca8:	9c401215 	stw	r17,72(r19)
   26cac:	88000015 	stw	zero,0(r17)
   26cb0:	003fc606 	br	26bcc <__alt_data_end+0xfffe6bcc>

00026cb4 <__lshift>:
   26cb4:	defff904 	addi	sp,sp,-28
   26cb8:	dd400515 	stw	r21,20(sp)
   26cbc:	dcc00315 	stw	r19,12(sp)
   26cc0:	302bd17a 	srai	r21,r6,5
   26cc4:	2cc00417 	ldw	r19,16(r5)
   26cc8:	28800217 	ldw	r2,8(r5)
   26ccc:	dd000415 	stw	r20,16(sp)
   26cd0:	ace7883a 	add	r19,r21,r19
   26cd4:	dc800215 	stw	r18,8(sp)
   26cd8:	dc400115 	stw	r17,4(sp)
   26cdc:	dc000015 	stw	r16,0(sp)
   26ce0:	dfc00615 	stw	ra,24(sp)
   26ce4:	9c000044 	addi	r16,r19,1
   26ce8:	2823883a 	mov	r17,r5
   26cec:	3029883a 	mov	r20,r6
   26cf0:	2025883a 	mov	r18,r4
   26cf4:	29400117 	ldw	r5,4(r5)
   26cf8:	1400030e 	bge	r2,r16,26d08 <__lshift+0x54>
   26cfc:	1085883a 	add	r2,r2,r2
   26d00:	29400044 	addi	r5,r5,1
   26d04:	143ffd16 	blt	r2,r16,26cfc <__alt_data_end+0xfffe6cfc>
   26d08:	9009883a 	mov	r4,r18
   26d0c:	00265340 	call	26534 <_Balloc>
   26d10:	10c00504 	addi	r3,r2,20
   26d14:	0540070e 	bge	zero,r21,26d34 <__lshift+0x80>
   26d18:	ad6b883a 	add	r21,r21,r21
   26d1c:	ad6b883a 	add	r21,r21,r21
   26d20:	1809883a 	mov	r4,r3
   26d24:	1d47883a 	add	r3,r3,r21
   26d28:	20000015 	stw	zero,0(r4)
   26d2c:	21000104 	addi	r4,r4,4
   26d30:	193ffd1e 	bne	r3,r4,26d28 <__alt_data_end+0xfffe6d28>
   26d34:	8a000417 	ldw	r8,16(r17)
   26d38:	89000504 	addi	r4,r17,20
   26d3c:	a18007cc 	andi	r6,r20,31
   26d40:	4211883a 	add	r8,r8,r8
   26d44:	4211883a 	add	r8,r8,r8
   26d48:	2211883a 	add	r8,r4,r8
   26d4c:	30002326 	beq	r6,zero,26ddc <__lshift+0x128>
   26d50:	02400804 	movi	r9,32
   26d54:	4993c83a 	sub	r9,r9,r6
   26d58:	000b883a 	mov	r5,zero
   26d5c:	21c00017 	ldw	r7,0(r4)
   26d60:	1815883a 	mov	r10,r3
   26d64:	18c00104 	addi	r3,r3,4
   26d68:	398e983a 	sll	r7,r7,r6
   26d6c:	21000104 	addi	r4,r4,4
   26d70:	394ab03a 	or	r5,r7,r5
   26d74:	197fff15 	stw	r5,-4(r3)
   26d78:	217fff17 	ldw	r5,-4(r4)
   26d7c:	2a4ad83a 	srl	r5,r5,r9
   26d80:	223ff636 	bltu	r4,r8,26d5c <__alt_data_end+0xfffe6d5c>
   26d84:	51400115 	stw	r5,4(r10)
   26d88:	28001a1e 	bne	r5,zero,26df4 <__lshift+0x140>
   26d8c:	843fffc4 	addi	r16,r16,-1
   26d90:	14000415 	stw	r16,16(r2)
   26d94:	88000826 	beq	r17,zero,26db8 <__lshift+0x104>
   26d98:	89000117 	ldw	r4,4(r17)
   26d9c:	90c01317 	ldw	r3,76(r18)
   26da0:	2109883a 	add	r4,r4,r4
   26da4:	2109883a 	add	r4,r4,r4
   26da8:	1907883a 	add	r3,r3,r4
   26dac:	19000017 	ldw	r4,0(r3)
   26db0:	89000015 	stw	r4,0(r17)
   26db4:	1c400015 	stw	r17,0(r3)
   26db8:	dfc00617 	ldw	ra,24(sp)
   26dbc:	dd400517 	ldw	r21,20(sp)
   26dc0:	dd000417 	ldw	r20,16(sp)
   26dc4:	dcc00317 	ldw	r19,12(sp)
   26dc8:	dc800217 	ldw	r18,8(sp)
   26dcc:	dc400117 	ldw	r17,4(sp)
   26dd0:	dc000017 	ldw	r16,0(sp)
   26dd4:	dec00704 	addi	sp,sp,28
   26dd8:	f800283a 	ret
   26ddc:	21400017 	ldw	r5,0(r4)
   26de0:	18c00104 	addi	r3,r3,4
   26de4:	21000104 	addi	r4,r4,4
   26de8:	197fff15 	stw	r5,-4(r3)
   26dec:	223ffb36 	bltu	r4,r8,26ddc <__alt_data_end+0xfffe6ddc>
   26df0:	003fe606 	br	26d8c <__alt_data_end+0xfffe6d8c>
   26df4:	9c000084 	addi	r16,r19,2
   26df8:	003fe406 	br	26d8c <__alt_data_end+0xfffe6d8c>

00026dfc <__mcmp>:
   26dfc:	20800417 	ldw	r2,16(r4)
   26e00:	28c00417 	ldw	r3,16(r5)
   26e04:	10c5c83a 	sub	r2,r2,r3
   26e08:	1000111e 	bne	r2,zero,26e50 <__mcmp+0x54>
   26e0c:	18c7883a 	add	r3,r3,r3
   26e10:	18c7883a 	add	r3,r3,r3
   26e14:	21000504 	addi	r4,r4,20
   26e18:	29400504 	addi	r5,r5,20
   26e1c:	20c5883a 	add	r2,r4,r3
   26e20:	28cb883a 	add	r5,r5,r3
   26e24:	00000106 	br	26e2c <__mcmp+0x30>
   26e28:	20800a2e 	bgeu	r4,r2,26e54 <__mcmp+0x58>
   26e2c:	10bfff04 	addi	r2,r2,-4
   26e30:	297fff04 	addi	r5,r5,-4
   26e34:	11800017 	ldw	r6,0(r2)
   26e38:	28c00017 	ldw	r3,0(r5)
   26e3c:	30fffa26 	beq	r6,r3,26e28 <__alt_data_end+0xfffe6e28>
   26e40:	30c00236 	bltu	r6,r3,26e4c <__mcmp+0x50>
   26e44:	00800044 	movi	r2,1
   26e48:	f800283a 	ret
   26e4c:	00bfffc4 	movi	r2,-1
   26e50:	f800283a 	ret
   26e54:	0005883a 	mov	r2,zero
   26e58:	f800283a 	ret

00026e5c <__mdiff>:
   26e5c:	28c00417 	ldw	r3,16(r5)
   26e60:	30800417 	ldw	r2,16(r6)
   26e64:	defffa04 	addi	sp,sp,-24
   26e68:	dcc00315 	stw	r19,12(sp)
   26e6c:	dc800215 	stw	r18,8(sp)
   26e70:	dfc00515 	stw	ra,20(sp)
   26e74:	dd000415 	stw	r20,16(sp)
   26e78:	dc400115 	stw	r17,4(sp)
   26e7c:	dc000015 	stw	r16,0(sp)
   26e80:	1887c83a 	sub	r3,r3,r2
   26e84:	2825883a 	mov	r18,r5
   26e88:	3027883a 	mov	r19,r6
   26e8c:	1800141e 	bne	r3,zero,26ee0 <__mdiff+0x84>
   26e90:	1085883a 	add	r2,r2,r2
   26e94:	1085883a 	add	r2,r2,r2
   26e98:	2a000504 	addi	r8,r5,20
   26e9c:	34000504 	addi	r16,r6,20
   26ea0:	4087883a 	add	r3,r8,r2
   26ea4:	8085883a 	add	r2,r16,r2
   26ea8:	00000106 	br	26eb0 <__mdiff+0x54>
   26eac:	40c0592e 	bgeu	r8,r3,27014 <__mdiff+0x1b8>
   26eb0:	18ffff04 	addi	r3,r3,-4
   26eb4:	10bfff04 	addi	r2,r2,-4
   26eb8:	19c00017 	ldw	r7,0(r3)
   26ebc:	11400017 	ldw	r5,0(r2)
   26ec0:	397ffa26 	beq	r7,r5,26eac <__alt_data_end+0xfffe6eac>
   26ec4:	3940592e 	bgeu	r7,r5,2702c <__mdiff+0x1d0>
   26ec8:	9005883a 	mov	r2,r18
   26ecc:	4023883a 	mov	r17,r8
   26ed0:	9825883a 	mov	r18,r19
   26ed4:	05000044 	movi	r20,1
   26ed8:	1027883a 	mov	r19,r2
   26edc:	00000406 	br	26ef0 <__mdiff+0x94>
   26ee0:	18005616 	blt	r3,zero,2703c <__mdiff+0x1e0>
   26ee4:	34400504 	addi	r17,r6,20
   26ee8:	2c000504 	addi	r16,r5,20
   26eec:	0029883a 	mov	r20,zero
   26ef0:	91400117 	ldw	r5,4(r18)
   26ef4:	00265340 	call	26534 <_Balloc>
   26ef8:	92400417 	ldw	r9,16(r18)
   26efc:	9b000417 	ldw	r12,16(r19)
   26f00:	12c00504 	addi	r11,r2,20
   26f04:	4a51883a 	add	r8,r9,r9
   26f08:	6319883a 	add	r12,r12,r12
   26f0c:	4211883a 	add	r8,r8,r8
   26f10:	6319883a 	add	r12,r12,r12
   26f14:	15000315 	stw	r20,12(r2)
   26f18:	8211883a 	add	r8,r16,r8
   26f1c:	8b19883a 	add	r12,r17,r12
   26f20:	0007883a 	mov	r3,zero
   26f24:	81400017 	ldw	r5,0(r16)
   26f28:	89c00017 	ldw	r7,0(r17)
   26f2c:	59800104 	addi	r6,r11,4
   26f30:	293fffcc 	andi	r4,r5,65535
   26f34:	20c7883a 	add	r3,r4,r3
   26f38:	393fffcc 	andi	r4,r7,65535
   26f3c:	1909c83a 	sub	r4,r3,r4
   26f40:	280ad43a 	srli	r5,r5,16
   26f44:	380ed43a 	srli	r7,r7,16
   26f48:	2007d43a 	srai	r3,r4,16
   26f4c:	213fffcc 	andi	r4,r4,65535
   26f50:	29cbc83a 	sub	r5,r5,r7
   26f54:	28c7883a 	add	r3,r5,r3
   26f58:	180a943a 	slli	r5,r3,16
   26f5c:	8c400104 	addi	r17,r17,4
   26f60:	84000104 	addi	r16,r16,4
   26f64:	2908b03a 	or	r4,r5,r4
   26f68:	59000015 	stw	r4,0(r11)
   26f6c:	1807d43a 	srai	r3,r3,16
   26f70:	3015883a 	mov	r10,r6
   26f74:	3017883a 	mov	r11,r6
   26f78:	8b3fea36 	bltu	r17,r12,26f24 <__alt_data_end+0xfffe6f24>
   26f7c:	8200162e 	bgeu	r16,r8,26fd8 <__mdiff+0x17c>
   26f80:	8017883a 	mov	r11,r16
   26f84:	59400017 	ldw	r5,0(r11)
   26f88:	31800104 	addi	r6,r6,4
   26f8c:	5ac00104 	addi	r11,r11,4
   26f90:	293fffcc 	andi	r4,r5,65535
   26f94:	20c7883a 	add	r3,r4,r3
   26f98:	280ed43a 	srli	r7,r5,16
   26f9c:	180bd43a 	srai	r5,r3,16
   26fa0:	193fffcc 	andi	r4,r3,65535
   26fa4:	3947883a 	add	r3,r7,r5
   26fa8:	180a943a 	slli	r5,r3,16
   26fac:	1807d43a 	srai	r3,r3,16
   26fb0:	2908b03a 	or	r4,r5,r4
   26fb4:	313fff15 	stw	r4,-4(r6)
   26fb8:	5a3ff236 	bltu	r11,r8,26f84 <__alt_data_end+0xfffe6f84>
   26fbc:	0406303a 	nor	r3,zero,r16
   26fc0:	1a07883a 	add	r3,r3,r8
   26fc4:	1806d0ba 	srli	r3,r3,2
   26fc8:	18c00044 	addi	r3,r3,1
   26fcc:	18c7883a 	add	r3,r3,r3
   26fd0:	18c7883a 	add	r3,r3,r3
   26fd4:	50d5883a 	add	r10,r10,r3
   26fd8:	50ffff04 	addi	r3,r10,-4
   26fdc:	2000041e 	bne	r4,zero,26ff0 <__mdiff+0x194>
   26fe0:	18ffff04 	addi	r3,r3,-4
   26fe4:	19000017 	ldw	r4,0(r3)
   26fe8:	4a7fffc4 	addi	r9,r9,-1
   26fec:	203ffc26 	beq	r4,zero,26fe0 <__alt_data_end+0xfffe6fe0>
   26ff0:	12400415 	stw	r9,16(r2)
   26ff4:	dfc00517 	ldw	ra,20(sp)
   26ff8:	dd000417 	ldw	r20,16(sp)
   26ffc:	dcc00317 	ldw	r19,12(sp)
   27000:	dc800217 	ldw	r18,8(sp)
   27004:	dc400117 	ldw	r17,4(sp)
   27008:	dc000017 	ldw	r16,0(sp)
   2700c:	dec00604 	addi	sp,sp,24
   27010:	f800283a 	ret
   27014:	000b883a 	mov	r5,zero
   27018:	00265340 	call	26534 <_Balloc>
   2701c:	00c00044 	movi	r3,1
   27020:	10c00415 	stw	r3,16(r2)
   27024:	10000515 	stw	zero,20(r2)
   27028:	003ff206 	br	26ff4 <__alt_data_end+0xfffe6ff4>
   2702c:	8023883a 	mov	r17,r16
   27030:	0029883a 	mov	r20,zero
   27034:	4021883a 	mov	r16,r8
   27038:	003fad06 	br	26ef0 <__alt_data_end+0xfffe6ef0>
   2703c:	9005883a 	mov	r2,r18
   27040:	94400504 	addi	r17,r18,20
   27044:	9c000504 	addi	r16,r19,20
   27048:	9825883a 	mov	r18,r19
   2704c:	05000044 	movi	r20,1
   27050:	1027883a 	mov	r19,r2
   27054:	003fa606 	br	26ef0 <__alt_data_end+0xfffe6ef0>

00027058 <__ulp>:
   27058:	295ffc2c 	andhi	r5,r5,32752
   2705c:	00bf3034 	movhi	r2,64704
   27060:	2887883a 	add	r3,r5,r2
   27064:	00c0020e 	bge	zero,r3,27070 <__ulp+0x18>
   27068:	0005883a 	mov	r2,zero
   2706c:	f800283a 	ret
   27070:	00c7c83a 	sub	r3,zero,r3
   27074:	1807d53a 	srai	r3,r3,20
   27078:	008004c4 	movi	r2,19
   2707c:	10c00b0e 	bge	r2,r3,270ac <__ulp+0x54>
   27080:	18bffb04 	addi	r2,r3,-20
   27084:	01000784 	movi	r4,30
   27088:	0007883a 	mov	r3,zero
   2708c:	20800516 	blt	r4,r2,270a4 <__ulp+0x4c>
   27090:	010007c4 	movi	r4,31
   27094:	2089c83a 	sub	r4,r4,r2
   27098:	00800044 	movi	r2,1
   2709c:	1104983a 	sll	r2,r2,r4
   270a0:	f800283a 	ret
   270a4:	00800044 	movi	r2,1
   270a8:	f800283a 	ret
   270ac:	01400234 	movhi	r5,8
   270b0:	28c7d83a 	sra	r3,r5,r3
   270b4:	0005883a 	mov	r2,zero
   270b8:	f800283a 	ret

000270bc <__b2d>:
   270bc:	defffa04 	addi	sp,sp,-24
   270c0:	dc000015 	stw	r16,0(sp)
   270c4:	24000417 	ldw	r16,16(r4)
   270c8:	dc400115 	stw	r17,4(sp)
   270cc:	24400504 	addi	r17,r4,20
   270d0:	8421883a 	add	r16,r16,r16
   270d4:	8421883a 	add	r16,r16,r16
   270d8:	8c21883a 	add	r16,r17,r16
   270dc:	dc800215 	stw	r18,8(sp)
   270e0:	84bfff17 	ldw	r18,-4(r16)
   270e4:	dd000415 	stw	r20,16(sp)
   270e8:	dcc00315 	stw	r19,12(sp)
   270ec:	9009883a 	mov	r4,r18
   270f0:	2829883a 	mov	r20,r5
   270f4:	dfc00515 	stw	ra,20(sp)
   270f8:	00268280 	call	26828 <__hi0bits>
   270fc:	00c00804 	movi	r3,32
   27100:	1889c83a 	sub	r4,r3,r2
   27104:	a1000015 	stw	r4,0(r20)
   27108:	01000284 	movi	r4,10
   2710c:	84ffff04 	addi	r19,r16,-4
   27110:	20801216 	blt	r4,r2,2715c <__b2d+0xa0>
   27114:	018002c4 	movi	r6,11
   27118:	308dc83a 	sub	r6,r6,r2
   2711c:	9186d83a 	srl	r3,r18,r6
   27120:	18cffc34 	orhi	r3,r3,16368
   27124:	8cc0212e 	bgeu	r17,r19,271ac <__b2d+0xf0>
   27128:	813ffe17 	ldw	r4,-8(r16)
   2712c:	218cd83a 	srl	r6,r4,r6
   27130:	10800544 	addi	r2,r2,21
   27134:	9084983a 	sll	r2,r18,r2
   27138:	1184b03a 	or	r2,r2,r6
   2713c:	dfc00517 	ldw	ra,20(sp)
   27140:	dd000417 	ldw	r20,16(sp)
   27144:	dcc00317 	ldw	r19,12(sp)
   27148:	dc800217 	ldw	r18,8(sp)
   2714c:	dc400117 	ldw	r17,4(sp)
   27150:	dc000017 	ldw	r16,0(sp)
   27154:	dec00604 	addi	sp,sp,24
   27158:	f800283a 	ret
   2715c:	8cc00f2e 	bgeu	r17,r19,2719c <__b2d+0xe0>
   27160:	117ffd44 	addi	r5,r2,-11
   27164:	80bffe17 	ldw	r2,-8(r16)
   27168:	28000e26 	beq	r5,zero,271a4 <__b2d+0xe8>
   2716c:	1949c83a 	sub	r4,r3,r5
   27170:	9164983a 	sll	r18,r18,r5
   27174:	1106d83a 	srl	r3,r2,r4
   27178:	81bffe04 	addi	r6,r16,-8
   2717c:	948ffc34 	orhi	r18,r18,16368
   27180:	90c6b03a 	or	r3,r18,r3
   27184:	89800e2e 	bgeu	r17,r6,271c0 <__b2d+0x104>
   27188:	81bffd17 	ldw	r6,-12(r16)
   2718c:	1144983a 	sll	r2,r2,r5
   27190:	310ad83a 	srl	r5,r6,r4
   27194:	2884b03a 	or	r2,r5,r2
   27198:	003fe806 	br	2713c <__alt_data_end+0xfffe713c>
   2719c:	10bffd44 	addi	r2,r2,-11
   271a0:	1000041e 	bne	r2,zero,271b4 <__b2d+0xf8>
   271a4:	90cffc34 	orhi	r3,r18,16368
   271a8:	003fe406 	br	2713c <__alt_data_end+0xfffe713c>
   271ac:	000d883a 	mov	r6,zero
   271b0:	003fdf06 	br	27130 <__alt_data_end+0xfffe7130>
   271b4:	90a4983a 	sll	r18,r18,r2
   271b8:	0005883a 	mov	r2,zero
   271bc:	003ff906 	br	271a4 <__alt_data_end+0xfffe71a4>
   271c0:	1144983a 	sll	r2,r2,r5
   271c4:	003fdd06 	br	2713c <__alt_data_end+0xfffe713c>

000271c8 <__d2b>:
   271c8:	defff804 	addi	sp,sp,-32
   271cc:	dc000215 	stw	r16,8(sp)
   271d0:	3021883a 	mov	r16,r6
   271d4:	dc400315 	stw	r17,12(sp)
   271d8:	8022907a 	slli	r17,r16,1
   271dc:	dd000615 	stw	r20,24(sp)
   271e0:	2829883a 	mov	r20,r5
   271e4:	01400044 	movi	r5,1
   271e8:	dcc00515 	stw	r19,20(sp)
   271ec:	dc800415 	stw	r18,16(sp)
   271f0:	dfc00715 	stw	ra,28(sp)
   271f4:	3825883a 	mov	r18,r7
   271f8:	8822d57a 	srli	r17,r17,21
   271fc:	00265340 	call	26534 <_Balloc>
   27200:	1027883a 	mov	r19,r2
   27204:	00800434 	movhi	r2,16
   27208:	10bfffc4 	addi	r2,r2,-1
   2720c:	808c703a 	and	r6,r16,r2
   27210:	88000126 	beq	r17,zero,27218 <__d2b+0x50>
   27214:	31800434 	orhi	r6,r6,16
   27218:	d9800015 	stw	r6,0(sp)
   2721c:	a0002426 	beq	r20,zero,272b0 <__d2b+0xe8>
   27220:	d9000104 	addi	r4,sp,4
   27224:	dd000115 	stw	r20,4(sp)
   27228:	00268900 	call	26890 <__lo0bits>
   2722c:	d8c00017 	ldw	r3,0(sp)
   27230:	10002f1e 	bne	r2,zero,272f0 <__d2b+0x128>
   27234:	d9000117 	ldw	r4,4(sp)
   27238:	99000515 	stw	r4,20(r19)
   2723c:	1821003a 	cmpeq	r16,r3,zero
   27240:	01000084 	movi	r4,2
   27244:	2421c83a 	sub	r16,r4,r16
   27248:	98c00615 	stw	r3,24(r19)
   2724c:	9c000415 	stw	r16,16(r19)
   27250:	88001f1e 	bne	r17,zero,272d0 <__d2b+0x108>
   27254:	10bef384 	addi	r2,r2,-1074
   27258:	90800015 	stw	r2,0(r18)
   2725c:	00900034 	movhi	r2,16384
   27260:	10bfffc4 	addi	r2,r2,-1
   27264:	8085883a 	add	r2,r16,r2
   27268:	1085883a 	add	r2,r2,r2
   2726c:	1085883a 	add	r2,r2,r2
   27270:	9885883a 	add	r2,r19,r2
   27274:	11000517 	ldw	r4,20(r2)
   27278:	8020917a 	slli	r16,r16,5
   2727c:	00268280 	call	26828 <__hi0bits>
   27280:	d8c00817 	ldw	r3,32(sp)
   27284:	8085c83a 	sub	r2,r16,r2
   27288:	18800015 	stw	r2,0(r3)
   2728c:	9805883a 	mov	r2,r19
   27290:	dfc00717 	ldw	ra,28(sp)
   27294:	dd000617 	ldw	r20,24(sp)
   27298:	dcc00517 	ldw	r19,20(sp)
   2729c:	dc800417 	ldw	r18,16(sp)
   272a0:	dc400317 	ldw	r17,12(sp)
   272a4:	dc000217 	ldw	r16,8(sp)
   272a8:	dec00804 	addi	sp,sp,32
   272ac:	f800283a 	ret
   272b0:	d809883a 	mov	r4,sp
   272b4:	00268900 	call	26890 <__lo0bits>
   272b8:	d8c00017 	ldw	r3,0(sp)
   272bc:	04000044 	movi	r16,1
   272c0:	9c000415 	stw	r16,16(r19)
   272c4:	98c00515 	stw	r3,20(r19)
   272c8:	10800804 	addi	r2,r2,32
   272cc:	883fe126 	beq	r17,zero,27254 <__alt_data_end+0xfffe7254>
   272d0:	00c00d44 	movi	r3,53
   272d4:	8c7ef344 	addi	r17,r17,-1075
   272d8:	88a3883a 	add	r17,r17,r2
   272dc:	1885c83a 	sub	r2,r3,r2
   272e0:	d8c00817 	ldw	r3,32(sp)
   272e4:	94400015 	stw	r17,0(r18)
   272e8:	18800015 	stw	r2,0(r3)
   272ec:	003fe706 	br	2728c <__alt_data_end+0xfffe728c>
   272f0:	01000804 	movi	r4,32
   272f4:	2089c83a 	sub	r4,r4,r2
   272f8:	1908983a 	sll	r4,r3,r4
   272fc:	d9400117 	ldw	r5,4(sp)
   27300:	1886d83a 	srl	r3,r3,r2
   27304:	2148b03a 	or	r4,r4,r5
   27308:	99000515 	stw	r4,20(r19)
   2730c:	d8c00015 	stw	r3,0(sp)
   27310:	003fca06 	br	2723c <__alt_data_end+0xfffe723c>

00027314 <__ratio>:
   27314:	defff904 	addi	sp,sp,-28
   27318:	dc400315 	stw	r17,12(sp)
   2731c:	2823883a 	mov	r17,r5
   27320:	d9400104 	addi	r5,sp,4
   27324:	dfc00615 	stw	ra,24(sp)
   27328:	dcc00515 	stw	r19,20(sp)
   2732c:	dc800415 	stw	r18,16(sp)
   27330:	2027883a 	mov	r19,r4
   27334:	dc000215 	stw	r16,8(sp)
   27338:	00270bc0 	call	270bc <__b2d>
   2733c:	d80b883a 	mov	r5,sp
   27340:	8809883a 	mov	r4,r17
   27344:	1025883a 	mov	r18,r2
   27348:	1821883a 	mov	r16,r3
   2734c:	00270bc0 	call	270bc <__b2d>
   27350:	8a000417 	ldw	r8,16(r17)
   27354:	99000417 	ldw	r4,16(r19)
   27358:	d9400117 	ldw	r5,4(sp)
   2735c:	2209c83a 	sub	r4,r4,r8
   27360:	2010917a 	slli	r8,r4,5
   27364:	d9000017 	ldw	r4,0(sp)
   27368:	2909c83a 	sub	r4,r5,r4
   2736c:	4109883a 	add	r4,r8,r4
   27370:	01000e0e 	bge	zero,r4,273ac <__ratio+0x98>
   27374:	2008953a 	slli	r4,r4,20
   27378:	2421883a 	add	r16,r4,r16
   2737c:	100d883a 	mov	r6,r2
   27380:	180f883a 	mov	r7,r3
   27384:	9009883a 	mov	r4,r18
   27388:	800b883a 	mov	r5,r16
   2738c:	002b2000 	call	2b200 <__divdf3>
   27390:	dfc00617 	ldw	ra,24(sp)
   27394:	dcc00517 	ldw	r19,20(sp)
   27398:	dc800417 	ldw	r18,16(sp)
   2739c:	dc400317 	ldw	r17,12(sp)
   273a0:	dc000217 	ldw	r16,8(sp)
   273a4:	dec00704 	addi	sp,sp,28
   273a8:	f800283a 	ret
   273ac:	2008953a 	slli	r4,r4,20
   273b0:	1907c83a 	sub	r3,r3,r4
   273b4:	003ff106 	br	2737c <__alt_data_end+0xfffe737c>

000273b8 <_mprec_log10>:
   273b8:	defffe04 	addi	sp,sp,-8
   273bc:	dc000015 	stw	r16,0(sp)
   273c0:	dfc00115 	stw	ra,4(sp)
   273c4:	008005c4 	movi	r2,23
   273c8:	2021883a 	mov	r16,r4
   273cc:	11000d0e 	bge	r2,r4,27404 <_mprec_log10+0x4c>
   273d0:	0005883a 	mov	r2,zero
   273d4:	00cffc34 	movhi	r3,16368
   273d8:	843fffc4 	addi	r16,r16,-1
   273dc:	000d883a 	mov	r6,zero
   273e0:	01d00934 	movhi	r7,16420
   273e4:	1009883a 	mov	r4,r2
   273e8:	180b883a 	mov	r5,r3
   273ec:	002bd400 	call	2bd40 <__muldf3>
   273f0:	803ff91e 	bne	r16,zero,273d8 <__alt_data_end+0xfffe73d8>
   273f4:	dfc00117 	ldw	ra,4(sp)
   273f8:	dc000017 	ldw	r16,0(sp)
   273fc:	dec00204 	addi	sp,sp,8
   27400:	f800283a 	ret
   27404:	202090fa 	slli	r16,r4,3
   27408:	008000f4 	movhi	r2,3
   2740c:	10bd5504 	addi	r2,r2,-2732
   27410:	1421883a 	add	r16,r2,r16
   27414:	80800017 	ldw	r2,0(r16)
   27418:	80c00117 	ldw	r3,4(r16)
   2741c:	dfc00117 	ldw	ra,4(sp)
   27420:	dc000017 	ldw	r16,0(sp)
   27424:	dec00204 	addi	sp,sp,8
   27428:	f800283a 	ret

0002742c <__copybits>:
   2742c:	297fffc4 	addi	r5,r5,-1
   27430:	280fd17a 	srai	r7,r5,5
   27434:	30c00417 	ldw	r3,16(r6)
   27438:	30800504 	addi	r2,r6,20
   2743c:	39c00044 	addi	r7,r7,1
   27440:	18c7883a 	add	r3,r3,r3
   27444:	39cf883a 	add	r7,r7,r7
   27448:	18c7883a 	add	r3,r3,r3
   2744c:	39cf883a 	add	r7,r7,r7
   27450:	10c7883a 	add	r3,r2,r3
   27454:	21cf883a 	add	r7,r4,r7
   27458:	10c00d2e 	bgeu	r2,r3,27490 <__copybits+0x64>
   2745c:	200b883a 	mov	r5,r4
   27460:	12000017 	ldw	r8,0(r2)
   27464:	29400104 	addi	r5,r5,4
   27468:	10800104 	addi	r2,r2,4
   2746c:	2a3fff15 	stw	r8,-4(r5)
   27470:	10fffb36 	bltu	r2,r3,27460 <__alt_data_end+0xfffe7460>
   27474:	1985c83a 	sub	r2,r3,r6
   27478:	10bffac4 	addi	r2,r2,-21
   2747c:	1004d0ba 	srli	r2,r2,2
   27480:	10800044 	addi	r2,r2,1
   27484:	1085883a 	add	r2,r2,r2
   27488:	1085883a 	add	r2,r2,r2
   2748c:	2089883a 	add	r4,r4,r2
   27490:	21c0032e 	bgeu	r4,r7,274a0 <__copybits+0x74>
   27494:	20000015 	stw	zero,0(r4)
   27498:	21000104 	addi	r4,r4,4
   2749c:	21fffd36 	bltu	r4,r7,27494 <__alt_data_end+0xfffe7494>
   274a0:	f800283a 	ret

000274a4 <__any_on>:
   274a4:	20c00417 	ldw	r3,16(r4)
   274a8:	2805d17a 	srai	r2,r5,5
   274ac:	21000504 	addi	r4,r4,20
   274b0:	18800d0e 	bge	r3,r2,274e8 <__any_on+0x44>
   274b4:	18c7883a 	add	r3,r3,r3
   274b8:	18c7883a 	add	r3,r3,r3
   274bc:	20c7883a 	add	r3,r4,r3
   274c0:	20c0192e 	bgeu	r4,r3,27528 <__any_on+0x84>
   274c4:	18bfff17 	ldw	r2,-4(r3)
   274c8:	18ffff04 	addi	r3,r3,-4
   274cc:	1000041e 	bne	r2,zero,274e0 <__any_on+0x3c>
   274d0:	20c0142e 	bgeu	r4,r3,27524 <__any_on+0x80>
   274d4:	18ffff04 	addi	r3,r3,-4
   274d8:	19400017 	ldw	r5,0(r3)
   274dc:	283ffc26 	beq	r5,zero,274d0 <__alt_data_end+0xfffe74d0>
   274e0:	00800044 	movi	r2,1
   274e4:	f800283a 	ret
   274e8:	10c00a0e 	bge	r2,r3,27514 <__any_on+0x70>
   274ec:	1085883a 	add	r2,r2,r2
   274f0:	1085883a 	add	r2,r2,r2
   274f4:	294007cc 	andi	r5,r5,31
   274f8:	2087883a 	add	r3,r4,r2
   274fc:	283ff026 	beq	r5,zero,274c0 <__alt_data_end+0xfffe74c0>
   27500:	19800017 	ldw	r6,0(r3)
   27504:	3144d83a 	srl	r2,r6,r5
   27508:	114a983a 	sll	r5,r2,r5
   2750c:	317ff41e 	bne	r6,r5,274e0 <__alt_data_end+0xfffe74e0>
   27510:	003feb06 	br	274c0 <__alt_data_end+0xfffe74c0>
   27514:	1085883a 	add	r2,r2,r2
   27518:	1085883a 	add	r2,r2,r2
   2751c:	2087883a 	add	r3,r4,r2
   27520:	003fe706 	br	274c0 <__alt_data_end+0xfffe74c0>
   27524:	f800283a 	ret
   27528:	0005883a 	mov	r2,zero
   2752c:	f800283a 	ret

00027530 <_realloc_r>:
   27530:	defff604 	addi	sp,sp,-40
   27534:	dc800215 	stw	r18,8(sp)
   27538:	dfc00915 	stw	ra,36(sp)
   2753c:	df000815 	stw	fp,32(sp)
   27540:	ddc00715 	stw	r23,28(sp)
   27544:	dd800615 	stw	r22,24(sp)
   27548:	dd400515 	stw	r21,20(sp)
   2754c:	dd000415 	stw	r20,16(sp)
   27550:	dcc00315 	stw	r19,12(sp)
   27554:	dc400115 	stw	r17,4(sp)
   27558:	dc000015 	stw	r16,0(sp)
   2755c:	3025883a 	mov	r18,r6
   27560:	2800b726 	beq	r5,zero,27840 <_realloc_r+0x310>
   27564:	282b883a 	mov	r21,r5
   27568:	2029883a 	mov	r20,r4
   2756c:	002d5380 	call	2d538 <__malloc_lock>
   27570:	a8bfff17 	ldw	r2,-4(r21)
   27574:	043fff04 	movi	r16,-4
   27578:	90c002c4 	addi	r3,r18,11
   2757c:	01000584 	movi	r4,22
   27580:	acfffe04 	addi	r19,r21,-8
   27584:	1420703a 	and	r16,r2,r16
   27588:	20c0332e 	bgeu	r4,r3,27658 <_realloc_r+0x128>
   2758c:	047ffe04 	movi	r17,-8
   27590:	1c62703a 	and	r17,r3,r17
   27594:	8807883a 	mov	r3,r17
   27598:	88005816 	blt	r17,zero,276fc <_realloc_r+0x1cc>
   2759c:	8c805736 	bltu	r17,r18,276fc <_realloc_r+0x1cc>
   275a0:	80c0300e 	bge	r16,r3,27664 <_realloc_r+0x134>
   275a4:	070000f4 	movhi	fp,3
   275a8:	e73f0304 	addi	fp,fp,-1012
   275ac:	e1c00217 	ldw	r7,8(fp)
   275b0:	9c09883a 	add	r4,r19,r16
   275b4:	22000117 	ldw	r8,4(r4)
   275b8:	21c06326 	beq	r4,r7,27748 <_realloc_r+0x218>
   275bc:	017fff84 	movi	r5,-2
   275c0:	414a703a 	and	r5,r8,r5
   275c4:	214b883a 	add	r5,r4,r5
   275c8:	29800117 	ldw	r6,4(r5)
   275cc:	3180004c 	andi	r6,r6,1
   275d0:	30003f26 	beq	r6,zero,276d0 <_realloc_r+0x1a0>
   275d4:	1080004c 	andi	r2,r2,1
   275d8:	10008326 	beq	r2,zero,277e8 <_realloc_r+0x2b8>
   275dc:	900b883a 	mov	r5,r18
   275e0:	a009883a 	mov	r4,r20
   275e4:	00258780 	call	25878 <_malloc_r>
   275e8:	1025883a 	mov	r18,r2
   275ec:	10011e26 	beq	r2,zero,27a68 <_realloc_r+0x538>
   275f0:	a93fff17 	ldw	r4,-4(r21)
   275f4:	10fffe04 	addi	r3,r2,-8
   275f8:	00bfff84 	movi	r2,-2
   275fc:	2084703a 	and	r2,r4,r2
   27600:	9885883a 	add	r2,r19,r2
   27604:	1880ee26 	beq	r3,r2,279c0 <_realloc_r+0x490>
   27608:	81bfff04 	addi	r6,r16,-4
   2760c:	00800904 	movi	r2,36
   27610:	1180b836 	bltu	r2,r6,278f4 <_realloc_r+0x3c4>
   27614:	00c004c4 	movi	r3,19
   27618:	19809636 	bltu	r3,r6,27874 <_realloc_r+0x344>
   2761c:	9005883a 	mov	r2,r18
   27620:	a807883a 	mov	r3,r21
   27624:	19000017 	ldw	r4,0(r3)
   27628:	11000015 	stw	r4,0(r2)
   2762c:	19000117 	ldw	r4,4(r3)
   27630:	11000115 	stw	r4,4(r2)
   27634:	18c00217 	ldw	r3,8(r3)
   27638:	10c00215 	stw	r3,8(r2)
   2763c:	a80b883a 	mov	r5,r21
   27640:	a009883a 	mov	r4,r20
   27644:	0024c8c0 	call	24c8c <_free_r>
   27648:	a009883a 	mov	r4,r20
   2764c:	002d55c0 	call	2d55c <__malloc_unlock>
   27650:	9005883a 	mov	r2,r18
   27654:	00001206 	br	276a0 <_realloc_r+0x170>
   27658:	00c00404 	movi	r3,16
   2765c:	1823883a 	mov	r17,r3
   27660:	003fce06 	br	2759c <__alt_data_end+0xfffe759c>
   27664:	a825883a 	mov	r18,r21
   27668:	8445c83a 	sub	r2,r16,r17
   2766c:	00c003c4 	movi	r3,15
   27670:	18802636 	bltu	r3,r2,2770c <_realloc_r+0x1dc>
   27674:	99800117 	ldw	r6,4(r19)
   27678:	9c07883a 	add	r3,r19,r16
   2767c:	3180004c 	andi	r6,r6,1
   27680:	3420b03a 	or	r16,r6,r16
   27684:	9c000115 	stw	r16,4(r19)
   27688:	18800117 	ldw	r2,4(r3)
   2768c:	10800054 	ori	r2,r2,1
   27690:	18800115 	stw	r2,4(r3)
   27694:	a009883a 	mov	r4,r20
   27698:	002d55c0 	call	2d55c <__malloc_unlock>
   2769c:	9005883a 	mov	r2,r18
   276a0:	dfc00917 	ldw	ra,36(sp)
   276a4:	df000817 	ldw	fp,32(sp)
   276a8:	ddc00717 	ldw	r23,28(sp)
   276ac:	dd800617 	ldw	r22,24(sp)
   276b0:	dd400517 	ldw	r21,20(sp)
   276b4:	dd000417 	ldw	r20,16(sp)
   276b8:	dcc00317 	ldw	r19,12(sp)
   276bc:	dc800217 	ldw	r18,8(sp)
   276c0:	dc400117 	ldw	r17,4(sp)
   276c4:	dc000017 	ldw	r16,0(sp)
   276c8:	dec00a04 	addi	sp,sp,40
   276cc:	f800283a 	ret
   276d0:	017fff04 	movi	r5,-4
   276d4:	414a703a 	and	r5,r8,r5
   276d8:	814d883a 	add	r6,r16,r5
   276dc:	30c01f16 	blt	r6,r3,2775c <_realloc_r+0x22c>
   276e0:	20800317 	ldw	r2,12(r4)
   276e4:	20c00217 	ldw	r3,8(r4)
   276e8:	a825883a 	mov	r18,r21
   276ec:	3021883a 	mov	r16,r6
   276f0:	18800315 	stw	r2,12(r3)
   276f4:	10c00215 	stw	r3,8(r2)
   276f8:	003fdb06 	br	27668 <__alt_data_end+0xfffe7668>
   276fc:	00800304 	movi	r2,12
   27700:	a0800015 	stw	r2,0(r20)
   27704:	0005883a 	mov	r2,zero
   27708:	003fe506 	br	276a0 <__alt_data_end+0xfffe76a0>
   2770c:	98c00117 	ldw	r3,4(r19)
   27710:	9c4b883a 	add	r5,r19,r17
   27714:	11000054 	ori	r4,r2,1
   27718:	18c0004c 	andi	r3,r3,1
   2771c:	1c62b03a 	or	r17,r3,r17
   27720:	9c400115 	stw	r17,4(r19)
   27724:	29000115 	stw	r4,4(r5)
   27728:	2885883a 	add	r2,r5,r2
   2772c:	10c00117 	ldw	r3,4(r2)
   27730:	29400204 	addi	r5,r5,8
   27734:	a009883a 	mov	r4,r20
   27738:	18c00054 	ori	r3,r3,1
   2773c:	10c00115 	stw	r3,4(r2)
   27740:	0024c8c0 	call	24c8c <_free_r>
   27744:	003fd306 	br	27694 <__alt_data_end+0xfffe7694>
   27748:	017fff04 	movi	r5,-4
   2774c:	414a703a 	and	r5,r8,r5
   27750:	89800404 	addi	r6,r17,16
   27754:	8151883a 	add	r8,r16,r5
   27758:	4180590e 	bge	r8,r6,278c0 <_realloc_r+0x390>
   2775c:	1080004c 	andi	r2,r2,1
   27760:	103f9e1e 	bne	r2,zero,275dc <__alt_data_end+0xfffe75dc>
   27764:	adbffe17 	ldw	r22,-8(r21)
   27768:	00bfff04 	movi	r2,-4
   2776c:	9dadc83a 	sub	r22,r19,r22
   27770:	b1800117 	ldw	r6,4(r22)
   27774:	3084703a 	and	r2,r6,r2
   27778:	20002026 	beq	r4,zero,277fc <_realloc_r+0x2cc>
   2777c:	80af883a 	add	r23,r16,r2
   27780:	b96f883a 	add	r23,r23,r5
   27784:	21c05f26 	beq	r4,r7,27904 <_realloc_r+0x3d4>
   27788:	b8c01c16 	blt	r23,r3,277fc <_realloc_r+0x2cc>
   2778c:	20800317 	ldw	r2,12(r4)
   27790:	20c00217 	ldw	r3,8(r4)
   27794:	81bfff04 	addi	r6,r16,-4
   27798:	01000904 	movi	r4,36
   2779c:	18800315 	stw	r2,12(r3)
   277a0:	10c00215 	stw	r3,8(r2)
   277a4:	b0c00217 	ldw	r3,8(r22)
   277a8:	b0800317 	ldw	r2,12(r22)
   277ac:	b4800204 	addi	r18,r22,8
   277b0:	18800315 	stw	r2,12(r3)
   277b4:	10c00215 	stw	r3,8(r2)
   277b8:	21801b36 	bltu	r4,r6,27828 <_realloc_r+0x2f8>
   277bc:	008004c4 	movi	r2,19
   277c0:	1180352e 	bgeu	r2,r6,27898 <_realloc_r+0x368>
   277c4:	a8800017 	ldw	r2,0(r21)
   277c8:	b0800215 	stw	r2,8(r22)
   277cc:	a8800117 	ldw	r2,4(r21)
   277d0:	b0800315 	stw	r2,12(r22)
   277d4:	008006c4 	movi	r2,27
   277d8:	11807f36 	bltu	r2,r6,279d8 <_realloc_r+0x4a8>
   277dc:	b0800404 	addi	r2,r22,16
   277e0:	ad400204 	addi	r21,r21,8
   277e4:	00002d06 	br	2789c <_realloc_r+0x36c>
   277e8:	adbffe17 	ldw	r22,-8(r21)
   277ec:	00bfff04 	movi	r2,-4
   277f0:	9dadc83a 	sub	r22,r19,r22
   277f4:	b1000117 	ldw	r4,4(r22)
   277f8:	2084703a 	and	r2,r4,r2
   277fc:	b03f7726 	beq	r22,zero,275dc <__alt_data_end+0xfffe75dc>
   27800:	80af883a 	add	r23,r16,r2
   27804:	b8ff7516 	blt	r23,r3,275dc <__alt_data_end+0xfffe75dc>
   27808:	b0800317 	ldw	r2,12(r22)
   2780c:	b0c00217 	ldw	r3,8(r22)
   27810:	81bfff04 	addi	r6,r16,-4
   27814:	01000904 	movi	r4,36
   27818:	18800315 	stw	r2,12(r3)
   2781c:	10c00215 	stw	r3,8(r2)
   27820:	b4800204 	addi	r18,r22,8
   27824:	21bfe52e 	bgeu	r4,r6,277bc <__alt_data_end+0xfffe77bc>
   27828:	a80b883a 	mov	r5,r21
   2782c:	9009883a 	mov	r4,r18
   27830:	00262b00 	call	262b0 <memmove>
   27834:	b821883a 	mov	r16,r23
   27838:	b027883a 	mov	r19,r22
   2783c:	003f8a06 	br	27668 <__alt_data_end+0xfffe7668>
   27840:	300b883a 	mov	r5,r6
   27844:	dfc00917 	ldw	ra,36(sp)
   27848:	df000817 	ldw	fp,32(sp)
   2784c:	ddc00717 	ldw	r23,28(sp)
   27850:	dd800617 	ldw	r22,24(sp)
   27854:	dd400517 	ldw	r21,20(sp)
   27858:	dd000417 	ldw	r20,16(sp)
   2785c:	dcc00317 	ldw	r19,12(sp)
   27860:	dc800217 	ldw	r18,8(sp)
   27864:	dc400117 	ldw	r17,4(sp)
   27868:	dc000017 	ldw	r16,0(sp)
   2786c:	dec00a04 	addi	sp,sp,40
   27870:	00258781 	jmpi	25878 <_malloc_r>
   27874:	a8c00017 	ldw	r3,0(r21)
   27878:	90c00015 	stw	r3,0(r18)
   2787c:	a8c00117 	ldw	r3,4(r21)
   27880:	90c00115 	stw	r3,4(r18)
   27884:	00c006c4 	movi	r3,27
   27888:	19804536 	bltu	r3,r6,279a0 <_realloc_r+0x470>
   2788c:	90800204 	addi	r2,r18,8
   27890:	a8c00204 	addi	r3,r21,8
   27894:	003f6306 	br	27624 <__alt_data_end+0xfffe7624>
   27898:	9005883a 	mov	r2,r18
   2789c:	a8c00017 	ldw	r3,0(r21)
   278a0:	b821883a 	mov	r16,r23
   278a4:	b027883a 	mov	r19,r22
   278a8:	10c00015 	stw	r3,0(r2)
   278ac:	a8c00117 	ldw	r3,4(r21)
   278b0:	10c00115 	stw	r3,4(r2)
   278b4:	a8c00217 	ldw	r3,8(r21)
   278b8:	10c00215 	stw	r3,8(r2)
   278bc:	003f6a06 	br	27668 <__alt_data_end+0xfffe7668>
   278c0:	9c67883a 	add	r19,r19,r17
   278c4:	4445c83a 	sub	r2,r8,r17
   278c8:	e4c00215 	stw	r19,8(fp)
   278cc:	10800054 	ori	r2,r2,1
   278d0:	98800115 	stw	r2,4(r19)
   278d4:	a8bfff17 	ldw	r2,-4(r21)
   278d8:	a009883a 	mov	r4,r20
   278dc:	1080004c 	andi	r2,r2,1
   278e0:	1462b03a 	or	r17,r2,r17
   278e4:	ac7fff15 	stw	r17,-4(r21)
   278e8:	002d55c0 	call	2d55c <__malloc_unlock>
   278ec:	a805883a 	mov	r2,r21
   278f0:	003f6b06 	br	276a0 <__alt_data_end+0xfffe76a0>
   278f4:	a80b883a 	mov	r5,r21
   278f8:	9009883a 	mov	r4,r18
   278fc:	00262b00 	call	262b0 <memmove>
   27900:	003f4e06 	br	2763c <__alt_data_end+0xfffe763c>
   27904:	89000404 	addi	r4,r17,16
   27908:	b93fbc16 	blt	r23,r4,277fc <__alt_data_end+0xfffe77fc>
   2790c:	b0800317 	ldw	r2,12(r22)
   27910:	b0c00217 	ldw	r3,8(r22)
   27914:	81bfff04 	addi	r6,r16,-4
   27918:	01000904 	movi	r4,36
   2791c:	18800315 	stw	r2,12(r3)
   27920:	10c00215 	stw	r3,8(r2)
   27924:	b4800204 	addi	r18,r22,8
   27928:	21804336 	bltu	r4,r6,27a38 <_realloc_r+0x508>
   2792c:	008004c4 	movi	r2,19
   27930:	11803f2e 	bgeu	r2,r6,27a30 <_realloc_r+0x500>
   27934:	a8800017 	ldw	r2,0(r21)
   27938:	b0800215 	stw	r2,8(r22)
   2793c:	a8800117 	ldw	r2,4(r21)
   27940:	b0800315 	stw	r2,12(r22)
   27944:	008006c4 	movi	r2,27
   27948:	11803f36 	bltu	r2,r6,27a48 <_realloc_r+0x518>
   2794c:	b0800404 	addi	r2,r22,16
   27950:	ad400204 	addi	r21,r21,8
   27954:	a8c00017 	ldw	r3,0(r21)
   27958:	10c00015 	stw	r3,0(r2)
   2795c:	a8c00117 	ldw	r3,4(r21)
   27960:	10c00115 	stw	r3,4(r2)
   27964:	a8c00217 	ldw	r3,8(r21)
   27968:	10c00215 	stw	r3,8(r2)
   2796c:	b447883a 	add	r3,r22,r17
   27970:	bc45c83a 	sub	r2,r23,r17
   27974:	e0c00215 	stw	r3,8(fp)
   27978:	10800054 	ori	r2,r2,1
   2797c:	18800115 	stw	r2,4(r3)
   27980:	b0800117 	ldw	r2,4(r22)
   27984:	a009883a 	mov	r4,r20
   27988:	1080004c 	andi	r2,r2,1
   2798c:	1462b03a 	or	r17,r2,r17
   27990:	b4400115 	stw	r17,4(r22)
   27994:	002d55c0 	call	2d55c <__malloc_unlock>
   27998:	9005883a 	mov	r2,r18
   2799c:	003f4006 	br	276a0 <__alt_data_end+0xfffe76a0>
   279a0:	a8c00217 	ldw	r3,8(r21)
   279a4:	90c00215 	stw	r3,8(r18)
   279a8:	a8c00317 	ldw	r3,12(r21)
   279ac:	90c00315 	stw	r3,12(r18)
   279b0:	30801126 	beq	r6,r2,279f8 <_realloc_r+0x4c8>
   279b4:	90800404 	addi	r2,r18,16
   279b8:	a8c00404 	addi	r3,r21,16
   279bc:	003f1906 	br	27624 <__alt_data_end+0xfffe7624>
   279c0:	90ffff17 	ldw	r3,-4(r18)
   279c4:	00bfff04 	movi	r2,-4
   279c8:	a825883a 	mov	r18,r21
   279cc:	1884703a 	and	r2,r3,r2
   279d0:	80a1883a 	add	r16,r16,r2
   279d4:	003f2406 	br	27668 <__alt_data_end+0xfffe7668>
   279d8:	a8800217 	ldw	r2,8(r21)
   279dc:	b0800415 	stw	r2,16(r22)
   279e0:	a8800317 	ldw	r2,12(r21)
   279e4:	b0800515 	stw	r2,20(r22)
   279e8:	31000a26 	beq	r6,r4,27a14 <_realloc_r+0x4e4>
   279ec:	b0800604 	addi	r2,r22,24
   279f0:	ad400404 	addi	r21,r21,16
   279f4:	003fa906 	br	2789c <__alt_data_end+0xfffe789c>
   279f8:	a9000417 	ldw	r4,16(r21)
   279fc:	90800604 	addi	r2,r18,24
   27a00:	a8c00604 	addi	r3,r21,24
   27a04:	91000415 	stw	r4,16(r18)
   27a08:	a9000517 	ldw	r4,20(r21)
   27a0c:	91000515 	stw	r4,20(r18)
   27a10:	003f0406 	br	27624 <__alt_data_end+0xfffe7624>
   27a14:	a8c00417 	ldw	r3,16(r21)
   27a18:	ad400604 	addi	r21,r21,24
   27a1c:	b0800804 	addi	r2,r22,32
   27a20:	b0c00615 	stw	r3,24(r22)
   27a24:	a8ffff17 	ldw	r3,-4(r21)
   27a28:	b0c00715 	stw	r3,28(r22)
   27a2c:	003f9b06 	br	2789c <__alt_data_end+0xfffe789c>
   27a30:	9005883a 	mov	r2,r18
   27a34:	003fc706 	br	27954 <__alt_data_end+0xfffe7954>
   27a38:	a80b883a 	mov	r5,r21
   27a3c:	9009883a 	mov	r4,r18
   27a40:	00262b00 	call	262b0 <memmove>
   27a44:	003fc906 	br	2796c <__alt_data_end+0xfffe796c>
   27a48:	a8800217 	ldw	r2,8(r21)
   27a4c:	b0800415 	stw	r2,16(r22)
   27a50:	a8800317 	ldw	r2,12(r21)
   27a54:	b0800515 	stw	r2,20(r22)
   27a58:	31000726 	beq	r6,r4,27a78 <_realloc_r+0x548>
   27a5c:	b0800604 	addi	r2,r22,24
   27a60:	ad400404 	addi	r21,r21,16
   27a64:	003fbb06 	br	27954 <__alt_data_end+0xfffe7954>
   27a68:	a009883a 	mov	r4,r20
   27a6c:	002d55c0 	call	2d55c <__malloc_unlock>
   27a70:	0005883a 	mov	r2,zero
   27a74:	003f0a06 	br	276a0 <__alt_data_end+0xfffe76a0>
   27a78:	a8c00417 	ldw	r3,16(r21)
   27a7c:	ad400604 	addi	r21,r21,24
   27a80:	b0800804 	addi	r2,r22,32
   27a84:	b0c00615 	stw	r3,24(r22)
   27a88:	a8ffff17 	ldw	r3,-4(r21)
   27a8c:	b0c00715 	stw	r3,28(r22)
   27a90:	003fb006 	br	27954 <__alt_data_end+0xfffe7954>

00027a94 <__fpclassifyd>:
   27a94:	00a00034 	movhi	r2,32768
   27a98:	10bfffc4 	addi	r2,r2,-1
   27a9c:	2884703a 	and	r2,r5,r2
   27aa0:	10000726 	beq	r2,zero,27ac0 <__fpclassifyd+0x2c>
   27aa4:	00fffc34 	movhi	r3,65520
   27aa8:	019ff834 	movhi	r6,32736
   27aac:	28c7883a 	add	r3,r5,r3
   27ab0:	31bfffc4 	addi	r6,r6,-1
   27ab4:	30c00536 	bltu	r6,r3,27acc <__fpclassifyd+0x38>
   27ab8:	00800104 	movi	r2,4
   27abc:	f800283a 	ret
   27ac0:	2000021e 	bne	r4,zero,27acc <__fpclassifyd+0x38>
   27ac4:	00800084 	movi	r2,2
   27ac8:	f800283a 	ret
   27acc:	00dffc34 	movhi	r3,32752
   27ad0:	019ff834 	movhi	r6,32736
   27ad4:	28cb883a 	add	r5,r5,r3
   27ad8:	31bfffc4 	addi	r6,r6,-1
   27adc:	317ff62e 	bgeu	r6,r5,27ab8 <__alt_data_end+0xfffe7ab8>
   27ae0:	01400434 	movhi	r5,16
   27ae4:	297fffc4 	addi	r5,r5,-1
   27ae8:	28800236 	bltu	r5,r2,27af4 <__fpclassifyd+0x60>
   27aec:	008000c4 	movi	r2,3
   27af0:	f800283a 	ret
   27af4:	10c00226 	beq	r2,r3,27b00 <__fpclassifyd+0x6c>
   27af8:	0005883a 	mov	r2,zero
   27afc:	f800283a 	ret
   27b00:	2005003a 	cmpeq	r2,r4,zero
   27b04:	f800283a 	ret

00027b08 <_sbrk_r>:
   27b08:	defffd04 	addi	sp,sp,-12
   27b0c:	dc000015 	stw	r16,0(sp)
   27b10:	040000f4 	movhi	r16,3
   27b14:	dc400115 	stw	r17,4(sp)
   27b18:	840b5804 	addi	r16,r16,11616
   27b1c:	2023883a 	mov	r17,r4
   27b20:	2809883a 	mov	r4,r5
   27b24:	dfc00215 	stw	ra,8(sp)
   27b28:	80000015 	stw	zero,0(r16)
   27b2c:	002d5e40 	call	2d5e4 <sbrk>
   27b30:	00ffffc4 	movi	r3,-1
   27b34:	10c00526 	beq	r2,r3,27b4c <_sbrk_r+0x44>
   27b38:	dfc00217 	ldw	ra,8(sp)
   27b3c:	dc400117 	ldw	r17,4(sp)
   27b40:	dc000017 	ldw	r16,0(sp)
   27b44:	dec00304 	addi	sp,sp,12
   27b48:	f800283a 	ret
   27b4c:	80c00017 	ldw	r3,0(r16)
   27b50:	183ff926 	beq	r3,zero,27b38 <__alt_data_end+0xfffe7b38>
   27b54:	88c00015 	stw	r3,0(r17)
   27b58:	003ff706 	br	27b38 <__alt_data_end+0xfffe7b38>

00027b5c <__sread>:
   27b5c:	defffe04 	addi	sp,sp,-8
   27b60:	dc000015 	stw	r16,0(sp)
   27b64:	2821883a 	mov	r16,r5
   27b68:	2940038f 	ldh	r5,14(r5)
   27b6c:	dfc00115 	stw	ra,4(sp)
   27b70:	00299500 	call	29950 <_read_r>
   27b74:	10000716 	blt	r2,zero,27b94 <__sread+0x38>
   27b78:	80c01417 	ldw	r3,80(r16)
   27b7c:	1887883a 	add	r3,r3,r2
   27b80:	80c01415 	stw	r3,80(r16)
   27b84:	dfc00117 	ldw	ra,4(sp)
   27b88:	dc000017 	ldw	r16,0(sp)
   27b8c:	dec00204 	addi	sp,sp,8
   27b90:	f800283a 	ret
   27b94:	80c0030b 	ldhu	r3,12(r16)
   27b98:	18fbffcc 	andi	r3,r3,61439
   27b9c:	80c0030d 	sth	r3,12(r16)
   27ba0:	dfc00117 	ldw	ra,4(sp)
   27ba4:	dc000017 	ldw	r16,0(sp)
   27ba8:	dec00204 	addi	sp,sp,8
   27bac:	f800283a 	ret

00027bb0 <__seofread>:
   27bb0:	0005883a 	mov	r2,zero
   27bb4:	f800283a 	ret

00027bb8 <__swrite>:
   27bb8:	2880030b 	ldhu	r2,12(r5)
   27bbc:	defffb04 	addi	sp,sp,-20
   27bc0:	dcc00315 	stw	r19,12(sp)
   27bc4:	dc800215 	stw	r18,8(sp)
   27bc8:	dc400115 	stw	r17,4(sp)
   27bcc:	dc000015 	stw	r16,0(sp)
   27bd0:	dfc00415 	stw	ra,16(sp)
   27bd4:	10c0400c 	andi	r3,r2,256
   27bd8:	2821883a 	mov	r16,r5
   27bdc:	2023883a 	mov	r17,r4
   27be0:	3025883a 	mov	r18,r6
   27be4:	3827883a 	mov	r19,r7
   27be8:	18000526 	beq	r3,zero,27c00 <__swrite+0x48>
   27bec:	2940038f 	ldh	r5,14(r5)
   27bf0:	01c00084 	movi	r7,2
   27bf4:	000d883a 	mov	r6,zero
   27bf8:	00298f00 	call	298f0 <_lseek_r>
   27bfc:	8080030b 	ldhu	r2,12(r16)
   27c00:	8140038f 	ldh	r5,14(r16)
   27c04:	10bbffcc 	andi	r2,r2,61439
   27c08:	980f883a 	mov	r7,r19
   27c0c:	900d883a 	mov	r6,r18
   27c10:	8809883a 	mov	r4,r17
   27c14:	8080030d 	sth	r2,12(r16)
   27c18:	dfc00417 	ldw	ra,16(sp)
   27c1c:	dcc00317 	ldw	r19,12(sp)
   27c20:	dc800217 	ldw	r18,8(sp)
   27c24:	dc400117 	ldw	r17,4(sp)
   27c28:	dc000017 	ldw	r16,0(sp)
   27c2c:	dec00504 	addi	sp,sp,20
   27c30:	00293bc1 	jmpi	293bc <_write_r>

00027c34 <__sseek>:
   27c34:	defffe04 	addi	sp,sp,-8
   27c38:	dc000015 	stw	r16,0(sp)
   27c3c:	2821883a 	mov	r16,r5
   27c40:	2940038f 	ldh	r5,14(r5)
   27c44:	dfc00115 	stw	ra,4(sp)
   27c48:	00298f00 	call	298f0 <_lseek_r>
   27c4c:	00ffffc4 	movi	r3,-1
   27c50:	10c00826 	beq	r2,r3,27c74 <__sseek+0x40>
   27c54:	80c0030b 	ldhu	r3,12(r16)
   27c58:	80801415 	stw	r2,80(r16)
   27c5c:	18c40014 	ori	r3,r3,4096
   27c60:	80c0030d 	sth	r3,12(r16)
   27c64:	dfc00117 	ldw	ra,4(sp)
   27c68:	dc000017 	ldw	r16,0(sp)
   27c6c:	dec00204 	addi	sp,sp,8
   27c70:	f800283a 	ret
   27c74:	80c0030b 	ldhu	r3,12(r16)
   27c78:	18fbffcc 	andi	r3,r3,61439
   27c7c:	80c0030d 	sth	r3,12(r16)
   27c80:	dfc00117 	ldw	ra,4(sp)
   27c84:	dc000017 	ldw	r16,0(sp)
   27c88:	dec00204 	addi	sp,sp,8
   27c8c:	f800283a 	ret

00027c90 <__sclose>:
   27c90:	2940038f 	ldh	r5,14(r5)
   27c94:	002941c1 	jmpi	2941c <_close_r>

00027c98 <strcmp>:
   27c98:	2144b03a 	or	r2,r4,r5
   27c9c:	108000cc 	andi	r2,r2,3
   27ca0:	1000171e 	bne	r2,zero,27d00 <strcmp+0x68>
   27ca4:	20800017 	ldw	r2,0(r4)
   27ca8:	28c00017 	ldw	r3,0(r5)
   27cac:	10c0141e 	bne	r2,r3,27d00 <strcmp+0x68>
   27cb0:	027fbff4 	movhi	r9,65279
   27cb4:	4a7fbfc4 	addi	r9,r9,-257
   27cb8:	0086303a 	nor	r3,zero,r2
   27cbc:	02202074 	movhi	r8,32897
   27cc0:	1245883a 	add	r2,r2,r9
   27cc4:	42202004 	addi	r8,r8,-32640
   27cc8:	10c4703a 	and	r2,r2,r3
   27ccc:	1204703a 	and	r2,r2,r8
   27cd0:	10000226 	beq	r2,zero,27cdc <strcmp+0x44>
   27cd4:	00002306 	br	27d64 <strcmp+0xcc>
   27cd8:	1000221e 	bne	r2,zero,27d64 <strcmp+0xcc>
   27cdc:	21000104 	addi	r4,r4,4
   27ce0:	20c00017 	ldw	r3,0(r4)
   27ce4:	29400104 	addi	r5,r5,4
   27ce8:	29800017 	ldw	r6,0(r5)
   27cec:	1a4f883a 	add	r7,r3,r9
   27cf0:	00c4303a 	nor	r2,zero,r3
   27cf4:	3884703a 	and	r2,r7,r2
   27cf8:	1204703a 	and	r2,r2,r8
   27cfc:	19bff626 	beq	r3,r6,27cd8 <__alt_data_end+0xfffe7cd8>
   27d00:	20800003 	ldbu	r2,0(r4)
   27d04:	10c03fcc 	andi	r3,r2,255
   27d08:	18c0201c 	xori	r3,r3,128
   27d0c:	18ffe004 	addi	r3,r3,-128
   27d10:	18000c26 	beq	r3,zero,27d44 <strcmp+0xac>
   27d14:	29800007 	ldb	r6,0(r5)
   27d18:	19800326 	beq	r3,r6,27d28 <strcmp+0x90>
   27d1c:	00001306 	br	27d6c <strcmp+0xd4>
   27d20:	29800007 	ldb	r6,0(r5)
   27d24:	11800b1e 	bne	r2,r6,27d54 <strcmp+0xbc>
   27d28:	21000044 	addi	r4,r4,1
   27d2c:	20c00003 	ldbu	r3,0(r4)
   27d30:	29400044 	addi	r5,r5,1
   27d34:	18803fcc 	andi	r2,r3,255
   27d38:	1080201c 	xori	r2,r2,128
   27d3c:	10bfe004 	addi	r2,r2,-128
   27d40:	103ff71e 	bne	r2,zero,27d20 <__alt_data_end+0xfffe7d20>
   27d44:	0007883a 	mov	r3,zero
   27d48:	28800003 	ldbu	r2,0(r5)
   27d4c:	1885c83a 	sub	r2,r3,r2
   27d50:	f800283a 	ret
   27d54:	28800003 	ldbu	r2,0(r5)
   27d58:	18c03fcc 	andi	r3,r3,255
   27d5c:	1885c83a 	sub	r2,r3,r2
   27d60:	f800283a 	ret
   27d64:	0005883a 	mov	r2,zero
   27d68:	f800283a 	ret
   27d6c:	10c03fcc 	andi	r3,r2,255
   27d70:	003ff506 	br	27d48 <__alt_data_end+0xfffe7d48>

00027d74 <__sprint_r.part.0>:
   27d74:	28801917 	ldw	r2,100(r5)
   27d78:	defff604 	addi	sp,sp,-40
   27d7c:	dd400515 	stw	r21,20(sp)
   27d80:	dfc00915 	stw	ra,36(sp)
   27d84:	df000815 	stw	fp,32(sp)
   27d88:	ddc00715 	stw	r23,28(sp)
   27d8c:	dd800615 	stw	r22,24(sp)
   27d90:	dd000415 	stw	r20,16(sp)
   27d94:	dcc00315 	stw	r19,12(sp)
   27d98:	dc800215 	stw	r18,8(sp)
   27d9c:	dc400115 	stw	r17,4(sp)
   27da0:	dc000015 	stw	r16,0(sp)
   27da4:	1088000c 	andi	r2,r2,8192
   27da8:	302b883a 	mov	r21,r6
   27dac:	10002e26 	beq	r2,zero,27e68 <__sprint_r.part.0+0xf4>
   27db0:	30800217 	ldw	r2,8(r6)
   27db4:	35800017 	ldw	r22,0(r6)
   27db8:	10002926 	beq	r2,zero,27e60 <__sprint_r.part.0+0xec>
   27dbc:	2827883a 	mov	r19,r5
   27dc0:	2029883a 	mov	r20,r4
   27dc4:	b5c00104 	addi	r23,r22,4
   27dc8:	04bfffc4 	movi	r18,-1
   27dcc:	bc400017 	ldw	r17,0(r23)
   27dd0:	b4000017 	ldw	r16,0(r22)
   27dd4:	0039883a 	mov	fp,zero
   27dd8:	8822d0ba 	srli	r17,r17,2
   27ddc:	8800031e 	bne	r17,zero,27dec <__sprint_r.part.0+0x78>
   27de0:	00001806 	br	27e44 <__sprint_r.part.0+0xd0>
   27de4:	84000104 	addi	r16,r16,4
   27de8:	8f001526 	beq	r17,fp,27e40 <__sprint_r.part.0+0xcc>
   27dec:	81400017 	ldw	r5,0(r16)
   27df0:	980d883a 	mov	r6,r19
   27df4:	a009883a 	mov	r4,r20
   27df8:	002979c0 	call	2979c <_fputwc_r>
   27dfc:	e7000044 	addi	fp,fp,1
   27e00:	14bff81e 	bne	r2,r18,27de4 <__alt_data_end+0xfffe7de4>
   27e04:	9005883a 	mov	r2,r18
   27e08:	a8000215 	stw	zero,8(r21)
   27e0c:	a8000115 	stw	zero,4(r21)
   27e10:	dfc00917 	ldw	ra,36(sp)
   27e14:	df000817 	ldw	fp,32(sp)
   27e18:	ddc00717 	ldw	r23,28(sp)
   27e1c:	dd800617 	ldw	r22,24(sp)
   27e20:	dd400517 	ldw	r21,20(sp)
   27e24:	dd000417 	ldw	r20,16(sp)
   27e28:	dcc00317 	ldw	r19,12(sp)
   27e2c:	dc800217 	ldw	r18,8(sp)
   27e30:	dc400117 	ldw	r17,4(sp)
   27e34:	dc000017 	ldw	r16,0(sp)
   27e38:	dec00a04 	addi	sp,sp,40
   27e3c:	f800283a 	ret
   27e40:	a8800217 	ldw	r2,8(r21)
   27e44:	8c63883a 	add	r17,r17,r17
   27e48:	8c63883a 	add	r17,r17,r17
   27e4c:	1445c83a 	sub	r2,r2,r17
   27e50:	a8800215 	stw	r2,8(r21)
   27e54:	b5800204 	addi	r22,r22,8
   27e58:	bdc00204 	addi	r23,r23,8
   27e5c:	103fdb1e 	bne	r2,zero,27dcc <__alt_data_end+0xfffe7dcc>
   27e60:	0005883a 	mov	r2,zero
   27e64:	003fe806 	br	27e08 <__alt_data_end+0xfffe7e08>
   27e68:	0024f9c0 	call	24f9c <__sfvwrite_r>
   27e6c:	003fe606 	br	27e08 <__alt_data_end+0xfffe7e08>

00027e70 <__sprint_r>:
   27e70:	30c00217 	ldw	r3,8(r6)
   27e74:	18000126 	beq	r3,zero,27e7c <__sprint_r+0xc>
   27e78:	0027d741 	jmpi	27d74 <__sprint_r.part.0>
   27e7c:	30000115 	stw	zero,4(r6)
   27e80:	0005883a 	mov	r2,zero
   27e84:	f800283a 	ret

00027e88 <___vfiprintf_internal_r>:
   27e88:	deffc904 	addi	sp,sp,-220
   27e8c:	df003515 	stw	fp,212(sp)
   27e90:	dd003115 	stw	r20,196(sp)
   27e94:	dfc03615 	stw	ra,216(sp)
   27e98:	ddc03415 	stw	r23,208(sp)
   27e9c:	dd803315 	stw	r22,204(sp)
   27ea0:	dd403215 	stw	r21,200(sp)
   27ea4:	dcc03015 	stw	r19,192(sp)
   27ea8:	dc802f15 	stw	r18,188(sp)
   27eac:	dc402e15 	stw	r17,184(sp)
   27eb0:	dc002d15 	stw	r16,180(sp)
   27eb4:	d9002015 	stw	r4,128(sp)
   27eb8:	d9c02215 	stw	r7,136(sp)
   27ebc:	2829883a 	mov	r20,r5
   27ec0:	3039883a 	mov	fp,r6
   27ec4:	20000226 	beq	r4,zero,27ed0 <___vfiprintf_internal_r+0x48>
   27ec8:	20800e17 	ldw	r2,56(r4)
   27ecc:	1000cf26 	beq	r2,zero,2820c <___vfiprintf_internal_r+0x384>
   27ed0:	a080030b 	ldhu	r2,12(r20)
   27ed4:	10c8000c 	andi	r3,r2,8192
   27ed8:	1800061e 	bne	r3,zero,27ef4 <___vfiprintf_internal_r+0x6c>
   27edc:	a1001917 	ldw	r4,100(r20)
   27ee0:	00f7ffc4 	movi	r3,-8193
   27ee4:	10880014 	ori	r2,r2,8192
   27ee8:	20c6703a 	and	r3,r4,r3
   27eec:	a080030d 	sth	r2,12(r20)
   27ef0:	a0c01915 	stw	r3,100(r20)
   27ef4:	10c0020c 	andi	r3,r2,8
   27ef8:	1800a926 	beq	r3,zero,281a0 <___vfiprintf_internal_r+0x318>
   27efc:	a0c00417 	ldw	r3,16(r20)
   27f00:	1800a726 	beq	r3,zero,281a0 <___vfiprintf_internal_r+0x318>
   27f04:	1080068c 	andi	r2,r2,26
   27f08:	00c00284 	movi	r3,10
   27f0c:	10c0ac26 	beq	r2,r3,281c0 <___vfiprintf_internal_r+0x338>
   27f10:	da801a04 	addi	r10,sp,104
   27f14:	da801e15 	stw	r10,120(sp)
   27f18:	d8801e17 	ldw	r2,120(sp)
   27f1c:	da8019c4 	addi	r10,sp,103
   27f20:	058000f4 	movhi	r22,3
   27f24:	05c000f4 	movhi	r23,3
   27f28:	da801f15 	stw	r10,124(sp)
   27f2c:	1295c83a 	sub	r10,r2,r10
   27f30:	b5bd8b04 	addi	r22,r22,-2516
   27f34:	bdfd8704 	addi	r23,r23,-2532
   27f38:	dec01a15 	stw	sp,104(sp)
   27f3c:	d8001c15 	stw	zero,112(sp)
   27f40:	d8001b15 	stw	zero,108(sp)
   27f44:	d8002615 	stw	zero,152(sp)
   27f48:	d8002315 	stw	zero,140(sp)
   27f4c:	da802715 	stw	r10,156(sp)
   27f50:	d811883a 	mov	r8,sp
   27f54:	dd002115 	stw	r20,132(sp)
   27f58:	e021883a 	mov	r16,fp
   27f5c:	80800007 	ldb	r2,0(r16)
   27f60:	1003ea26 	beq	r2,zero,28f0c <___vfiprintf_internal_r+0x1084>
   27f64:	00c00944 	movi	r3,37
   27f68:	8025883a 	mov	r18,r16
   27f6c:	10c0021e 	bne	r2,r3,27f78 <___vfiprintf_internal_r+0xf0>
   27f70:	00001606 	br	27fcc <___vfiprintf_internal_r+0x144>
   27f74:	10c00326 	beq	r2,r3,27f84 <___vfiprintf_internal_r+0xfc>
   27f78:	94800044 	addi	r18,r18,1
   27f7c:	90800007 	ldb	r2,0(r18)
   27f80:	103ffc1e 	bne	r2,zero,27f74 <__alt_data_end+0xfffe7f74>
   27f84:	9423c83a 	sub	r17,r18,r16
   27f88:	88001026 	beq	r17,zero,27fcc <___vfiprintf_internal_r+0x144>
   27f8c:	d8c01c17 	ldw	r3,112(sp)
   27f90:	d8801b17 	ldw	r2,108(sp)
   27f94:	44000015 	stw	r16,0(r8)
   27f98:	88c7883a 	add	r3,r17,r3
   27f9c:	10800044 	addi	r2,r2,1
   27fa0:	44400115 	stw	r17,4(r8)
   27fa4:	d8c01c15 	stw	r3,112(sp)
   27fa8:	d8801b15 	stw	r2,108(sp)
   27fac:	010001c4 	movi	r4,7
   27fb0:	2080760e 	bge	r4,r2,2818c <___vfiprintf_internal_r+0x304>
   27fb4:	1803821e 	bne	r3,zero,28dc0 <___vfiprintf_internal_r+0xf38>
   27fb8:	da802317 	ldw	r10,140(sp)
   27fbc:	d8001b15 	stw	zero,108(sp)
   27fc0:	d811883a 	mov	r8,sp
   27fc4:	5455883a 	add	r10,r10,r17
   27fc8:	da802315 	stw	r10,140(sp)
   27fcc:	90800007 	ldb	r2,0(r18)
   27fd0:	10044626 	beq	r2,zero,290ec <___vfiprintf_internal_r+0x1264>
   27fd4:	90c00047 	ldb	r3,1(r18)
   27fd8:	94000044 	addi	r16,r18,1
   27fdc:	d8001d85 	stb	zero,118(sp)
   27fe0:	0009883a 	mov	r4,zero
   27fe4:	000f883a 	mov	r7,zero
   27fe8:	027fffc4 	movi	r9,-1
   27fec:	0023883a 	mov	r17,zero
   27ff0:	0029883a 	mov	r20,zero
   27ff4:	01401604 	movi	r5,88
   27ff8:	01800244 	movi	r6,9
   27ffc:	03400a84 	movi	r13,42
   28000:	03001b04 	movi	r12,108
   28004:	84000044 	addi	r16,r16,1
   28008:	18bff804 	addi	r2,r3,-32
   2800c:	28827336 	bltu	r5,r2,289dc <___vfiprintf_internal_r+0xb54>
   28010:	100490ba 	slli	r2,r2,2
   28014:	028000f4 	movhi	r10,3
   28018:	52a00a04 	addi	r10,r10,-32728
   2801c:	1285883a 	add	r2,r2,r10
   28020:	10800017 	ldw	r2,0(r2)
   28024:	1000683a 	jmp	r2
   28028:	00028710 	cmplti	zero,zero,2588
   2802c:	000289dc 	xori	zero,zero,2599
   28030:	000289dc 	xori	zero,zero,2599
   28034:	00028730 	cmpltui	zero,zero,2588
   28038:	000289dc 	xori	zero,zero,2599
   2803c:	000289dc 	xori	zero,zero,2599
   28040:	000289dc 	xori	zero,zero,2599
   28044:	000289dc 	xori	zero,zero,2599
   28048:	000289dc 	xori	zero,zero,2599
   2804c:	000289dc 	xori	zero,zero,2599
   28050:	00028918 	cmpnei	zero,zero,2596
   28054:	00028934 	movhi	zero,2596
   28058:	000289dc 	xori	zero,zero,2599
   2805c:	0002821c 	xori	zero,zero,2568
   28060:	00028944 	movi	zero,2597
   28064:	000289dc 	xori	zero,zero,2599
   28068:	0002873c 	xorhi	zero,zero,2588
   2806c:	00028748 	cmpgei	zero,zero,2589
   28070:	00028748 	cmpgei	zero,zero,2589
   28074:	00028748 	cmpgei	zero,zero,2589
   28078:	00028748 	cmpgei	zero,zero,2589
   2807c:	00028748 	cmpgei	zero,zero,2589
   28080:	00028748 	cmpgei	zero,zero,2589
   28084:	00028748 	cmpgei	zero,zero,2589
   28088:	00028748 	cmpgei	zero,zero,2589
   2808c:	00028748 	cmpgei	zero,zero,2589
   28090:	000289dc 	xori	zero,zero,2599
   28094:	000289dc 	xori	zero,zero,2599
   28098:	000289dc 	xori	zero,zero,2599
   2809c:	000289dc 	xori	zero,zero,2599
   280a0:	000289dc 	xori	zero,zero,2599
   280a4:	000289dc 	xori	zero,zero,2599
   280a8:	000289dc 	xori	zero,zero,2599
   280ac:	000289dc 	xori	zero,zero,2599
   280b0:	000289dc 	xori	zero,zero,2599
   280b4:	000289dc 	xori	zero,zero,2599
   280b8:	00028774 	movhi	zero,2589
   280bc:	000289dc 	xori	zero,zero,2599
   280c0:	000289dc 	xori	zero,zero,2599
   280c4:	000289dc 	xori	zero,zero,2599
   280c8:	000289dc 	xori	zero,zero,2599
   280cc:	000289dc 	xori	zero,zero,2599
   280d0:	000289dc 	xori	zero,zero,2599
   280d4:	000289dc 	xori	zero,zero,2599
   280d8:	000289dc 	xori	zero,zero,2599
   280dc:	000289dc 	xori	zero,zero,2599
   280e0:	000289dc 	xori	zero,zero,2599
   280e4:	000287ac 	andhi	zero,zero,2590
   280e8:	000289dc 	xori	zero,zero,2599
   280ec:	000289dc 	xori	zero,zero,2599
   280f0:	000289dc 	xori	zero,zero,2599
   280f4:	000289dc 	xori	zero,zero,2599
   280f8:	000289dc 	xori	zero,zero,2599
   280fc:	00028804 	movi	zero,2592
   28100:	000289dc 	xori	zero,zero,2599
   28104:	000289dc 	xori	zero,zero,2599
   28108:	00028874 	movhi	zero,2593
   2810c:	000289dc 	xori	zero,zero,2599
   28110:	000289dc 	xori	zero,zero,2599
   28114:	000289dc 	xori	zero,zero,2599
   28118:	000289dc 	xori	zero,zero,2599
   2811c:	000289dc 	xori	zero,zero,2599
   28120:	000289dc 	xori	zero,zero,2599
   28124:	000289dc 	xori	zero,zero,2599
   28128:	000289dc 	xori	zero,zero,2599
   2812c:	000289dc 	xori	zero,zero,2599
   28130:	000289dc 	xori	zero,zero,2599
   28134:	00028620 	cmpeqi	zero,zero,2584
   28138:	0002864c 	andi	zero,zero,2585
   2813c:	000289dc 	xori	zero,zero,2599
   28140:	000289dc 	xori	zero,zero,2599
   28144:	000289dc 	xori	zero,zero,2599
   28148:	00028984 	movi	zero,2598
   2814c:	0002864c 	andi	zero,zero,2585
   28150:	000289dc 	xori	zero,zero,2599
   28154:	000289dc 	xori	zero,zero,2599
   28158:	000284e0 	cmpeqi	zero,zero,2579
   2815c:	000289dc 	xori	zero,zero,2599
   28160:	000284f0 	cmpltui	zero,zero,2579
   28164:	0002852c 	andhi	zero,zero,2580
   28168:	00028228 	cmpgeui	zero,zero,2568
   2816c:	000284d4 	movui	zero,2579
   28170:	000289dc 	xori	zero,zero,2599
   28174:	000288b0 	cmpltui	zero,zero,2594
   28178:	000289dc 	xori	zero,zero,2599
   2817c:	00028908 	cmpgei	zero,zero,2596
   28180:	000289dc 	xori	zero,zero,2599
   28184:	000289dc 	xori	zero,zero,2599
   28188:	000285cc 	andi	zero,zero,2583
   2818c:	42000204 	addi	r8,r8,8
   28190:	da802317 	ldw	r10,140(sp)
   28194:	5455883a 	add	r10,r10,r17
   28198:	da802315 	stw	r10,140(sp)
   2819c:	003f8b06 	br	27fcc <__alt_data_end+0xfffe7fcc>
   281a0:	d9002017 	ldw	r4,128(sp)
   281a4:	a00b883a 	mov	r5,r20
   281a8:	0022b440 	call	22b44 <__swsetup_r>
   281ac:	1003b11e 	bne	r2,zero,29074 <___vfiprintf_internal_r+0x11ec>
   281b0:	a080030b 	ldhu	r2,12(r20)
   281b4:	00c00284 	movi	r3,10
   281b8:	1080068c 	andi	r2,r2,26
   281bc:	10ff541e 	bne	r2,r3,27f10 <__alt_data_end+0xfffe7f10>
   281c0:	a080038f 	ldh	r2,14(r20)
   281c4:	103f5216 	blt	r2,zero,27f10 <__alt_data_end+0xfffe7f10>
   281c8:	d9c02217 	ldw	r7,136(sp)
   281cc:	d9002017 	ldw	r4,128(sp)
   281d0:	e00d883a 	mov	r6,fp
   281d4:	a00b883a 	mov	r5,r20
   281d8:	00293000 	call	29300 <__sbprintf>
   281dc:	dfc03617 	ldw	ra,216(sp)
   281e0:	df003517 	ldw	fp,212(sp)
   281e4:	ddc03417 	ldw	r23,208(sp)
   281e8:	dd803317 	ldw	r22,204(sp)
   281ec:	dd403217 	ldw	r21,200(sp)
   281f0:	dd003117 	ldw	r20,196(sp)
   281f4:	dcc03017 	ldw	r19,192(sp)
   281f8:	dc802f17 	ldw	r18,188(sp)
   281fc:	dc402e17 	ldw	r17,184(sp)
   28200:	dc002d17 	ldw	r16,180(sp)
   28204:	dec03704 	addi	sp,sp,220
   28208:	f800283a 	ret
   2820c:	0024b180 	call	24b18 <__sinit>
   28210:	003f2f06 	br	27ed0 <__alt_data_end+0xfffe7ed0>
   28214:	0463c83a 	sub	r17,zero,r17
   28218:	d8802215 	stw	r2,136(sp)
   2821c:	a5000114 	ori	r20,r20,4
   28220:	80c00007 	ldb	r3,0(r16)
   28224:	003f7706 	br	28004 <__alt_data_end+0xfffe8004>
   28228:	00800c04 	movi	r2,48
   2822c:	da802217 	ldw	r10,136(sp)
   28230:	d8801d05 	stb	r2,116(sp)
   28234:	00801e04 	movi	r2,120
   28238:	d8801d45 	stb	r2,117(sp)
   2823c:	d8001d85 	stb	zero,118(sp)
   28240:	50c00104 	addi	r3,r10,4
   28244:	54800017 	ldw	r18,0(r10)
   28248:	0027883a 	mov	r19,zero
   2824c:	a0800094 	ori	r2,r20,2
   28250:	48030b16 	blt	r9,zero,28e80 <___vfiprintf_internal_r+0xff8>
   28254:	00bfdfc4 	movi	r2,-129
   28258:	a096703a 	and	r11,r20,r2
   2825c:	d8c02215 	stw	r3,136(sp)
   28260:	5d000094 	ori	r20,r11,2
   28264:	90032b1e 	bne	r18,zero,28f14 <___vfiprintf_internal_r+0x108c>
   28268:	008000f4 	movhi	r2,3
   2826c:	10bd2604 	addi	r2,r2,-2920
   28270:	d8802615 	stw	r2,152(sp)
   28274:	0039883a 	mov	fp,zero
   28278:	48017b1e 	bne	r9,zero,28868 <___vfiprintf_internal_r+0x9e0>
   2827c:	0013883a 	mov	r9,zero
   28280:	0027883a 	mov	r19,zero
   28284:	dd401a04 	addi	r21,sp,104
   28288:	4825883a 	mov	r18,r9
   2828c:	4cc0010e 	bge	r9,r19,28294 <___vfiprintf_internal_r+0x40c>
   28290:	9825883a 	mov	r18,r19
   28294:	e7003fcc 	andi	fp,fp,255
   28298:	e700201c 	xori	fp,fp,128
   2829c:	e73fe004 	addi	fp,fp,-128
   282a0:	e0000126 	beq	fp,zero,282a8 <___vfiprintf_internal_r+0x420>
   282a4:	94800044 	addi	r18,r18,1
   282a8:	a380008c 	andi	r14,r20,2
   282ac:	70000126 	beq	r14,zero,282b4 <___vfiprintf_internal_r+0x42c>
   282b0:	94800084 	addi	r18,r18,2
   282b4:	a700210c 	andi	fp,r20,132
   282b8:	e001df1e 	bne	fp,zero,28a38 <___vfiprintf_internal_r+0xbb0>
   282bc:	8c87c83a 	sub	r3,r17,r18
   282c0:	00c1dd0e 	bge	zero,r3,28a38 <___vfiprintf_internal_r+0xbb0>
   282c4:	01c00404 	movi	r7,16
   282c8:	d8801c17 	ldw	r2,112(sp)
   282cc:	38c3ad0e 	bge	r7,r3,29184 <___vfiprintf_internal_r+0x12fc>
   282d0:	028000f4 	movhi	r10,3
   282d4:	52bd8b04 	addi	r10,r10,-2516
   282d8:	dc002915 	stw	r16,164(sp)
   282dc:	d9801b17 	ldw	r6,108(sp)
   282e0:	da802415 	stw	r10,144(sp)
   282e4:	03c001c4 	movi	r15,7
   282e8:	da402515 	stw	r9,148(sp)
   282ec:	db802815 	stw	r14,160(sp)
   282f0:	1821883a 	mov	r16,r3
   282f4:	00000506 	br	2830c <___vfiprintf_internal_r+0x484>
   282f8:	31400084 	addi	r5,r6,2
   282fc:	42000204 	addi	r8,r8,8
   28300:	200d883a 	mov	r6,r4
   28304:	843ffc04 	addi	r16,r16,-16
   28308:	3c000d0e 	bge	r7,r16,28340 <___vfiprintf_internal_r+0x4b8>
   2830c:	10800404 	addi	r2,r2,16
   28310:	31000044 	addi	r4,r6,1
   28314:	45800015 	stw	r22,0(r8)
   28318:	41c00115 	stw	r7,4(r8)
   2831c:	d8801c15 	stw	r2,112(sp)
   28320:	d9001b15 	stw	r4,108(sp)
   28324:	793ff40e 	bge	r15,r4,282f8 <__alt_data_end+0xfffe82f8>
   28328:	1001b51e 	bne	r2,zero,28a00 <___vfiprintf_internal_r+0xb78>
   2832c:	843ffc04 	addi	r16,r16,-16
   28330:	000d883a 	mov	r6,zero
   28334:	01400044 	movi	r5,1
   28338:	d811883a 	mov	r8,sp
   2833c:	3c3ff316 	blt	r7,r16,2830c <__alt_data_end+0xfffe830c>
   28340:	8007883a 	mov	r3,r16
   28344:	da402517 	ldw	r9,148(sp)
   28348:	db802817 	ldw	r14,160(sp)
   2834c:	dc002917 	ldw	r16,164(sp)
   28350:	da802417 	ldw	r10,144(sp)
   28354:	1885883a 	add	r2,r3,r2
   28358:	40c00115 	stw	r3,4(r8)
   2835c:	42800015 	stw	r10,0(r8)
   28360:	d8801c15 	stw	r2,112(sp)
   28364:	d9401b15 	stw	r5,108(sp)
   28368:	00c001c4 	movi	r3,7
   2836c:	19426016 	blt	r3,r5,28cf0 <___vfiprintf_internal_r+0xe68>
   28370:	d8c01d87 	ldb	r3,118(sp)
   28374:	42000204 	addi	r8,r8,8
   28378:	29000044 	addi	r4,r5,1
   2837c:	1801b31e 	bne	r3,zero,28a4c <___vfiprintf_internal_r+0xbc4>
   28380:	7001c026 	beq	r14,zero,28a84 <___vfiprintf_internal_r+0xbfc>
   28384:	d8c01d04 	addi	r3,sp,116
   28388:	10800084 	addi	r2,r2,2
   2838c:	40c00015 	stw	r3,0(r8)
   28390:	00c00084 	movi	r3,2
   28394:	40c00115 	stw	r3,4(r8)
   28398:	d8801c15 	stw	r2,112(sp)
   2839c:	d9001b15 	stw	r4,108(sp)
   283a0:	00c001c4 	movi	r3,7
   283a4:	1902650e 	bge	r3,r4,28d3c <___vfiprintf_internal_r+0xeb4>
   283a8:	10029a1e 	bne	r2,zero,28e14 <___vfiprintf_internal_r+0xf8c>
   283ac:	00c02004 	movi	r3,128
   283b0:	01000044 	movi	r4,1
   283b4:	000b883a 	mov	r5,zero
   283b8:	d811883a 	mov	r8,sp
   283bc:	e0c1b31e 	bne	fp,r3,28a8c <___vfiprintf_internal_r+0xc04>
   283c0:	8cb9c83a 	sub	fp,r17,r18
   283c4:	0701b10e 	bge	zero,fp,28a8c <___vfiprintf_internal_r+0xc04>
   283c8:	01c00404 	movi	r7,16
   283cc:	3f03890e 	bge	r7,fp,291f4 <___vfiprintf_internal_r+0x136c>
   283d0:	00c000f4 	movhi	r3,3
   283d4:	18fd8704 	addi	r3,r3,-2532
   283d8:	d8c02415 	stw	r3,144(sp)
   283dc:	8007883a 	mov	r3,r16
   283e0:	034001c4 	movi	r13,7
   283e4:	e021883a 	mov	r16,fp
   283e8:	da402515 	stw	r9,148(sp)
   283ec:	1839883a 	mov	fp,r3
   283f0:	00000506 	br	28408 <___vfiprintf_internal_r+0x580>
   283f4:	29800084 	addi	r6,r5,2
   283f8:	42000204 	addi	r8,r8,8
   283fc:	180b883a 	mov	r5,r3
   28400:	843ffc04 	addi	r16,r16,-16
   28404:	3c000d0e 	bge	r7,r16,2843c <___vfiprintf_internal_r+0x5b4>
   28408:	10800404 	addi	r2,r2,16
   2840c:	28c00044 	addi	r3,r5,1
   28410:	45c00015 	stw	r23,0(r8)
   28414:	41c00115 	stw	r7,4(r8)
   28418:	d8801c15 	stw	r2,112(sp)
   2841c:	d8c01b15 	stw	r3,108(sp)
   28420:	68fff40e 	bge	r13,r3,283f4 <__alt_data_end+0xfffe83f4>
   28424:	1002241e 	bne	r2,zero,28cb8 <___vfiprintf_internal_r+0xe30>
   28428:	843ffc04 	addi	r16,r16,-16
   2842c:	01800044 	movi	r6,1
   28430:	000b883a 	mov	r5,zero
   28434:	d811883a 	mov	r8,sp
   28438:	3c3ff316 	blt	r7,r16,28408 <__alt_data_end+0xfffe8408>
   2843c:	da402517 	ldw	r9,148(sp)
   28440:	e007883a 	mov	r3,fp
   28444:	8039883a 	mov	fp,r16
   28448:	1821883a 	mov	r16,r3
   2844c:	d8c02417 	ldw	r3,144(sp)
   28450:	1705883a 	add	r2,r2,fp
   28454:	47000115 	stw	fp,4(r8)
   28458:	40c00015 	stw	r3,0(r8)
   2845c:	d8801c15 	stw	r2,112(sp)
   28460:	d9801b15 	stw	r6,108(sp)
   28464:	00c001c4 	movi	r3,7
   28468:	19827616 	blt	r3,r6,28e44 <___vfiprintf_internal_r+0xfbc>
   2846c:	4cf9c83a 	sub	fp,r9,r19
   28470:	42000204 	addi	r8,r8,8
   28474:	31000044 	addi	r4,r6,1
   28478:	300b883a 	mov	r5,r6
   2847c:	07018516 	blt	zero,fp,28a94 <___vfiprintf_internal_r+0xc0c>
   28480:	9885883a 	add	r2,r19,r2
   28484:	45400015 	stw	r21,0(r8)
   28488:	44c00115 	stw	r19,4(r8)
   2848c:	d8801c15 	stw	r2,112(sp)
   28490:	d9001b15 	stw	r4,108(sp)
   28494:	00c001c4 	movi	r3,7
   28498:	1901dd0e 	bge	r3,r4,28c10 <___vfiprintf_internal_r+0xd88>
   2849c:	1002401e 	bne	r2,zero,28da0 <___vfiprintf_internal_r+0xf18>
   284a0:	d8001b15 	stw	zero,108(sp)
   284a4:	a2c0010c 	andi	r11,r20,4
   284a8:	58000226 	beq	r11,zero,284b4 <___vfiprintf_internal_r+0x62c>
   284ac:	8ca7c83a 	sub	r19,r17,r18
   284b0:	04c2f216 	blt	zero,r19,2907c <___vfiprintf_internal_r+0x11f4>
   284b4:	8c80010e 	bge	r17,r18,284bc <___vfiprintf_internal_r+0x634>
   284b8:	9023883a 	mov	r17,r18
   284bc:	da802317 	ldw	r10,140(sp)
   284c0:	5455883a 	add	r10,r10,r17
   284c4:	da802315 	stw	r10,140(sp)
   284c8:	d8001b15 	stw	zero,108(sp)
   284cc:	d811883a 	mov	r8,sp
   284d0:	003ea206 	br	27f5c <__alt_data_end+0xfffe7f5c>
   284d4:	a5000814 	ori	r20,r20,32
   284d8:	80c00007 	ldb	r3,0(r16)
   284dc:	003ec906 	br	28004 <__alt_data_end+0xfffe8004>
   284e0:	80c00007 	ldb	r3,0(r16)
   284e4:	1b030926 	beq	r3,r12,2910c <___vfiprintf_internal_r+0x1284>
   284e8:	a5000414 	ori	r20,r20,16
   284ec:	003ec506 	br	28004 <__alt_data_end+0xfffe8004>
   284f0:	21003fcc 	andi	r4,r4,255
   284f4:	20035e1e 	bne	r4,zero,29270 <___vfiprintf_internal_r+0x13e8>
   284f8:	a080080c 	andi	r2,r20,32
   284fc:	1002a526 	beq	r2,zero,28f94 <___vfiprintf_internal_r+0x110c>
   28500:	da802217 	ldw	r10,136(sp)
   28504:	50800017 	ldw	r2,0(r10)
   28508:	da802317 	ldw	r10,140(sp)
   2850c:	5007d7fa 	srai	r3,r10,31
   28510:	da802217 	ldw	r10,136(sp)
   28514:	10c00115 	stw	r3,4(r2)
   28518:	52800104 	addi	r10,r10,4
   2851c:	da802215 	stw	r10,136(sp)
   28520:	da802317 	ldw	r10,140(sp)
   28524:	12800015 	stw	r10,0(r2)
   28528:	003e8c06 	br	27f5c <__alt_data_end+0xfffe7f5c>
   2852c:	21003fcc 	andi	r4,r4,255
   28530:	2003511e 	bne	r4,zero,29278 <___vfiprintf_internal_r+0x13f0>
   28534:	a080080c 	andi	r2,r20,32
   28538:	1000a126 	beq	r2,zero,287c0 <___vfiprintf_internal_r+0x938>
   2853c:	da802217 	ldw	r10,136(sp)
   28540:	d8001d85 	stb	zero,118(sp)
   28544:	50800204 	addi	r2,r10,8
   28548:	54800017 	ldw	r18,0(r10)
   2854c:	54c00117 	ldw	r19,4(r10)
   28550:	4802b416 	blt	r9,zero,29024 <___vfiprintf_internal_r+0x119c>
   28554:	013fdfc4 	movi	r4,-129
   28558:	94c6b03a 	or	r3,r18,r19
   2855c:	d8802215 	stw	r2,136(sp)
   28560:	a128703a 	and	r20,r20,r4
   28564:	1800a226 	beq	r3,zero,287f0 <___vfiprintf_internal_r+0x968>
   28568:	0039883a 	mov	fp,zero
   2856c:	dd401a04 	addi	r21,sp,104
   28570:	9006d0fa 	srli	r3,r18,3
   28574:	9808977a 	slli	r4,r19,29
   28578:	9826d0fa 	srli	r19,r19,3
   2857c:	948001cc 	andi	r18,r18,7
   28580:	90800c04 	addi	r2,r18,48
   28584:	ad7fffc4 	addi	r21,r21,-1
   28588:	20e4b03a 	or	r18,r4,r3
   2858c:	a8800005 	stb	r2,0(r21)
   28590:	94c6b03a 	or	r3,r18,r19
   28594:	183ff61e 	bne	r3,zero,28570 <__alt_data_end+0xfffe8570>
   28598:	a0c0004c 	andi	r3,r20,1
   2859c:	18005926 	beq	r3,zero,28704 <___vfiprintf_internal_r+0x87c>
   285a0:	10803fcc 	andi	r2,r2,255
   285a4:	1080201c 	xori	r2,r2,128
   285a8:	10bfe004 	addi	r2,r2,-128
   285ac:	00c00c04 	movi	r3,48
   285b0:	10c05426 	beq	r2,r3,28704 <___vfiprintf_internal_r+0x87c>
   285b4:	da801e17 	ldw	r10,120(sp)
   285b8:	a8bfffc4 	addi	r2,r21,-1
   285bc:	a8ffffc5 	stb	r3,-1(r21)
   285c0:	50a7c83a 	sub	r19,r10,r2
   285c4:	102b883a 	mov	r21,r2
   285c8:	003f2f06 	br	28288 <__alt_data_end+0xfffe8288>
   285cc:	21003fcc 	andi	r4,r4,255
   285d0:	2003421e 	bne	r4,zero,292dc <___vfiprintf_internal_r+0x1454>
   285d4:	008000f4 	movhi	r2,3
   285d8:	10bd2604 	addi	r2,r2,-2920
   285dc:	d8802615 	stw	r2,152(sp)
   285e0:	a080080c 	andi	r2,r20,32
   285e4:	1000aa26 	beq	r2,zero,28890 <___vfiprintf_internal_r+0xa08>
   285e8:	da802217 	ldw	r10,136(sp)
   285ec:	54800017 	ldw	r18,0(r10)
   285f0:	54c00117 	ldw	r19,4(r10)
   285f4:	52800204 	addi	r10,r10,8
   285f8:	da802215 	stw	r10,136(sp)
   285fc:	a080004c 	andi	r2,r20,1
   28600:	1001d226 	beq	r2,zero,28d4c <___vfiprintf_internal_r+0xec4>
   28604:	94c4b03a 	or	r2,r18,r19
   28608:	1002351e 	bne	r2,zero,28ee0 <___vfiprintf_internal_r+0x1058>
   2860c:	d8001d85 	stb	zero,118(sp)
   28610:	48022216 	blt	r9,zero,28e9c <___vfiprintf_internal_r+0x1014>
   28614:	00bfdfc4 	movi	r2,-129
   28618:	a0a8703a 	and	r20,r20,r2
   2861c:	003f1506 	br	28274 <__alt_data_end+0xfffe8274>
   28620:	da802217 	ldw	r10,136(sp)
   28624:	04800044 	movi	r18,1
   28628:	d8001d85 	stb	zero,118(sp)
   2862c:	50800017 	ldw	r2,0(r10)
   28630:	52800104 	addi	r10,r10,4
   28634:	da802215 	stw	r10,136(sp)
   28638:	d8801005 	stb	r2,64(sp)
   2863c:	9027883a 	mov	r19,r18
   28640:	dd401004 	addi	r21,sp,64
   28644:	0013883a 	mov	r9,zero
   28648:	003f1706 	br	282a8 <__alt_data_end+0xfffe82a8>
   2864c:	21003fcc 	andi	r4,r4,255
   28650:	2003201e 	bne	r4,zero,292d4 <___vfiprintf_internal_r+0x144c>
   28654:	a080080c 	andi	r2,r20,32
   28658:	10004b26 	beq	r2,zero,28788 <___vfiprintf_internal_r+0x900>
   2865c:	da802217 	ldw	r10,136(sp)
   28660:	50800117 	ldw	r2,4(r10)
   28664:	54800017 	ldw	r18,0(r10)
   28668:	52800204 	addi	r10,r10,8
   2866c:	da802215 	stw	r10,136(sp)
   28670:	1027883a 	mov	r19,r2
   28674:	10022c16 	blt	r2,zero,28f28 <___vfiprintf_internal_r+0x10a0>
   28678:	df001d83 	ldbu	fp,118(sp)
   2867c:	48007216 	blt	r9,zero,28848 <___vfiprintf_internal_r+0x9c0>
   28680:	00ffdfc4 	movi	r3,-129
   28684:	94c4b03a 	or	r2,r18,r19
   28688:	a0e8703a 	and	r20,r20,r3
   2868c:	1000cc26 	beq	r2,zero,289c0 <___vfiprintf_internal_r+0xb38>
   28690:	98021026 	beq	r19,zero,28ed4 <___vfiprintf_internal_r+0x104c>
   28694:	dc402415 	stw	r17,144(sp)
   28698:	dc002515 	stw	r16,148(sp)
   2869c:	9823883a 	mov	r17,r19
   286a0:	9021883a 	mov	r16,r18
   286a4:	dd401a04 	addi	r21,sp,104
   286a8:	4825883a 	mov	r18,r9
   286ac:	4027883a 	mov	r19,r8
   286b0:	8009883a 	mov	r4,r16
   286b4:	880b883a 	mov	r5,r17
   286b8:	01800284 	movi	r6,10
   286bc:	000f883a 	mov	r7,zero
   286c0:	002a2680 	call	2a268 <__umoddi3>
   286c4:	10800c04 	addi	r2,r2,48
   286c8:	ad7fffc4 	addi	r21,r21,-1
   286cc:	8009883a 	mov	r4,r16
   286d0:	880b883a 	mov	r5,r17
   286d4:	a8800005 	stb	r2,0(r21)
   286d8:	01800284 	movi	r6,10
   286dc:	000f883a 	mov	r7,zero
   286e0:	0029cf00 	call	29cf0 <__udivdi3>
   286e4:	1021883a 	mov	r16,r2
   286e8:	10c4b03a 	or	r2,r2,r3
   286ec:	1823883a 	mov	r17,r3
   286f0:	103fef1e 	bne	r2,zero,286b0 <__alt_data_end+0xfffe86b0>
   286f4:	dc402417 	ldw	r17,144(sp)
   286f8:	dc002517 	ldw	r16,148(sp)
   286fc:	9013883a 	mov	r9,r18
   28700:	9811883a 	mov	r8,r19
   28704:	da801e17 	ldw	r10,120(sp)
   28708:	5567c83a 	sub	r19,r10,r21
   2870c:	003ede06 	br	28288 <__alt_data_end+0xfffe8288>
   28710:	38803fcc 	andi	r2,r7,255
   28714:	1080201c 	xori	r2,r2,128
   28718:	10bfe004 	addi	r2,r2,-128
   2871c:	1002371e 	bne	r2,zero,28ffc <___vfiprintf_internal_r+0x1174>
   28720:	01000044 	movi	r4,1
   28724:	01c00804 	movi	r7,32
   28728:	80c00007 	ldb	r3,0(r16)
   2872c:	003e3506 	br	28004 <__alt_data_end+0xfffe8004>
   28730:	a5000054 	ori	r20,r20,1
   28734:	80c00007 	ldb	r3,0(r16)
   28738:	003e3206 	br	28004 <__alt_data_end+0xfffe8004>
   2873c:	a5002014 	ori	r20,r20,128
   28740:	80c00007 	ldb	r3,0(r16)
   28744:	003e2f06 	br	28004 <__alt_data_end+0xfffe8004>
   28748:	8015883a 	mov	r10,r16
   2874c:	0023883a 	mov	r17,zero
   28750:	18bff404 	addi	r2,r3,-48
   28754:	50c00007 	ldb	r3,0(r10)
   28758:	8c4002a4 	muli	r17,r17,10
   2875c:	84000044 	addi	r16,r16,1
   28760:	8015883a 	mov	r10,r16
   28764:	1463883a 	add	r17,r2,r17
   28768:	18bff404 	addi	r2,r3,-48
   2876c:	30bff92e 	bgeu	r6,r2,28754 <__alt_data_end+0xfffe8754>
   28770:	003e2506 	br	28008 <__alt_data_end+0xfffe8008>
   28774:	21003fcc 	andi	r4,r4,255
   28778:	2002d41e 	bne	r4,zero,292cc <___vfiprintf_internal_r+0x1444>
   2877c:	a5000414 	ori	r20,r20,16
   28780:	a080080c 	andi	r2,r20,32
   28784:	103fb51e 	bne	r2,zero,2865c <__alt_data_end+0xfffe865c>
   28788:	a080040c 	andi	r2,r20,16
   2878c:	1001f826 	beq	r2,zero,28f70 <___vfiprintf_internal_r+0x10e8>
   28790:	da802217 	ldw	r10,136(sp)
   28794:	54800017 	ldw	r18,0(r10)
   28798:	52800104 	addi	r10,r10,4
   2879c:	da802215 	stw	r10,136(sp)
   287a0:	9027d7fa 	srai	r19,r18,31
   287a4:	9805883a 	mov	r2,r19
   287a8:	003fb206 	br	28674 <__alt_data_end+0xfffe8674>
   287ac:	21003fcc 	andi	r4,r4,255
   287b0:	2002c41e 	bne	r4,zero,292c4 <___vfiprintf_internal_r+0x143c>
   287b4:	a5000414 	ori	r20,r20,16
   287b8:	a080080c 	andi	r2,r20,32
   287bc:	103f5f1e 	bne	r2,zero,2853c <__alt_data_end+0xfffe853c>
   287c0:	a080040c 	andi	r2,r20,16
   287c4:	10020f26 	beq	r2,zero,29004 <___vfiprintf_internal_r+0x117c>
   287c8:	da802217 	ldw	r10,136(sp)
   287cc:	d8001d85 	stb	zero,118(sp)
   287d0:	0027883a 	mov	r19,zero
   287d4:	50800104 	addi	r2,r10,4
   287d8:	54800017 	ldw	r18,0(r10)
   287dc:	48021116 	blt	r9,zero,29024 <___vfiprintf_internal_r+0x119c>
   287e0:	00ffdfc4 	movi	r3,-129
   287e4:	d8802215 	stw	r2,136(sp)
   287e8:	a0e8703a 	and	r20,r20,r3
   287ec:	903f5e1e 	bne	r18,zero,28568 <__alt_data_end+0xfffe8568>
   287f0:	0039883a 	mov	fp,zero
   287f4:	4802a626 	beq	r9,zero,29290 <___vfiprintf_internal_r+0x1408>
   287f8:	0025883a 	mov	r18,zero
   287fc:	0027883a 	mov	r19,zero
   28800:	003f5a06 	br	2856c <__alt_data_end+0xfffe856c>
   28804:	21003fcc 	andi	r4,r4,255
   28808:	20029f1e 	bne	r4,zero,29288 <___vfiprintf_internal_r+0x1400>
   2880c:	a5000414 	ori	r20,r20,16
   28810:	a080080c 	andi	r2,r20,32
   28814:	10005e1e 	bne	r2,zero,28990 <___vfiprintf_internal_r+0xb08>
   28818:	a080040c 	andi	r2,r20,16
   2881c:	1001a21e 	bne	r2,zero,28ea8 <___vfiprintf_internal_r+0x1020>
   28820:	a080100c 	andi	r2,r20,64
   28824:	d8001d85 	stb	zero,118(sp)
   28828:	da802217 	ldw	r10,136(sp)
   2882c:	1002231e 	bne	r2,zero,290bc <___vfiprintf_internal_r+0x1234>
   28830:	50800104 	addi	r2,r10,4
   28834:	54800017 	ldw	r18,0(r10)
   28838:	0027883a 	mov	r19,zero
   2883c:	4801a00e 	bge	r9,zero,28ec0 <___vfiprintf_internal_r+0x1038>
   28840:	d8802215 	stw	r2,136(sp)
   28844:	0039883a 	mov	fp,zero
   28848:	94c4b03a 	or	r2,r18,r19
   2884c:	103f901e 	bne	r2,zero,28690 <__alt_data_end+0xfffe8690>
   28850:	00800044 	movi	r2,1
   28854:	10803fcc 	andi	r2,r2,255
   28858:	00c00044 	movi	r3,1
   2885c:	10c05926 	beq	r2,r3,289c4 <___vfiprintf_internal_r+0xb3c>
   28860:	00c00084 	movi	r3,2
   28864:	10ffe41e 	bne	r2,r3,287f8 <__alt_data_end+0xfffe87f8>
   28868:	0025883a 	mov	r18,zero
   2886c:	0027883a 	mov	r19,zero
   28870:	00013d06 	br	28d68 <___vfiprintf_internal_r+0xee0>
   28874:	21003fcc 	andi	r4,r4,255
   28878:	2002811e 	bne	r4,zero,29280 <___vfiprintf_internal_r+0x13f8>
   2887c:	008000f4 	movhi	r2,3
   28880:	10bd2104 	addi	r2,r2,-2940
   28884:	d8802615 	stw	r2,152(sp)
   28888:	a080080c 	andi	r2,r20,32
   2888c:	103f561e 	bne	r2,zero,285e8 <__alt_data_end+0xfffe85e8>
   28890:	a080040c 	andi	r2,r20,16
   28894:	1001d126 	beq	r2,zero,28fdc <___vfiprintf_internal_r+0x1154>
   28898:	da802217 	ldw	r10,136(sp)
   2889c:	0027883a 	mov	r19,zero
   288a0:	54800017 	ldw	r18,0(r10)
   288a4:	52800104 	addi	r10,r10,4
   288a8:	da802215 	stw	r10,136(sp)
   288ac:	003f5306 	br	285fc <__alt_data_end+0xfffe85fc>
   288b0:	da802217 	ldw	r10,136(sp)
   288b4:	d8001d85 	stb	zero,118(sp)
   288b8:	55400017 	ldw	r21,0(r10)
   288bc:	50c00104 	addi	r3,r10,4
   288c0:	a8024226 	beq	r21,zero,291cc <___vfiprintf_internal_r+0x1344>
   288c4:	48021816 	blt	r9,zero,29128 <___vfiprintf_internal_r+0x12a0>
   288c8:	480d883a 	mov	r6,r9
   288cc:	000b883a 	mov	r5,zero
   288d0:	a809883a 	mov	r4,r21
   288d4:	d8c02a15 	stw	r3,168(sp)
   288d8:	da002b15 	stw	r8,172(sp)
   288dc:	da402c15 	stw	r9,176(sp)
   288e0:	00260840 	call	26084 <memchr>
   288e4:	d8c02a17 	ldw	r3,168(sp)
   288e8:	da002b17 	ldw	r8,172(sp)
   288ec:	da402c17 	ldw	r9,176(sp)
   288f0:	10024826 	beq	r2,zero,29214 <___vfiprintf_internal_r+0x138c>
   288f4:	1567c83a 	sub	r19,r2,r21
   288f8:	df001d83 	ldbu	fp,118(sp)
   288fc:	d8c02215 	stw	r3,136(sp)
   28900:	0013883a 	mov	r9,zero
   28904:	003e6006 	br	28288 <__alt_data_end+0xfffe8288>
   28908:	21003fcc 	andi	r4,r4,255
   2890c:	203fc026 	beq	r4,zero,28810 <__alt_data_end+0xfffe8810>
   28910:	d9c01d85 	stb	r7,118(sp)
   28914:	003fbe06 	br	28810 <__alt_data_end+0xfffe8810>
   28918:	da802217 	ldw	r10,136(sp)
   2891c:	54400017 	ldw	r17,0(r10)
   28920:	50800104 	addi	r2,r10,4
   28924:	883e3b16 	blt	r17,zero,28214 <__alt_data_end+0xfffe8214>
   28928:	d8802215 	stw	r2,136(sp)
   2892c:	80c00007 	ldb	r3,0(r16)
   28930:	003db406 	br	28004 <__alt_data_end+0xfffe8004>
   28934:	01000044 	movi	r4,1
   28938:	01c00ac4 	movi	r7,43
   2893c:	80c00007 	ldb	r3,0(r16)
   28940:	003db006 	br	28004 <__alt_data_end+0xfffe8004>
   28944:	80c00007 	ldb	r3,0(r16)
   28948:	82800044 	addi	r10,r16,1
   2894c:	1b423c26 	beq	r3,r13,29240 <___vfiprintf_internal_r+0x13b8>
   28950:	18bff404 	addi	r2,r3,-48
   28954:	0013883a 	mov	r9,zero
   28958:	30822b36 	bltu	r6,r2,29208 <___vfiprintf_internal_r+0x1380>
   2895c:	50c00007 	ldb	r3,0(r10)
   28960:	4a4002a4 	muli	r9,r9,10
   28964:	54000044 	addi	r16,r10,1
   28968:	8015883a 	mov	r10,r16
   2896c:	4893883a 	add	r9,r9,r2
   28970:	18bff404 	addi	r2,r3,-48
   28974:	30bff92e 	bgeu	r6,r2,2895c <__alt_data_end+0xfffe895c>
   28978:	483da30e 	bge	r9,zero,28008 <__alt_data_end+0xfffe8008>
   2897c:	027fffc4 	movi	r9,-1
   28980:	003da106 	br	28008 <__alt_data_end+0xfffe8008>
   28984:	a5001014 	ori	r20,r20,64
   28988:	80c00007 	ldb	r3,0(r16)
   2898c:	003d9d06 	br	28004 <__alt_data_end+0xfffe8004>
   28990:	da802217 	ldw	r10,136(sp)
   28994:	d8001d85 	stb	zero,118(sp)
   28998:	50c00204 	addi	r3,r10,8
   2899c:	54800017 	ldw	r18,0(r10)
   289a0:	54c00117 	ldw	r19,4(r10)
   289a4:	4801ca16 	blt	r9,zero,290d0 <___vfiprintf_internal_r+0x1248>
   289a8:	013fdfc4 	movi	r4,-129
   289ac:	94c4b03a 	or	r2,r18,r19
   289b0:	d8c02215 	stw	r3,136(sp)
   289b4:	a128703a 	and	r20,r20,r4
   289b8:	0039883a 	mov	fp,zero
   289bc:	103f341e 	bne	r2,zero,28690 <__alt_data_end+0xfffe8690>
   289c0:	483e2e26 	beq	r9,zero,2827c <__alt_data_end+0xfffe827c>
   289c4:	0025883a 	mov	r18,zero
   289c8:	94800c04 	addi	r18,r18,48
   289cc:	dc8019c5 	stb	r18,103(sp)
   289d0:	dcc02717 	ldw	r19,156(sp)
   289d4:	dd4019c4 	addi	r21,sp,103
   289d8:	003e2b06 	br	28288 <__alt_data_end+0xfffe8288>
   289dc:	21003fcc 	andi	r4,r4,255
   289e0:	2002361e 	bne	r4,zero,292bc <___vfiprintf_internal_r+0x1434>
   289e4:	1801c126 	beq	r3,zero,290ec <___vfiprintf_internal_r+0x1264>
   289e8:	04800044 	movi	r18,1
   289ec:	d8c01005 	stb	r3,64(sp)
   289f0:	d8001d85 	stb	zero,118(sp)
   289f4:	9027883a 	mov	r19,r18
   289f8:	dd401004 	addi	r21,sp,64
   289fc:	003f1106 	br	28644 <__alt_data_end+0xfffe8644>
   28a00:	d9402117 	ldw	r5,132(sp)
   28a04:	d9002017 	ldw	r4,128(sp)
   28a08:	d9801a04 	addi	r6,sp,104
   28a0c:	d9c02b15 	stw	r7,172(sp)
   28a10:	dbc02a15 	stw	r15,168(sp)
   28a14:	0027d740 	call	27d74 <__sprint_r.part.0>
   28a18:	d9c02b17 	ldw	r7,172(sp)
   28a1c:	dbc02a17 	ldw	r15,168(sp)
   28a20:	10006d1e 	bne	r2,zero,28bd8 <___vfiprintf_internal_r+0xd50>
   28a24:	d9801b17 	ldw	r6,108(sp)
   28a28:	d8801c17 	ldw	r2,112(sp)
   28a2c:	d811883a 	mov	r8,sp
   28a30:	31400044 	addi	r5,r6,1
   28a34:	003e3306 	br	28304 <__alt_data_end+0xfffe8304>
   28a38:	d9401b17 	ldw	r5,108(sp)
   28a3c:	d8801c17 	ldw	r2,112(sp)
   28a40:	29000044 	addi	r4,r5,1
   28a44:	d8c01d87 	ldb	r3,118(sp)
   28a48:	183e4d26 	beq	r3,zero,28380 <__alt_data_end+0xfffe8380>
   28a4c:	00c00044 	movi	r3,1
   28a50:	d9401d84 	addi	r5,sp,118
   28a54:	10c5883a 	add	r2,r2,r3
   28a58:	41400015 	stw	r5,0(r8)
   28a5c:	40c00115 	stw	r3,4(r8)
   28a60:	d8801c15 	stw	r2,112(sp)
   28a64:	d9001b15 	stw	r4,108(sp)
   28a68:	014001c4 	movi	r5,7
   28a6c:	2900a90e 	bge	r5,r4,28d14 <___vfiprintf_internal_r+0xe8c>
   28a70:	1000da1e 	bne	r2,zero,28ddc <___vfiprintf_internal_r+0xf54>
   28a74:	7000ab1e 	bne	r14,zero,28d24 <___vfiprintf_internal_r+0xe9c>
   28a78:	000b883a 	mov	r5,zero
   28a7c:	1809883a 	mov	r4,r3
   28a80:	d811883a 	mov	r8,sp
   28a84:	00c02004 	movi	r3,128
   28a88:	e0fe4d26 	beq	fp,r3,283c0 <__alt_data_end+0xfffe83c0>
   28a8c:	4cf9c83a 	sub	fp,r9,r19
   28a90:	073e7b0e 	bge	zero,fp,28480 <__alt_data_end+0xfffe8480>
   28a94:	01c00404 	movi	r7,16
   28a98:	3f01900e 	bge	r7,fp,290dc <___vfiprintf_internal_r+0x1254>
   28a9c:	00c000f4 	movhi	r3,3
   28aa0:	18fd8704 	addi	r3,r3,-2532
   28aa4:	d8c02415 	stw	r3,144(sp)
   28aa8:	034001c4 	movi	r13,7
   28aac:	00000506 	br	28ac4 <___vfiprintf_internal_r+0xc3c>
   28ab0:	29000084 	addi	r4,r5,2
   28ab4:	42000204 	addi	r8,r8,8
   28ab8:	180b883a 	mov	r5,r3
   28abc:	e73ffc04 	addi	fp,fp,-16
   28ac0:	3f000d0e 	bge	r7,fp,28af8 <___vfiprintf_internal_r+0xc70>
   28ac4:	10800404 	addi	r2,r2,16
   28ac8:	28c00044 	addi	r3,r5,1
   28acc:	45c00015 	stw	r23,0(r8)
   28ad0:	41c00115 	stw	r7,4(r8)
   28ad4:	d8801c15 	stw	r2,112(sp)
   28ad8:	d8c01b15 	stw	r3,108(sp)
   28adc:	68fff40e 	bge	r13,r3,28ab0 <__alt_data_end+0xfffe8ab0>
   28ae0:	1000101e 	bne	r2,zero,28b24 <___vfiprintf_internal_r+0xc9c>
   28ae4:	e73ffc04 	addi	fp,fp,-16
   28ae8:	01000044 	movi	r4,1
   28aec:	000b883a 	mov	r5,zero
   28af0:	d811883a 	mov	r8,sp
   28af4:	3f3ff316 	blt	r7,fp,28ac4 <__alt_data_end+0xfffe8ac4>
   28af8:	da802417 	ldw	r10,144(sp)
   28afc:	1705883a 	add	r2,r2,fp
   28b00:	47000115 	stw	fp,4(r8)
   28b04:	42800015 	stw	r10,0(r8)
   28b08:	d8801c15 	stw	r2,112(sp)
   28b0c:	d9001b15 	stw	r4,108(sp)
   28b10:	00c001c4 	movi	r3,7
   28b14:	19003616 	blt	r3,r4,28bf0 <___vfiprintf_internal_r+0xd68>
   28b18:	42000204 	addi	r8,r8,8
   28b1c:	21000044 	addi	r4,r4,1
   28b20:	003e5706 	br	28480 <__alt_data_end+0xfffe8480>
   28b24:	d9402117 	ldw	r5,132(sp)
   28b28:	d9002017 	ldw	r4,128(sp)
   28b2c:	d9801a04 	addi	r6,sp,104
   28b30:	d9c02b15 	stw	r7,172(sp)
   28b34:	db402a15 	stw	r13,168(sp)
   28b38:	0027d740 	call	27d74 <__sprint_r.part.0>
   28b3c:	d9c02b17 	ldw	r7,172(sp)
   28b40:	db402a17 	ldw	r13,168(sp)
   28b44:	1000241e 	bne	r2,zero,28bd8 <___vfiprintf_internal_r+0xd50>
   28b48:	d9401b17 	ldw	r5,108(sp)
   28b4c:	d8801c17 	ldw	r2,112(sp)
   28b50:	d811883a 	mov	r8,sp
   28b54:	29000044 	addi	r4,r5,1
   28b58:	003fd806 	br	28abc <__alt_data_end+0xfffe8abc>
   28b5c:	d9401b17 	ldw	r5,108(sp)
   28b60:	00c000f4 	movhi	r3,3
   28b64:	18fd8b04 	addi	r3,r3,-2516
   28b68:	d8c02415 	stw	r3,144(sp)
   28b6c:	29400044 	addi	r5,r5,1
   28b70:	d8c02417 	ldw	r3,144(sp)
   28b74:	14c5883a 	add	r2,r2,r19
   28b78:	44c00115 	stw	r19,4(r8)
   28b7c:	40c00015 	stw	r3,0(r8)
   28b80:	d8801c15 	stw	r2,112(sp)
   28b84:	d9401b15 	stw	r5,108(sp)
   28b88:	00c001c4 	movi	r3,7
   28b8c:	1940070e 	bge	r3,r5,28bac <___vfiprintf_internal_r+0xd24>
   28b90:	103e4826 	beq	r2,zero,284b4 <__alt_data_end+0xfffe84b4>
   28b94:	d9402117 	ldw	r5,132(sp)
   28b98:	d9002017 	ldw	r4,128(sp)
   28b9c:	d9801a04 	addi	r6,sp,104
   28ba0:	0027d740 	call	27d74 <__sprint_r.part.0>
   28ba4:	10000c1e 	bne	r2,zero,28bd8 <___vfiprintf_internal_r+0xd50>
   28ba8:	d8801c17 	ldw	r2,112(sp)
   28bac:	8c80010e 	bge	r17,r18,28bb4 <___vfiprintf_internal_r+0xd2c>
   28bb0:	9023883a 	mov	r17,r18
   28bb4:	da802317 	ldw	r10,140(sp)
   28bb8:	5455883a 	add	r10,r10,r17
   28bbc:	da802315 	stw	r10,140(sp)
   28bc0:	103e4126 	beq	r2,zero,284c8 <__alt_data_end+0xfffe84c8>
   28bc4:	d9402117 	ldw	r5,132(sp)
   28bc8:	d9002017 	ldw	r4,128(sp)
   28bcc:	d9801a04 	addi	r6,sp,104
   28bd0:	0027d740 	call	27d74 <__sprint_r.part.0>
   28bd4:	103e3c26 	beq	r2,zero,284c8 <__alt_data_end+0xfffe84c8>
   28bd8:	dd002117 	ldw	r20,132(sp)
   28bdc:	a080030b 	ldhu	r2,12(r20)
   28be0:	1080100c 	andi	r2,r2,64
   28be4:	1001231e 	bne	r2,zero,29074 <___vfiprintf_internal_r+0x11ec>
   28be8:	d8802317 	ldw	r2,140(sp)
   28bec:	003d7b06 	br	281dc <__alt_data_end+0xfffe81dc>
   28bf0:	1000991e 	bne	r2,zero,28e58 <___vfiprintf_internal_r+0xfd0>
   28bf4:	00c00044 	movi	r3,1
   28bf8:	9805883a 	mov	r2,r19
   28bfc:	dd400015 	stw	r21,0(sp)
   28c00:	dcc00115 	stw	r19,4(sp)
   28c04:	dcc01c15 	stw	r19,112(sp)
   28c08:	d8c01b15 	stw	r3,108(sp)
   28c0c:	d811883a 	mov	r8,sp
   28c10:	42000204 	addi	r8,r8,8
   28c14:	a2c0010c 	andi	r11,r20,4
   28c18:	583fe426 	beq	r11,zero,28bac <__alt_data_end+0xfffe8bac>
   28c1c:	8ca7c83a 	sub	r19,r17,r18
   28c20:	04ffe20e 	bge	zero,r19,28bac <__alt_data_end+0xfffe8bac>
   28c24:	01c00404 	movi	r7,16
   28c28:	3cffcc0e 	bge	r7,r19,28b5c <__alt_data_end+0xfffe8b5c>
   28c2c:	028000f4 	movhi	r10,3
   28c30:	52bd8b04 	addi	r10,r10,-2516
   28c34:	d9001b17 	ldw	r4,108(sp)
   28c38:	da802415 	stw	r10,144(sp)
   28c3c:	382b883a 	mov	r21,r7
   28c40:	050001c4 	movi	r20,7
   28c44:	df002017 	ldw	fp,128(sp)
   28c48:	00000506 	br	28c60 <___vfiprintf_internal_r+0xdd8>
   28c4c:	21400084 	addi	r5,r4,2
   28c50:	42000204 	addi	r8,r8,8
   28c54:	1809883a 	mov	r4,r3
   28c58:	9cfffc04 	addi	r19,r19,-16
   28c5c:	acffc40e 	bge	r21,r19,28b70 <__alt_data_end+0xfffe8b70>
   28c60:	10800404 	addi	r2,r2,16
   28c64:	20c00044 	addi	r3,r4,1
   28c68:	45800015 	stw	r22,0(r8)
   28c6c:	45400115 	stw	r21,4(r8)
   28c70:	d8801c15 	stw	r2,112(sp)
   28c74:	d8c01b15 	stw	r3,108(sp)
   28c78:	a0fff40e 	bge	r20,r3,28c4c <__alt_data_end+0xfffe8c4c>
   28c7c:	1000041e 	bne	r2,zero,28c90 <___vfiprintf_internal_r+0xe08>
   28c80:	01400044 	movi	r5,1
   28c84:	0009883a 	mov	r4,zero
   28c88:	d811883a 	mov	r8,sp
   28c8c:	003ff206 	br	28c58 <__alt_data_end+0xfffe8c58>
   28c90:	d9402117 	ldw	r5,132(sp)
   28c94:	d9801a04 	addi	r6,sp,104
   28c98:	e009883a 	mov	r4,fp
   28c9c:	0027d740 	call	27d74 <__sprint_r.part.0>
   28ca0:	103fcd1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28ca4:	d9001b17 	ldw	r4,108(sp)
   28ca8:	d8801c17 	ldw	r2,112(sp)
   28cac:	d811883a 	mov	r8,sp
   28cb0:	21400044 	addi	r5,r4,1
   28cb4:	003fe806 	br	28c58 <__alt_data_end+0xfffe8c58>
   28cb8:	d9402117 	ldw	r5,132(sp)
   28cbc:	d9002017 	ldw	r4,128(sp)
   28cc0:	d9801a04 	addi	r6,sp,104
   28cc4:	d9c02b15 	stw	r7,172(sp)
   28cc8:	db402a15 	stw	r13,168(sp)
   28ccc:	0027d740 	call	27d74 <__sprint_r.part.0>
   28cd0:	d9c02b17 	ldw	r7,172(sp)
   28cd4:	db402a17 	ldw	r13,168(sp)
   28cd8:	103fbf1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28cdc:	d9401b17 	ldw	r5,108(sp)
   28ce0:	d8801c17 	ldw	r2,112(sp)
   28ce4:	d811883a 	mov	r8,sp
   28ce8:	29800044 	addi	r6,r5,1
   28cec:	003dc406 	br	28400 <__alt_data_end+0xfffe8400>
   28cf0:	1000d21e 	bne	r2,zero,2903c <___vfiprintf_internal_r+0x11b4>
   28cf4:	d8c01d87 	ldb	r3,118(sp)
   28cf8:	18009526 	beq	r3,zero,28f50 <___vfiprintf_internal_r+0x10c8>
   28cfc:	00800044 	movi	r2,1
   28d00:	d8c01d84 	addi	r3,sp,118
   28d04:	1009883a 	mov	r4,r2
   28d08:	d8c00015 	stw	r3,0(sp)
   28d0c:	d8800115 	stw	r2,4(sp)
   28d10:	d811883a 	mov	r8,sp
   28d14:	200b883a 	mov	r5,r4
   28d18:	42000204 	addi	r8,r8,8
   28d1c:	21000044 	addi	r4,r4,1
   28d20:	003d9706 	br	28380 <__alt_data_end+0xfffe8380>
   28d24:	d9001d04 	addi	r4,sp,116
   28d28:	00800084 	movi	r2,2
   28d2c:	d9000015 	stw	r4,0(sp)
   28d30:	d8800115 	stw	r2,4(sp)
   28d34:	1809883a 	mov	r4,r3
   28d38:	d811883a 	mov	r8,sp
   28d3c:	200b883a 	mov	r5,r4
   28d40:	42000204 	addi	r8,r8,8
   28d44:	21000044 	addi	r4,r4,1
   28d48:	003f4e06 	br	28a84 <__alt_data_end+0xfffe8a84>
   28d4c:	d8001d85 	stb	zero,118(sp)
   28d50:	48005016 	blt	r9,zero,28e94 <___vfiprintf_internal_r+0x100c>
   28d54:	00ffdfc4 	movi	r3,-129
   28d58:	94c4b03a 	or	r2,r18,r19
   28d5c:	a0e8703a 	and	r20,r20,r3
   28d60:	103d4426 	beq	r2,zero,28274 <__alt_data_end+0xfffe8274>
   28d64:	0039883a 	mov	fp,zero
   28d68:	d9002617 	ldw	r4,152(sp)
   28d6c:	dd401a04 	addi	r21,sp,104
   28d70:	908003cc 	andi	r2,r18,15
   28d74:	9806973a 	slli	r3,r19,28
   28d78:	2085883a 	add	r2,r4,r2
   28d7c:	9024d13a 	srli	r18,r18,4
   28d80:	10800003 	ldbu	r2,0(r2)
   28d84:	9826d13a 	srli	r19,r19,4
   28d88:	ad7fffc4 	addi	r21,r21,-1
   28d8c:	1ca4b03a 	or	r18,r3,r18
   28d90:	a8800005 	stb	r2,0(r21)
   28d94:	94c4b03a 	or	r2,r18,r19
   28d98:	103ff51e 	bne	r2,zero,28d70 <__alt_data_end+0xfffe8d70>
   28d9c:	003e5906 	br	28704 <__alt_data_end+0xfffe8704>
   28da0:	d9402117 	ldw	r5,132(sp)
   28da4:	d9002017 	ldw	r4,128(sp)
   28da8:	d9801a04 	addi	r6,sp,104
   28dac:	0027d740 	call	27d74 <__sprint_r.part.0>
   28db0:	103f891e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28db4:	d8801c17 	ldw	r2,112(sp)
   28db8:	d811883a 	mov	r8,sp
   28dbc:	003f9506 	br	28c14 <__alt_data_end+0xfffe8c14>
   28dc0:	d9402117 	ldw	r5,132(sp)
   28dc4:	d9002017 	ldw	r4,128(sp)
   28dc8:	d9801a04 	addi	r6,sp,104
   28dcc:	0027d740 	call	27d74 <__sprint_r.part.0>
   28dd0:	103f811e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28dd4:	d811883a 	mov	r8,sp
   28dd8:	003ced06 	br	28190 <__alt_data_end+0xfffe8190>
   28ddc:	d9402117 	ldw	r5,132(sp)
   28de0:	d9002017 	ldw	r4,128(sp)
   28de4:	d9801a04 	addi	r6,sp,104
   28de8:	da402c15 	stw	r9,176(sp)
   28dec:	db802a15 	stw	r14,168(sp)
   28df0:	0027d740 	call	27d74 <__sprint_r.part.0>
   28df4:	da402c17 	ldw	r9,176(sp)
   28df8:	db802a17 	ldw	r14,168(sp)
   28dfc:	103f761e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28e00:	d9401b17 	ldw	r5,108(sp)
   28e04:	d8801c17 	ldw	r2,112(sp)
   28e08:	d811883a 	mov	r8,sp
   28e0c:	29000044 	addi	r4,r5,1
   28e10:	003d5b06 	br	28380 <__alt_data_end+0xfffe8380>
   28e14:	d9402117 	ldw	r5,132(sp)
   28e18:	d9002017 	ldw	r4,128(sp)
   28e1c:	d9801a04 	addi	r6,sp,104
   28e20:	da402c15 	stw	r9,176(sp)
   28e24:	0027d740 	call	27d74 <__sprint_r.part.0>
   28e28:	da402c17 	ldw	r9,176(sp)
   28e2c:	103f6a1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28e30:	d9401b17 	ldw	r5,108(sp)
   28e34:	d8801c17 	ldw	r2,112(sp)
   28e38:	d811883a 	mov	r8,sp
   28e3c:	29000044 	addi	r4,r5,1
   28e40:	003f1006 	br	28a84 <__alt_data_end+0xfffe8a84>
   28e44:	1000c31e 	bne	r2,zero,29154 <___vfiprintf_internal_r+0x12cc>
   28e48:	01000044 	movi	r4,1
   28e4c:	000b883a 	mov	r5,zero
   28e50:	d811883a 	mov	r8,sp
   28e54:	003f0d06 	br	28a8c <__alt_data_end+0xfffe8a8c>
   28e58:	d9402117 	ldw	r5,132(sp)
   28e5c:	d9002017 	ldw	r4,128(sp)
   28e60:	d9801a04 	addi	r6,sp,104
   28e64:	0027d740 	call	27d74 <__sprint_r.part.0>
   28e68:	103f5b1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   28e6c:	d9001b17 	ldw	r4,108(sp)
   28e70:	d8801c17 	ldw	r2,112(sp)
   28e74:	d811883a 	mov	r8,sp
   28e78:	21000044 	addi	r4,r4,1
   28e7c:	003d8006 	br	28480 <__alt_data_end+0xfffe8480>
   28e80:	010000f4 	movhi	r4,3
   28e84:	213d2604 	addi	r4,r4,-2920
   28e88:	d9002615 	stw	r4,152(sp)
   28e8c:	d8c02215 	stw	r3,136(sp)
   28e90:	1029883a 	mov	r20,r2
   28e94:	94c4b03a 	or	r2,r18,r19
   28e98:	103fb21e 	bne	r2,zero,28d64 <__alt_data_end+0xfffe8d64>
   28e9c:	0039883a 	mov	fp,zero
   28ea0:	00800084 	movi	r2,2
   28ea4:	003e6b06 	br	28854 <__alt_data_end+0xfffe8854>
   28ea8:	da802217 	ldw	r10,136(sp)
   28eac:	d8001d85 	stb	zero,118(sp)
   28eb0:	0027883a 	mov	r19,zero
   28eb4:	50800104 	addi	r2,r10,4
   28eb8:	54800017 	ldw	r18,0(r10)
   28ebc:	483e6016 	blt	r9,zero,28840 <__alt_data_end+0xfffe8840>
   28ec0:	00ffdfc4 	movi	r3,-129
   28ec4:	d8802215 	stw	r2,136(sp)
   28ec8:	a0e8703a 	and	r20,r20,r3
   28ecc:	0039883a 	mov	fp,zero
   28ed0:	903ebb26 	beq	r18,zero,289c0 <__alt_data_end+0xfffe89c0>
   28ed4:	00800244 	movi	r2,9
   28ed8:	14bdee36 	bltu	r2,r18,28694 <__alt_data_end+0xfffe8694>
   28edc:	003eba06 	br	289c8 <__alt_data_end+0xfffe89c8>
   28ee0:	00800c04 	movi	r2,48
   28ee4:	d8c01d45 	stb	r3,117(sp)
   28ee8:	d8801d05 	stb	r2,116(sp)
   28eec:	d8001d85 	stb	zero,118(sp)
   28ef0:	a0c00094 	ori	r3,r20,2
   28ef4:	4800a916 	blt	r9,zero,2919c <___vfiprintf_internal_r+0x1314>
   28ef8:	00bfdfc4 	movi	r2,-129
   28efc:	a096703a 	and	r11,r20,r2
   28f00:	5d000094 	ori	r20,r11,2
   28f04:	0039883a 	mov	fp,zero
   28f08:	003f9706 	br	28d68 <__alt_data_end+0xfffe8d68>
   28f0c:	8025883a 	mov	r18,r16
   28f10:	003c2e06 	br	27fcc <__alt_data_end+0xfffe7fcc>
   28f14:	008000f4 	movhi	r2,3
   28f18:	10bd2604 	addi	r2,r2,-2920
   28f1c:	0039883a 	mov	fp,zero
   28f20:	d8802615 	stw	r2,152(sp)
   28f24:	003f9006 	br	28d68 <__alt_data_end+0xfffe8d68>
   28f28:	04a5c83a 	sub	r18,zero,r18
   28f2c:	07000b44 	movi	fp,45
   28f30:	9004c03a 	cmpne	r2,r18,zero
   28f34:	04e7c83a 	sub	r19,zero,r19
   28f38:	df001d85 	stb	fp,118(sp)
   28f3c:	98a7c83a 	sub	r19,r19,r2
   28f40:	48009f16 	blt	r9,zero,291c0 <___vfiprintf_internal_r+0x1338>
   28f44:	00bfdfc4 	movi	r2,-129
   28f48:	a0a8703a 	and	r20,r20,r2
   28f4c:	003dd006 	br	28690 <__alt_data_end+0xfffe8690>
   28f50:	70004c26 	beq	r14,zero,29084 <___vfiprintf_internal_r+0x11fc>
   28f54:	00800084 	movi	r2,2
   28f58:	d8c01d04 	addi	r3,sp,116
   28f5c:	d8c00015 	stw	r3,0(sp)
   28f60:	d8800115 	stw	r2,4(sp)
   28f64:	01000044 	movi	r4,1
   28f68:	d811883a 	mov	r8,sp
   28f6c:	003f7306 	br	28d3c <__alt_data_end+0xfffe8d3c>
   28f70:	a080100c 	andi	r2,r20,64
   28f74:	da802217 	ldw	r10,136(sp)
   28f78:	103e0626 	beq	r2,zero,28794 <__alt_data_end+0xfffe8794>
   28f7c:	5480000f 	ldh	r18,0(r10)
   28f80:	52800104 	addi	r10,r10,4
   28f84:	da802215 	stw	r10,136(sp)
   28f88:	9027d7fa 	srai	r19,r18,31
   28f8c:	9805883a 	mov	r2,r19
   28f90:	003db806 	br	28674 <__alt_data_end+0xfffe8674>
   28f94:	a080040c 	andi	r2,r20,16
   28f98:	1000091e 	bne	r2,zero,28fc0 <___vfiprintf_internal_r+0x1138>
   28f9c:	a2c0100c 	andi	r11,r20,64
   28fa0:	58000726 	beq	r11,zero,28fc0 <___vfiprintf_internal_r+0x1138>
   28fa4:	da802217 	ldw	r10,136(sp)
   28fa8:	50800017 	ldw	r2,0(r10)
   28fac:	52800104 	addi	r10,r10,4
   28fb0:	da802215 	stw	r10,136(sp)
   28fb4:	da802317 	ldw	r10,140(sp)
   28fb8:	1280000d 	sth	r10,0(r2)
   28fbc:	003be706 	br	27f5c <__alt_data_end+0xfffe7f5c>
   28fc0:	da802217 	ldw	r10,136(sp)
   28fc4:	50800017 	ldw	r2,0(r10)
   28fc8:	52800104 	addi	r10,r10,4
   28fcc:	da802215 	stw	r10,136(sp)
   28fd0:	da802317 	ldw	r10,140(sp)
   28fd4:	12800015 	stw	r10,0(r2)
   28fd8:	003be006 	br	27f5c <__alt_data_end+0xfffe7f5c>
   28fdc:	a080100c 	andi	r2,r20,64
   28fe0:	da802217 	ldw	r10,136(sp)
   28fe4:	10003026 	beq	r2,zero,290a8 <___vfiprintf_internal_r+0x1220>
   28fe8:	5480000b 	ldhu	r18,0(r10)
   28fec:	52800104 	addi	r10,r10,4
   28ff0:	0027883a 	mov	r19,zero
   28ff4:	da802215 	stw	r10,136(sp)
   28ff8:	003d8006 	br	285fc <__alt_data_end+0xfffe85fc>
   28ffc:	80c00007 	ldb	r3,0(r16)
   29000:	003c0006 	br	28004 <__alt_data_end+0xfffe8004>
   29004:	a080100c 	andi	r2,r20,64
   29008:	d8001d85 	stb	zero,118(sp)
   2900c:	da802217 	ldw	r10,136(sp)
   29010:	1000201e 	bne	r2,zero,29094 <___vfiprintf_internal_r+0x120c>
   29014:	50800104 	addi	r2,r10,4
   29018:	54800017 	ldw	r18,0(r10)
   2901c:	0027883a 	mov	r19,zero
   29020:	483def0e 	bge	r9,zero,287e0 <__alt_data_end+0xfffe87e0>
   29024:	94c6b03a 	or	r3,r18,r19
   29028:	d8802215 	stw	r2,136(sp)
   2902c:	183d4e1e 	bne	r3,zero,28568 <__alt_data_end+0xfffe8568>
   29030:	0039883a 	mov	fp,zero
   29034:	0005883a 	mov	r2,zero
   29038:	003e0606 	br	28854 <__alt_data_end+0xfffe8854>
   2903c:	d9402117 	ldw	r5,132(sp)
   29040:	d9002017 	ldw	r4,128(sp)
   29044:	d9801a04 	addi	r6,sp,104
   29048:	da402c15 	stw	r9,176(sp)
   2904c:	db802a15 	stw	r14,168(sp)
   29050:	0027d740 	call	27d74 <__sprint_r.part.0>
   29054:	da402c17 	ldw	r9,176(sp)
   29058:	db802a17 	ldw	r14,168(sp)
   2905c:	103ede1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   29060:	d9401b17 	ldw	r5,108(sp)
   29064:	d8801c17 	ldw	r2,112(sp)
   29068:	d811883a 	mov	r8,sp
   2906c:	29000044 	addi	r4,r5,1
   29070:	003e7406 	br	28a44 <__alt_data_end+0xfffe8a44>
   29074:	00bfffc4 	movi	r2,-1
   29078:	003c5806 	br	281dc <__alt_data_end+0xfffe81dc>
   2907c:	d811883a 	mov	r8,sp
   29080:	003ee806 	br	28c24 <__alt_data_end+0xfffe8c24>
   29084:	000b883a 	mov	r5,zero
   29088:	01000044 	movi	r4,1
   2908c:	d811883a 	mov	r8,sp
   29090:	003e7c06 	br	28a84 <__alt_data_end+0xfffe8a84>
   29094:	50800104 	addi	r2,r10,4
   29098:	5480000b 	ldhu	r18,0(r10)
   2909c:	0027883a 	mov	r19,zero
   290a0:	483dcf0e 	bge	r9,zero,287e0 <__alt_data_end+0xfffe87e0>
   290a4:	003fdf06 	br	29024 <__alt_data_end+0xfffe9024>
   290a8:	54800017 	ldw	r18,0(r10)
   290ac:	52800104 	addi	r10,r10,4
   290b0:	0027883a 	mov	r19,zero
   290b4:	da802215 	stw	r10,136(sp)
   290b8:	003d5006 	br	285fc <__alt_data_end+0xfffe85fc>
   290bc:	50800104 	addi	r2,r10,4
   290c0:	5480000b 	ldhu	r18,0(r10)
   290c4:	0027883a 	mov	r19,zero
   290c8:	483f7d0e 	bge	r9,zero,28ec0 <__alt_data_end+0xfffe8ec0>
   290cc:	003ddc06 	br	28840 <__alt_data_end+0xfffe8840>
   290d0:	d8c02215 	stw	r3,136(sp)
   290d4:	0039883a 	mov	fp,zero
   290d8:	003ddb06 	br	28848 <__alt_data_end+0xfffe8848>
   290dc:	028000f4 	movhi	r10,3
   290e0:	52bd8704 	addi	r10,r10,-2532
   290e4:	da802415 	stw	r10,144(sp)
   290e8:	003e8306 	br	28af8 <__alt_data_end+0xfffe8af8>
   290ec:	d8801c17 	ldw	r2,112(sp)
   290f0:	dd002117 	ldw	r20,132(sp)
   290f4:	103eb926 	beq	r2,zero,28bdc <__alt_data_end+0xfffe8bdc>
   290f8:	d9002017 	ldw	r4,128(sp)
   290fc:	d9801a04 	addi	r6,sp,104
   29100:	a00b883a 	mov	r5,r20
   29104:	0027d740 	call	27d74 <__sprint_r.part.0>
   29108:	003eb406 	br	28bdc <__alt_data_end+0xfffe8bdc>
   2910c:	80c00043 	ldbu	r3,1(r16)
   29110:	a5000814 	ori	r20,r20,32
   29114:	84000044 	addi	r16,r16,1
   29118:	18c03fcc 	andi	r3,r3,255
   2911c:	18c0201c 	xori	r3,r3,128
   29120:	18ffe004 	addi	r3,r3,-128
   29124:	003bb706 	br	28004 <__alt_data_end+0xfffe8004>
   29128:	a809883a 	mov	r4,r21
   2912c:	d8c02a15 	stw	r3,168(sp)
   29130:	da002b15 	stw	r8,172(sp)
   29134:	00207dc0 	call	207dc <strlen>
   29138:	d8c02a17 	ldw	r3,168(sp)
   2913c:	1027883a 	mov	r19,r2
   29140:	df001d83 	ldbu	fp,118(sp)
   29144:	d8c02215 	stw	r3,136(sp)
   29148:	0013883a 	mov	r9,zero
   2914c:	da002b17 	ldw	r8,172(sp)
   29150:	003c4d06 	br	28288 <__alt_data_end+0xfffe8288>
   29154:	d9402117 	ldw	r5,132(sp)
   29158:	d9002017 	ldw	r4,128(sp)
   2915c:	d9801a04 	addi	r6,sp,104
   29160:	da402c15 	stw	r9,176(sp)
   29164:	0027d740 	call	27d74 <__sprint_r.part.0>
   29168:	da402c17 	ldw	r9,176(sp)
   2916c:	103e9a1e 	bne	r2,zero,28bd8 <__alt_data_end+0xfffe8bd8>
   29170:	d9401b17 	ldw	r5,108(sp)
   29174:	d8801c17 	ldw	r2,112(sp)
   29178:	d811883a 	mov	r8,sp
   2917c:	29000044 	addi	r4,r5,1
   29180:	003e4206 	br	28a8c <__alt_data_end+0xfffe8a8c>
   29184:	d9401b17 	ldw	r5,108(sp)
   29188:	010000f4 	movhi	r4,3
   2918c:	213d8b04 	addi	r4,r4,-2516
   29190:	d9002415 	stw	r4,144(sp)
   29194:	29400044 	addi	r5,r5,1
   29198:	003c6d06 	br	28350 <__alt_data_end+0xfffe8350>
   2919c:	0039883a 	mov	fp,zero
   291a0:	00800084 	movi	r2,2
   291a4:	10803fcc 	andi	r2,r2,255
   291a8:	01000044 	movi	r4,1
   291ac:	11001e26 	beq	r2,r4,29228 <___vfiprintf_internal_r+0x13a0>
   291b0:	01000084 	movi	r4,2
   291b4:	11001e1e 	bne	r2,r4,29230 <___vfiprintf_internal_r+0x13a8>
   291b8:	1829883a 	mov	r20,r3
   291bc:	003eea06 	br	28d68 <__alt_data_end+0xfffe8d68>
   291c0:	a007883a 	mov	r3,r20
   291c4:	00800044 	movi	r2,1
   291c8:	003ff606 	br	291a4 <__alt_data_end+0xfffe91a4>
   291cc:	00800184 	movi	r2,6
   291d0:	1240012e 	bgeu	r2,r9,291d8 <___vfiprintf_internal_r+0x1350>
   291d4:	1013883a 	mov	r9,r2
   291d8:	4827883a 	mov	r19,r9
   291dc:	4825883a 	mov	r18,r9
   291e0:	48001516 	blt	r9,zero,29238 <___vfiprintf_internal_r+0x13b0>
   291e4:	054000f4 	movhi	r21,3
   291e8:	d8c02215 	stw	r3,136(sp)
   291ec:	ad7d2b04 	addi	r21,r21,-2900
   291f0:	003d1406 	br	28644 <__alt_data_end+0xfffe8644>
   291f4:	028000f4 	movhi	r10,3
   291f8:	52bd8704 	addi	r10,r10,-2532
   291fc:	da802415 	stw	r10,144(sp)
   29200:	200d883a 	mov	r6,r4
   29204:	003c9106 	br	2844c <__alt_data_end+0xfffe844c>
   29208:	5021883a 	mov	r16,r10
   2920c:	0013883a 	mov	r9,zero
   29210:	003b7d06 	br	28008 <__alt_data_end+0xfffe8008>
   29214:	4827883a 	mov	r19,r9
   29218:	df001d83 	ldbu	fp,118(sp)
   2921c:	d8c02215 	stw	r3,136(sp)
   29220:	0013883a 	mov	r9,zero
   29224:	003c1806 	br	28288 <__alt_data_end+0xfffe8288>
   29228:	1829883a 	mov	r20,r3
   2922c:	003d1806 	br	28690 <__alt_data_end+0xfffe8690>
   29230:	1829883a 	mov	r20,r3
   29234:	003ccd06 	br	2856c <__alt_data_end+0xfffe856c>
   29238:	0025883a 	mov	r18,zero
   2923c:	003fe906 	br	291e4 <__alt_data_end+0xfffe91e4>
   29240:	d8802217 	ldw	r2,136(sp)
   29244:	80c00043 	ldbu	r3,1(r16)
   29248:	5021883a 	mov	r16,r10
   2924c:	12400017 	ldw	r9,0(r2)
   29250:	10800104 	addi	r2,r2,4
   29254:	d8802215 	stw	r2,136(sp)
   29258:	483faf0e 	bge	r9,zero,29118 <__alt_data_end+0xfffe9118>
   2925c:	18c03fcc 	andi	r3,r3,255
   29260:	18c0201c 	xori	r3,r3,128
   29264:	027fffc4 	movi	r9,-1
   29268:	18ffe004 	addi	r3,r3,-128
   2926c:	003b6506 	br	28004 <__alt_data_end+0xfffe8004>
   29270:	d9c01d85 	stb	r7,118(sp)
   29274:	003ca006 	br	284f8 <__alt_data_end+0xfffe84f8>
   29278:	d9c01d85 	stb	r7,118(sp)
   2927c:	003cad06 	br	28534 <__alt_data_end+0xfffe8534>
   29280:	d9c01d85 	stb	r7,118(sp)
   29284:	003d7d06 	br	2887c <__alt_data_end+0xfffe887c>
   29288:	d9c01d85 	stb	r7,118(sp)
   2928c:	003d5f06 	br	2880c <__alt_data_end+0xfffe880c>
   29290:	a080004c 	andi	r2,r20,1
   29294:	0039883a 	mov	fp,zero
   29298:	10000526 	beq	r2,zero,292b0 <___vfiprintf_internal_r+0x1428>
   2929c:	00800c04 	movi	r2,48
   292a0:	d88019c5 	stb	r2,103(sp)
   292a4:	dcc02717 	ldw	r19,156(sp)
   292a8:	dd4019c4 	addi	r21,sp,103
   292ac:	003bf606 	br	28288 <__alt_data_end+0xfffe8288>
   292b0:	0027883a 	mov	r19,zero
   292b4:	dd401a04 	addi	r21,sp,104
   292b8:	003bf306 	br	28288 <__alt_data_end+0xfffe8288>
   292bc:	d9c01d85 	stb	r7,118(sp)
   292c0:	003dc806 	br	289e4 <__alt_data_end+0xfffe89e4>
   292c4:	d9c01d85 	stb	r7,118(sp)
   292c8:	003d3a06 	br	287b4 <__alt_data_end+0xfffe87b4>
   292cc:	d9c01d85 	stb	r7,118(sp)
   292d0:	003d2a06 	br	2877c <__alt_data_end+0xfffe877c>
   292d4:	d9c01d85 	stb	r7,118(sp)
   292d8:	003cde06 	br	28654 <__alt_data_end+0xfffe8654>
   292dc:	d9c01d85 	stb	r7,118(sp)
   292e0:	003cbc06 	br	285d4 <__alt_data_end+0xfffe85d4>

000292e4 <__vfiprintf_internal>:
   292e4:	008000f4 	movhi	r2,3
   292e8:	10848804 	addi	r2,r2,4640
   292ec:	300f883a 	mov	r7,r6
   292f0:	280d883a 	mov	r6,r5
   292f4:	200b883a 	mov	r5,r4
   292f8:	11000017 	ldw	r4,0(r2)
   292fc:	0027e881 	jmpi	27e88 <___vfiprintf_internal_r>

00029300 <__sbprintf>:
   29300:	2880030b 	ldhu	r2,12(r5)
   29304:	2ac01917 	ldw	r11,100(r5)
   29308:	2a80038b 	ldhu	r10,14(r5)
   2930c:	2a400717 	ldw	r9,28(r5)
   29310:	2a000917 	ldw	r8,36(r5)
   29314:	defee204 	addi	sp,sp,-1144
   29318:	00c10004 	movi	r3,1024
   2931c:	dc011a15 	stw	r16,1128(sp)
   29320:	10bfff4c 	andi	r2,r2,65533
   29324:	2821883a 	mov	r16,r5
   29328:	d8cb883a 	add	r5,sp,r3
   2932c:	dc811c15 	stw	r18,1136(sp)
   29330:	dc411b15 	stw	r17,1132(sp)
   29334:	dfc11d15 	stw	ra,1140(sp)
   29338:	2025883a 	mov	r18,r4
   2933c:	d881030d 	sth	r2,1036(sp)
   29340:	dac11915 	stw	r11,1124(sp)
   29344:	da81038d 	sth	r10,1038(sp)
   29348:	da410715 	stw	r9,1052(sp)
   2934c:	da010915 	stw	r8,1060(sp)
   29350:	dec10015 	stw	sp,1024(sp)
   29354:	dec10415 	stw	sp,1040(sp)
   29358:	d8c10215 	stw	r3,1032(sp)
   2935c:	d8c10515 	stw	r3,1044(sp)
   29360:	d8010615 	stw	zero,1048(sp)
   29364:	0027e880 	call	27e88 <___vfiprintf_internal_r>
   29368:	1023883a 	mov	r17,r2
   2936c:	10000416 	blt	r2,zero,29380 <__sbprintf+0x80>
   29370:	d9410004 	addi	r5,sp,1024
   29374:	9009883a 	mov	r4,r18
   29378:	002473c0 	call	2473c <_fflush_r>
   2937c:	10000d1e 	bne	r2,zero,293b4 <__sbprintf+0xb4>
   29380:	d881030b 	ldhu	r2,1036(sp)
   29384:	1080100c 	andi	r2,r2,64
   29388:	10000326 	beq	r2,zero,29398 <__sbprintf+0x98>
   2938c:	8080030b 	ldhu	r2,12(r16)
   29390:	10801014 	ori	r2,r2,64
   29394:	8080030d 	sth	r2,12(r16)
   29398:	8805883a 	mov	r2,r17
   2939c:	dfc11d17 	ldw	ra,1140(sp)
   293a0:	dc811c17 	ldw	r18,1136(sp)
   293a4:	dc411b17 	ldw	r17,1132(sp)
   293a8:	dc011a17 	ldw	r16,1128(sp)
   293ac:	dec11e04 	addi	sp,sp,1144
   293b0:	f800283a 	ret
   293b4:	047fffc4 	movi	r17,-1
   293b8:	003ff106 	br	29380 <__alt_data_end+0xfffe9380>

000293bc <_write_r>:
   293bc:	defffd04 	addi	sp,sp,-12
   293c0:	2805883a 	mov	r2,r5
   293c4:	dc000015 	stw	r16,0(sp)
   293c8:	040000f4 	movhi	r16,3
   293cc:	dc400115 	stw	r17,4(sp)
   293d0:	300b883a 	mov	r5,r6
   293d4:	840b5804 	addi	r16,r16,11616
   293d8:	2023883a 	mov	r17,r4
   293dc:	380d883a 	mov	r6,r7
   293e0:	1009883a 	mov	r4,r2
   293e4:	dfc00215 	stw	ra,8(sp)
   293e8:	80000015 	stw	zero,0(r16)
   293ec:	00203a00 	call	203a0 <write>
   293f0:	00ffffc4 	movi	r3,-1
   293f4:	10c00526 	beq	r2,r3,2940c <_write_r+0x50>
   293f8:	dfc00217 	ldw	ra,8(sp)
   293fc:	dc400117 	ldw	r17,4(sp)
   29400:	dc000017 	ldw	r16,0(sp)
   29404:	dec00304 	addi	sp,sp,12
   29408:	f800283a 	ret
   2940c:	80c00017 	ldw	r3,0(r16)
   29410:	183ff926 	beq	r3,zero,293f8 <__alt_data_end+0xfffe93f8>
   29414:	88c00015 	stw	r3,0(r17)
   29418:	003ff706 	br	293f8 <__alt_data_end+0xfffe93f8>

0002941c <_close_r>:
   2941c:	defffd04 	addi	sp,sp,-12
   29420:	dc000015 	stw	r16,0(sp)
   29424:	040000f4 	movhi	r16,3
   29428:	dc400115 	stw	r17,4(sp)
   2942c:	840b5804 	addi	r16,r16,11616
   29430:	2023883a 	mov	r17,r4
   29434:	2809883a 	mov	r4,r5
   29438:	dfc00215 	stw	ra,8(sp)
   2943c:	80000015 	stw	zero,0(r16)
   29440:	002cff80 	call	2cff8 <close>
   29444:	00ffffc4 	movi	r3,-1
   29448:	10c00526 	beq	r2,r3,29460 <_close_r+0x44>
   2944c:	dfc00217 	ldw	ra,8(sp)
   29450:	dc400117 	ldw	r17,4(sp)
   29454:	dc000017 	ldw	r16,0(sp)
   29458:	dec00304 	addi	sp,sp,12
   2945c:	f800283a 	ret
   29460:	80c00017 	ldw	r3,0(r16)
   29464:	183ff926 	beq	r3,zero,2944c <__alt_data_end+0xfffe944c>
   29468:	88c00015 	stw	r3,0(r17)
   2946c:	003ff706 	br	2944c <__alt_data_end+0xfffe944c>

00029470 <_calloc_r>:
   29470:	298b383a 	mul	r5,r5,r6
   29474:	defffe04 	addi	sp,sp,-8
   29478:	dfc00115 	stw	ra,4(sp)
   2947c:	dc000015 	stw	r16,0(sp)
   29480:	00258780 	call	25878 <_malloc_r>
   29484:	10002926 	beq	r2,zero,2952c <_calloc_r+0xbc>
   29488:	11bfff17 	ldw	r6,-4(r2)
   2948c:	1021883a 	mov	r16,r2
   29490:	00bfff04 	movi	r2,-4
   29494:	308c703a 	and	r6,r6,r2
   29498:	00c00904 	movi	r3,36
   2949c:	308d883a 	add	r6,r6,r2
   294a0:	19801636 	bltu	r3,r6,294fc <_calloc_r+0x8c>
   294a4:	008004c4 	movi	r2,19
   294a8:	11800b2e 	bgeu	r2,r6,294d8 <_calloc_r+0x68>
   294ac:	80000015 	stw	zero,0(r16)
   294b0:	80000115 	stw	zero,4(r16)
   294b4:	008006c4 	movi	r2,27
   294b8:	11801a2e 	bgeu	r2,r6,29524 <_calloc_r+0xb4>
   294bc:	80000215 	stw	zero,8(r16)
   294c0:	80000315 	stw	zero,12(r16)
   294c4:	30c0151e 	bne	r6,r3,2951c <_calloc_r+0xac>
   294c8:	80000415 	stw	zero,16(r16)
   294cc:	80800604 	addi	r2,r16,24
   294d0:	80000515 	stw	zero,20(r16)
   294d4:	00000106 	br	294dc <_calloc_r+0x6c>
   294d8:	8005883a 	mov	r2,r16
   294dc:	10000015 	stw	zero,0(r2)
   294e0:	10000115 	stw	zero,4(r2)
   294e4:	10000215 	stw	zero,8(r2)
   294e8:	8005883a 	mov	r2,r16
   294ec:	dfc00117 	ldw	ra,4(sp)
   294f0:	dc000017 	ldw	r16,0(sp)
   294f4:	dec00204 	addi	sp,sp,8
   294f8:	f800283a 	ret
   294fc:	000b883a 	mov	r5,zero
   29500:	8009883a 	mov	r4,r16
   29504:	002640c0 	call	2640c <memset>
   29508:	8005883a 	mov	r2,r16
   2950c:	dfc00117 	ldw	ra,4(sp)
   29510:	dc000017 	ldw	r16,0(sp)
   29514:	dec00204 	addi	sp,sp,8
   29518:	f800283a 	ret
   2951c:	80800404 	addi	r2,r16,16
   29520:	003fee06 	br	294dc <__alt_data_end+0xfffe94dc>
   29524:	80800204 	addi	r2,r16,8
   29528:	003fec06 	br	294dc <__alt_data_end+0xfffe94dc>
   2952c:	0005883a 	mov	r2,zero
   29530:	003fee06 	br	294ec <__alt_data_end+0xfffe94ec>

00029534 <_fclose_r>:
   29534:	28003926 	beq	r5,zero,2961c <_fclose_r+0xe8>
   29538:	defffc04 	addi	sp,sp,-16
   2953c:	dc400115 	stw	r17,4(sp)
   29540:	dc000015 	stw	r16,0(sp)
   29544:	dfc00315 	stw	ra,12(sp)
   29548:	dc800215 	stw	r18,8(sp)
   2954c:	2023883a 	mov	r17,r4
   29550:	2821883a 	mov	r16,r5
   29554:	20000226 	beq	r4,zero,29560 <_fclose_r+0x2c>
   29558:	20800e17 	ldw	r2,56(r4)
   2955c:	10002726 	beq	r2,zero,295fc <_fclose_r+0xc8>
   29560:	8080030f 	ldh	r2,12(r16)
   29564:	1000071e 	bne	r2,zero,29584 <_fclose_r+0x50>
   29568:	0005883a 	mov	r2,zero
   2956c:	dfc00317 	ldw	ra,12(sp)
   29570:	dc800217 	ldw	r18,8(sp)
   29574:	dc400117 	ldw	r17,4(sp)
   29578:	dc000017 	ldw	r16,0(sp)
   2957c:	dec00404 	addi	sp,sp,16
   29580:	f800283a 	ret
   29584:	800b883a 	mov	r5,r16
   29588:	8809883a 	mov	r4,r17
   2958c:	00245200 	call	24520 <__sflush_r>
   29590:	1025883a 	mov	r18,r2
   29594:	80800b17 	ldw	r2,44(r16)
   29598:	10000426 	beq	r2,zero,295ac <_fclose_r+0x78>
   2959c:	81400717 	ldw	r5,28(r16)
   295a0:	8809883a 	mov	r4,r17
   295a4:	103ee83a 	callr	r2
   295a8:	10001616 	blt	r2,zero,29604 <_fclose_r+0xd0>
   295ac:	8080030b 	ldhu	r2,12(r16)
   295b0:	1080200c 	andi	r2,r2,128
   295b4:	1000151e 	bne	r2,zero,2960c <_fclose_r+0xd8>
   295b8:	81400c17 	ldw	r5,48(r16)
   295bc:	28000526 	beq	r5,zero,295d4 <_fclose_r+0xa0>
   295c0:	80801004 	addi	r2,r16,64
   295c4:	28800226 	beq	r5,r2,295d0 <_fclose_r+0x9c>
   295c8:	8809883a 	mov	r4,r17
   295cc:	0024c8c0 	call	24c8c <_free_r>
   295d0:	80000c15 	stw	zero,48(r16)
   295d4:	81401117 	ldw	r5,68(r16)
   295d8:	28000326 	beq	r5,zero,295e8 <_fclose_r+0xb4>
   295dc:	8809883a 	mov	r4,r17
   295e0:	0024c8c0 	call	24c8c <_free_r>
   295e4:	80001115 	stw	zero,68(r16)
   295e8:	0024b280 	call	24b28 <__sfp_lock_acquire>
   295ec:	8000030d 	sth	zero,12(r16)
   295f0:	0024b2c0 	call	24b2c <__sfp_lock_release>
   295f4:	9005883a 	mov	r2,r18
   295f8:	003fdc06 	br	2956c <__alt_data_end+0xfffe956c>
   295fc:	0024b180 	call	24b18 <__sinit>
   29600:	003fd706 	br	29560 <__alt_data_end+0xfffe9560>
   29604:	04bfffc4 	movi	r18,-1
   29608:	003fe806 	br	295ac <__alt_data_end+0xfffe95ac>
   2960c:	81400417 	ldw	r5,16(r16)
   29610:	8809883a 	mov	r4,r17
   29614:	0024c8c0 	call	24c8c <_free_r>
   29618:	003fe706 	br	295b8 <__alt_data_end+0xfffe95b8>
   2961c:	0005883a 	mov	r2,zero
   29620:	f800283a 	ret

00029624 <fclose>:
   29624:	008000f4 	movhi	r2,3
   29628:	10848804 	addi	r2,r2,4640
   2962c:	200b883a 	mov	r5,r4
   29630:	11000017 	ldw	r4,0(r2)
   29634:	00295341 	jmpi	29534 <_fclose_r>

00029638 <__fputwc>:
   29638:	defff804 	addi	sp,sp,-32
   2963c:	dcc00415 	stw	r19,16(sp)
   29640:	dc800315 	stw	r18,12(sp)
   29644:	dc000115 	stw	r16,4(sp)
   29648:	dfc00715 	stw	ra,28(sp)
   2964c:	dd400615 	stw	r21,24(sp)
   29650:	dd000515 	stw	r20,20(sp)
   29654:	dc400215 	stw	r17,8(sp)
   29658:	2027883a 	mov	r19,r4
   2965c:	2825883a 	mov	r18,r5
   29660:	3021883a 	mov	r16,r6
   29664:	00256680 	call	25668 <__locale_mb_cur_max>
   29668:	00c00044 	movi	r3,1
   2966c:	10c03e26 	beq	r2,r3,29768 <__fputwc+0x130>
   29670:	81c01704 	addi	r7,r16,92
   29674:	900d883a 	mov	r6,r18
   29678:	d80b883a 	mov	r5,sp
   2967c:	9809883a 	mov	r4,r19
   29680:	0029b080 	call	29b08 <_wcrtomb_r>
   29684:	1029883a 	mov	r20,r2
   29688:	00bfffc4 	movi	r2,-1
   2968c:	a0802026 	beq	r20,r2,29710 <__fputwc+0xd8>
   29690:	d9400003 	ldbu	r5,0(sp)
   29694:	a0001c26 	beq	r20,zero,29708 <__fputwc+0xd0>
   29698:	0023883a 	mov	r17,zero
   2969c:	05400284 	movi	r21,10
   296a0:	00000906 	br	296c8 <__fputwc+0x90>
   296a4:	80800017 	ldw	r2,0(r16)
   296a8:	11400005 	stb	r5,0(r2)
   296ac:	80c00017 	ldw	r3,0(r16)
   296b0:	18c00044 	addi	r3,r3,1
   296b4:	80c00015 	stw	r3,0(r16)
   296b8:	8c400044 	addi	r17,r17,1
   296bc:	dc45883a 	add	r2,sp,r17
   296c0:	8d00112e 	bgeu	r17,r20,29708 <__fputwc+0xd0>
   296c4:	11400003 	ldbu	r5,0(r2)
   296c8:	80c00217 	ldw	r3,8(r16)
   296cc:	18ffffc4 	addi	r3,r3,-1
   296d0:	80c00215 	stw	r3,8(r16)
   296d4:	183ff30e 	bge	r3,zero,296a4 <__alt_data_end+0xfffe96a4>
   296d8:	80800617 	ldw	r2,24(r16)
   296dc:	18801916 	blt	r3,r2,29744 <__fputwc+0x10c>
   296e0:	80800017 	ldw	r2,0(r16)
   296e4:	11400005 	stb	r5,0(r2)
   296e8:	80800017 	ldw	r2,0(r16)
   296ec:	10c00003 	ldbu	r3,0(r2)
   296f0:	10800044 	addi	r2,r2,1
   296f4:	1d402326 	beq	r3,r21,29784 <__fputwc+0x14c>
   296f8:	80800015 	stw	r2,0(r16)
   296fc:	8c400044 	addi	r17,r17,1
   29700:	dc45883a 	add	r2,sp,r17
   29704:	8d3fef36 	bltu	r17,r20,296c4 <__alt_data_end+0xfffe96c4>
   29708:	9005883a 	mov	r2,r18
   2970c:	00000406 	br	29720 <__fputwc+0xe8>
   29710:	80c0030b 	ldhu	r3,12(r16)
   29714:	a005883a 	mov	r2,r20
   29718:	18c01014 	ori	r3,r3,64
   2971c:	80c0030d 	sth	r3,12(r16)
   29720:	dfc00717 	ldw	ra,28(sp)
   29724:	dd400617 	ldw	r21,24(sp)
   29728:	dd000517 	ldw	r20,20(sp)
   2972c:	dcc00417 	ldw	r19,16(sp)
   29730:	dc800317 	ldw	r18,12(sp)
   29734:	dc400217 	ldw	r17,8(sp)
   29738:	dc000117 	ldw	r16,4(sp)
   2973c:	dec00804 	addi	sp,sp,32
   29740:	f800283a 	ret
   29744:	800d883a 	mov	r6,r16
   29748:	29403fcc 	andi	r5,r5,255
   2974c:	9809883a 	mov	r4,r19
   29750:	00299b00 	call	299b0 <__swbuf_r>
   29754:	10bfffe0 	cmpeqi	r2,r2,-1
   29758:	10803fcc 	andi	r2,r2,255
   2975c:	103fd626 	beq	r2,zero,296b8 <__alt_data_end+0xfffe96b8>
   29760:	00bfffc4 	movi	r2,-1
   29764:	003fee06 	br	29720 <__alt_data_end+0xfffe9720>
   29768:	90ffffc4 	addi	r3,r18,-1
   2976c:	01003f84 	movi	r4,254
   29770:	20ffbf36 	bltu	r4,r3,29670 <__alt_data_end+0xfffe9670>
   29774:	900b883a 	mov	r5,r18
   29778:	dc800005 	stb	r18,0(sp)
   2977c:	1029883a 	mov	r20,r2
   29780:	003fc506 	br	29698 <__alt_data_end+0xfffe9698>
   29784:	800d883a 	mov	r6,r16
   29788:	a80b883a 	mov	r5,r21
   2978c:	9809883a 	mov	r4,r19
   29790:	00299b00 	call	299b0 <__swbuf_r>
   29794:	10bfffe0 	cmpeqi	r2,r2,-1
   29798:	003fef06 	br	29758 <__alt_data_end+0xfffe9758>

0002979c <_fputwc_r>:
   2979c:	3080030b 	ldhu	r2,12(r6)
   297a0:	10c8000c 	andi	r3,r2,8192
   297a4:	1800051e 	bne	r3,zero,297bc <_fputwc_r+0x20>
   297a8:	30c01917 	ldw	r3,100(r6)
   297ac:	10880014 	ori	r2,r2,8192
   297b0:	3080030d 	sth	r2,12(r6)
   297b4:	18880014 	ori	r2,r3,8192
   297b8:	30801915 	stw	r2,100(r6)
   297bc:	00296381 	jmpi	29638 <__fputwc>

000297c0 <fputwc>:
   297c0:	008000f4 	movhi	r2,3
   297c4:	defffc04 	addi	sp,sp,-16
   297c8:	10848804 	addi	r2,r2,4640
   297cc:	dc000115 	stw	r16,4(sp)
   297d0:	14000017 	ldw	r16,0(r2)
   297d4:	dc400215 	stw	r17,8(sp)
   297d8:	dfc00315 	stw	ra,12(sp)
   297dc:	2023883a 	mov	r17,r4
   297e0:	80000226 	beq	r16,zero,297ec <fputwc+0x2c>
   297e4:	80800e17 	ldw	r2,56(r16)
   297e8:	10001026 	beq	r2,zero,2982c <fputwc+0x6c>
   297ec:	2880030b 	ldhu	r2,12(r5)
   297f0:	10c8000c 	andi	r3,r2,8192
   297f4:	1800051e 	bne	r3,zero,2980c <fputwc+0x4c>
   297f8:	28c01917 	ldw	r3,100(r5)
   297fc:	10880014 	ori	r2,r2,8192
   29800:	2880030d 	sth	r2,12(r5)
   29804:	18880014 	ori	r2,r3,8192
   29808:	28801915 	stw	r2,100(r5)
   2980c:	280d883a 	mov	r6,r5
   29810:	8009883a 	mov	r4,r16
   29814:	880b883a 	mov	r5,r17
   29818:	dfc00317 	ldw	ra,12(sp)
   2981c:	dc400217 	ldw	r17,8(sp)
   29820:	dc000117 	ldw	r16,4(sp)
   29824:	dec00404 	addi	sp,sp,16
   29828:	00296381 	jmpi	29638 <__fputwc>
   2982c:	8009883a 	mov	r4,r16
   29830:	d9400015 	stw	r5,0(sp)
   29834:	0024b180 	call	24b18 <__sinit>
   29838:	d9400017 	ldw	r5,0(sp)
   2983c:	003feb06 	br	297ec <__alt_data_end+0xfffe97ec>

00029840 <_fstat_r>:
   29840:	defffd04 	addi	sp,sp,-12
   29844:	2805883a 	mov	r2,r5
   29848:	dc000015 	stw	r16,0(sp)
   2984c:	040000f4 	movhi	r16,3
   29850:	dc400115 	stw	r17,4(sp)
   29854:	840b5804 	addi	r16,r16,11616
   29858:	2023883a 	mov	r17,r4
   2985c:	300b883a 	mov	r5,r6
   29860:	1009883a 	mov	r4,r2
   29864:	dfc00215 	stw	ra,8(sp)
   29868:	80000015 	stw	zero,0(r16)
   2986c:	002d1300 	call	2d130 <fstat>
   29870:	00ffffc4 	movi	r3,-1
   29874:	10c00526 	beq	r2,r3,2988c <_fstat_r+0x4c>
   29878:	dfc00217 	ldw	ra,8(sp)
   2987c:	dc400117 	ldw	r17,4(sp)
   29880:	dc000017 	ldw	r16,0(sp)
   29884:	dec00304 	addi	sp,sp,12
   29888:	f800283a 	ret
   2988c:	80c00017 	ldw	r3,0(r16)
   29890:	183ff926 	beq	r3,zero,29878 <__alt_data_end+0xfffe9878>
   29894:	88c00015 	stw	r3,0(r17)
   29898:	003ff706 	br	29878 <__alt_data_end+0xfffe9878>

0002989c <_isatty_r>:
   2989c:	defffd04 	addi	sp,sp,-12
   298a0:	dc000015 	stw	r16,0(sp)
   298a4:	040000f4 	movhi	r16,3
   298a8:	dc400115 	stw	r17,4(sp)
   298ac:	840b5804 	addi	r16,r16,11616
   298b0:	2023883a 	mov	r17,r4
   298b4:	2809883a 	mov	r4,r5
   298b8:	dfc00215 	stw	ra,8(sp)
   298bc:	80000015 	stw	zero,0(r16)
   298c0:	002d21c0 	call	2d21c <isatty>
   298c4:	00ffffc4 	movi	r3,-1
   298c8:	10c00526 	beq	r2,r3,298e0 <_isatty_r+0x44>
   298cc:	dfc00217 	ldw	ra,8(sp)
   298d0:	dc400117 	ldw	r17,4(sp)
   298d4:	dc000017 	ldw	r16,0(sp)
   298d8:	dec00304 	addi	sp,sp,12
   298dc:	f800283a 	ret
   298e0:	80c00017 	ldw	r3,0(r16)
   298e4:	183ff926 	beq	r3,zero,298cc <__alt_data_end+0xfffe98cc>
   298e8:	88c00015 	stw	r3,0(r17)
   298ec:	003ff706 	br	298cc <__alt_data_end+0xfffe98cc>

000298f0 <_lseek_r>:
   298f0:	defffd04 	addi	sp,sp,-12
   298f4:	2805883a 	mov	r2,r5
   298f8:	dc000015 	stw	r16,0(sp)
   298fc:	040000f4 	movhi	r16,3
   29900:	dc400115 	stw	r17,4(sp)
   29904:	300b883a 	mov	r5,r6
   29908:	840b5804 	addi	r16,r16,11616
   2990c:	2023883a 	mov	r17,r4
   29910:	380d883a 	mov	r6,r7
   29914:	1009883a 	mov	r4,r2
   29918:	dfc00215 	stw	ra,8(sp)
   2991c:	80000015 	stw	zero,0(r16)
   29920:	002d3e80 	call	2d3e8 <lseek>
   29924:	00ffffc4 	movi	r3,-1
   29928:	10c00526 	beq	r2,r3,29940 <_lseek_r+0x50>
   2992c:	dfc00217 	ldw	ra,8(sp)
   29930:	dc400117 	ldw	r17,4(sp)
   29934:	dc000017 	ldw	r16,0(sp)
   29938:	dec00304 	addi	sp,sp,12
   2993c:	f800283a 	ret
   29940:	80c00017 	ldw	r3,0(r16)
   29944:	183ff926 	beq	r3,zero,2992c <__alt_data_end+0xfffe992c>
   29948:	88c00015 	stw	r3,0(r17)
   2994c:	003ff706 	br	2992c <__alt_data_end+0xfffe992c>

00029950 <_read_r>:
   29950:	defffd04 	addi	sp,sp,-12
   29954:	2805883a 	mov	r2,r5
   29958:	dc000015 	stw	r16,0(sp)
   2995c:	040000f4 	movhi	r16,3
   29960:	dc400115 	stw	r17,4(sp)
   29964:	300b883a 	mov	r5,r6
   29968:	840b5804 	addi	r16,r16,11616
   2996c:	2023883a 	mov	r17,r4
   29970:	380d883a 	mov	r6,r7
   29974:	1009883a 	mov	r4,r2
   29978:	dfc00215 	stw	ra,8(sp)
   2997c:	80000015 	stw	zero,0(r16)
   29980:	00202d80 	call	202d8 <read>
   29984:	00ffffc4 	movi	r3,-1
   29988:	10c00526 	beq	r2,r3,299a0 <_read_r+0x50>
   2998c:	dfc00217 	ldw	ra,8(sp)
   29990:	dc400117 	ldw	r17,4(sp)
   29994:	dc000017 	ldw	r16,0(sp)
   29998:	dec00304 	addi	sp,sp,12
   2999c:	f800283a 	ret
   299a0:	80c00017 	ldw	r3,0(r16)
   299a4:	183ff926 	beq	r3,zero,2998c <__alt_data_end+0xfffe998c>
   299a8:	88c00015 	stw	r3,0(r17)
   299ac:	003ff706 	br	2998c <__alt_data_end+0xfffe998c>

000299b0 <__swbuf_r>:
   299b0:	defffb04 	addi	sp,sp,-20
   299b4:	dcc00315 	stw	r19,12(sp)
   299b8:	dc800215 	stw	r18,8(sp)
   299bc:	dc000015 	stw	r16,0(sp)
   299c0:	dfc00415 	stw	ra,16(sp)
   299c4:	dc400115 	stw	r17,4(sp)
   299c8:	2025883a 	mov	r18,r4
   299cc:	2827883a 	mov	r19,r5
   299d0:	3021883a 	mov	r16,r6
   299d4:	20000226 	beq	r4,zero,299e0 <__swbuf_r+0x30>
   299d8:	20800e17 	ldw	r2,56(r4)
   299dc:	10004226 	beq	r2,zero,29ae8 <__swbuf_r+0x138>
   299e0:	80800617 	ldw	r2,24(r16)
   299e4:	8100030b 	ldhu	r4,12(r16)
   299e8:	80800215 	stw	r2,8(r16)
   299ec:	2080020c 	andi	r2,r4,8
   299f0:	10003626 	beq	r2,zero,29acc <__swbuf_r+0x11c>
   299f4:	80c00417 	ldw	r3,16(r16)
   299f8:	18003426 	beq	r3,zero,29acc <__swbuf_r+0x11c>
   299fc:	2088000c 	andi	r2,r4,8192
   29a00:	9c403fcc 	andi	r17,r19,255
   29a04:	10001a26 	beq	r2,zero,29a70 <__swbuf_r+0xc0>
   29a08:	80800017 	ldw	r2,0(r16)
   29a0c:	81000517 	ldw	r4,20(r16)
   29a10:	10c7c83a 	sub	r3,r2,r3
   29a14:	1900200e 	bge	r3,r4,29a98 <__swbuf_r+0xe8>
   29a18:	18c00044 	addi	r3,r3,1
   29a1c:	81000217 	ldw	r4,8(r16)
   29a20:	11400044 	addi	r5,r2,1
   29a24:	81400015 	stw	r5,0(r16)
   29a28:	213fffc4 	addi	r4,r4,-1
   29a2c:	81000215 	stw	r4,8(r16)
   29a30:	14c00005 	stb	r19,0(r2)
   29a34:	80800517 	ldw	r2,20(r16)
   29a38:	10c01e26 	beq	r2,r3,29ab4 <__swbuf_r+0x104>
   29a3c:	8080030b 	ldhu	r2,12(r16)
   29a40:	1080004c 	andi	r2,r2,1
   29a44:	10000226 	beq	r2,zero,29a50 <__swbuf_r+0xa0>
   29a48:	00800284 	movi	r2,10
   29a4c:	88801926 	beq	r17,r2,29ab4 <__swbuf_r+0x104>
   29a50:	8805883a 	mov	r2,r17
   29a54:	dfc00417 	ldw	ra,16(sp)
   29a58:	dcc00317 	ldw	r19,12(sp)
   29a5c:	dc800217 	ldw	r18,8(sp)
   29a60:	dc400117 	ldw	r17,4(sp)
   29a64:	dc000017 	ldw	r16,0(sp)
   29a68:	dec00504 	addi	sp,sp,20
   29a6c:	f800283a 	ret
   29a70:	81401917 	ldw	r5,100(r16)
   29a74:	00b7ffc4 	movi	r2,-8193
   29a78:	21080014 	ori	r4,r4,8192
   29a7c:	2884703a 	and	r2,r5,r2
   29a80:	80801915 	stw	r2,100(r16)
   29a84:	80800017 	ldw	r2,0(r16)
   29a88:	8100030d 	sth	r4,12(r16)
   29a8c:	81000517 	ldw	r4,20(r16)
   29a90:	10c7c83a 	sub	r3,r2,r3
   29a94:	193fe016 	blt	r3,r4,29a18 <__alt_data_end+0xfffe9a18>
   29a98:	800b883a 	mov	r5,r16
   29a9c:	9009883a 	mov	r4,r18
   29aa0:	002473c0 	call	2473c <_fflush_r>
   29aa4:	1000071e 	bne	r2,zero,29ac4 <__swbuf_r+0x114>
   29aa8:	80800017 	ldw	r2,0(r16)
   29aac:	00c00044 	movi	r3,1
   29ab0:	003fda06 	br	29a1c <__alt_data_end+0xfffe9a1c>
   29ab4:	800b883a 	mov	r5,r16
   29ab8:	9009883a 	mov	r4,r18
   29abc:	002473c0 	call	2473c <_fflush_r>
   29ac0:	103fe326 	beq	r2,zero,29a50 <__alt_data_end+0xfffe9a50>
   29ac4:	00bfffc4 	movi	r2,-1
   29ac8:	003fe206 	br	29a54 <__alt_data_end+0xfffe9a54>
   29acc:	800b883a 	mov	r5,r16
   29ad0:	9009883a 	mov	r4,r18
   29ad4:	0022b440 	call	22b44 <__swsetup_r>
   29ad8:	103ffa1e 	bne	r2,zero,29ac4 <__alt_data_end+0xfffe9ac4>
   29adc:	8100030b 	ldhu	r4,12(r16)
   29ae0:	80c00417 	ldw	r3,16(r16)
   29ae4:	003fc506 	br	299fc <__alt_data_end+0xfffe99fc>
   29ae8:	0024b180 	call	24b18 <__sinit>
   29aec:	003fbc06 	br	299e0 <__alt_data_end+0xfffe99e0>

00029af0 <__swbuf>:
   29af0:	008000f4 	movhi	r2,3
   29af4:	10848804 	addi	r2,r2,4640
   29af8:	280d883a 	mov	r6,r5
   29afc:	200b883a 	mov	r5,r4
   29b00:	11000017 	ldw	r4,0(r2)
   29b04:	00299b01 	jmpi	299b0 <__swbuf_r>

00029b08 <_wcrtomb_r>:
   29b08:	defff604 	addi	sp,sp,-40
   29b0c:	008000f4 	movhi	r2,3
   29b10:	dc800815 	stw	r18,32(sp)
   29b14:	dc400715 	stw	r17,28(sp)
   29b18:	dc000615 	stw	r16,24(sp)
   29b1c:	10848c04 	addi	r2,r2,4656
   29b20:	dfc00915 	stw	ra,36(sp)
   29b24:	2021883a 	mov	r16,r4
   29b28:	3823883a 	mov	r17,r7
   29b2c:	14800017 	ldw	r18,0(r2)
   29b30:	28001426 	beq	r5,zero,29b84 <_wcrtomb_r+0x7c>
   29b34:	d9400415 	stw	r5,16(sp)
   29b38:	d9800515 	stw	r6,20(sp)
   29b3c:	002565c0 	call	2565c <__locale_charset>
   29b40:	d9800517 	ldw	r6,20(sp)
   29b44:	d9400417 	ldw	r5,16(sp)
   29b48:	100f883a 	mov	r7,r2
   29b4c:	dc400015 	stw	r17,0(sp)
   29b50:	8009883a 	mov	r4,r16
   29b54:	903ee83a 	callr	r18
   29b58:	00ffffc4 	movi	r3,-1
   29b5c:	10c0031e 	bne	r2,r3,29b6c <_wcrtomb_r+0x64>
   29b60:	88000015 	stw	zero,0(r17)
   29b64:	00c02284 	movi	r3,138
   29b68:	80c00015 	stw	r3,0(r16)
   29b6c:	dfc00917 	ldw	ra,36(sp)
   29b70:	dc800817 	ldw	r18,32(sp)
   29b74:	dc400717 	ldw	r17,28(sp)
   29b78:	dc000617 	ldw	r16,24(sp)
   29b7c:	dec00a04 	addi	sp,sp,40
   29b80:	f800283a 	ret
   29b84:	002565c0 	call	2565c <__locale_charset>
   29b88:	100f883a 	mov	r7,r2
   29b8c:	dc400015 	stw	r17,0(sp)
   29b90:	000d883a 	mov	r6,zero
   29b94:	d9400104 	addi	r5,sp,4
   29b98:	8009883a 	mov	r4,r16
   29b9c:	903ee83a 	callr	r18
   29ba0:	003fed06 	br	29b58 <__alt_data_end+0xfffe9b58>

00029ba4 <wcrtomb>:
   29ba4:	defff604 	addi	sp,sp,-40
   29ba8:	008000f4 	movhi	r2,3
   29bac:	dc800615 	stw	r18,24(sp)
   29bb0:	dc400515 	stw	r17,20(sp)
   29bb4:	10848804 	addi	r2,r2,4640
   29bb8:	dfc00915 	stw	ra,36(sp)
   29bbc:	dd000815 	stw	r20,32(sp)
   29bc0:	dcc00715 	stw	r19,28(sp)
   29bc4:	dc000415 	stw	r16,16(sp)
   29bc8:	3025883a 	mov	r18,r6
   29bcc:	14400017 	ldw	r17,0(r2)
   29bd0:	20001926 	beq	r4,zero,29c38 <wcrtomb+0x94>
   29bd4:	008000f4 	movhi	r2,3
   29bd8:	10848c04 	addi	r2,r2,4656
   29bdc:	15000017 	ldw	r20,0(r2)
   29be0:	2021883a 	mov	r16,r4
   29be4:	2827883a 	mov	r19,r5
   29be8:	002565c0 	call	2565c <__locale_charset>
   29bec:	100f883a 	mov	r7,r2
   29bf0:	dc800015 	stw	r18,0(sp)
   29bf4:	980d883a 	mov	r6,r19
   29bf8:	800b883a 	mov	r5,r16
   29bfc:	8809883a 	mov	r4,r17
   29c00:	a03ee83a 	callr	r20
   29c04:	00ffffc4 	movi	r3,-1
   29c08:	10c0031e 	bne	r2,r3,29c18 <wcrtomb+0x74>
   29c0c:	90000015 	stw	zero,0(r18)
   29c10:	00c02284 	movi	r3,138
   29c14:	88c00015 	stw	r3,0(r17)
   29c18:	dfc00917 	ldw	ra,36(sp)
   29c1c:	dd000817 	ldw	r20,32(sp)
   29c20:	dcc00717 	ldw	r19,28(sp)
   29c24:	dc800617 	ldw	r18,24(sp)
   29c28:	dc400517 	ldw	r17,20(sp)
   29c2c:	dc000417 	ldw	r16,16(sp)
   29c30:	dec00a04 	addi	sp,sp,40
   29c34:	f800283a 	ret
   29c38:	008000f4 	movhi	r2,3
   29c3c:	10848c04 	addi	r2,r2,4656
   29c40:	14000017 	ldw	r16,0(r2)
   29c44:	002565c0 	call	2565c <__locale_charset>
   29c48:	100f883a 	mov	r7,r2
   29c4c:	dc800015 	stw	r18,0(sp)
   29c50:	000d883a 	mov	r6,zero
   29c54:	d9400104 	addi	r5,sp,4
   29c58:	8809883a 	mov	r4,r17
   29c5c:	803ee83a 	callr	r16
   29c60:	003fe806 	br	29c04 <__alt_data_end+0xfffe9c04>

00029c64 <__ascii_wctomb>:
   29c64:	28000526 	beq	r5,zero,29c7c <__ascii_wctomb+0x18>
   29c68:	00803fc4 	movi	r2,255
   29c6c:	11800536 	bltu	r2,r6,29c84 <__ascii_wctomb+0x20>
   29c70:	29800005 	stb	r6,0(r5)
   29c74:	00800044 	movi	r2,1
   29c78:	f800283a 	ret
   29c7c:	0005883a 	mov	r2,zero
   29c80:	f800283a 	ret
   29c84:	00802284 	movi	r2,138
   29c88:	20800015 	stw	r2,0(r4)
   29c8c:	00bfffc4 	movi	r2,-1
   29c90:	f800283a 	ret

00029c94 <_wctomb_r>:
   29c94:	008000f4 	movhi	r2,3
   29c98:	defff904 	addi	sp,sp,-28
   29c9c:	10848c04 	addi	r2,r2,4656
   29ca0:	dfc00615 	stw	ra,24(sp)
   29ca4:	dc400515 	stw	r17,20(sp)
   29ca8:	dc000415 	stw	r16,16(sp)
   29cac:	3823883a 	mov	r17,r7
   29cb0:	14000017 	ldw	r16,0(r2)
   29cb4:	d9000115 	stw	r4,4(sp)
   29cb8:	d9400215 	stw	r5,8(sp)
   29cbc:	d9800315 	stw	r6,12(sp)
   29cc0:	002565c0 	call	2565c <__locale_charset>
   29cc4:	d9800317 	ldw	r6,12(sp)
   29cc8:	d9400217 	ldw	r5,8(sp)
   29ccc:	d9000117 	ldw	r4,4(sp)
   29cd0:	100f883a 	mov	r7,r2
   29cd4:	dc400015 	stw	r17,0(sp)
   29cd8:	803ee83a 	callr	r16
   29cdc:	dfc00617 	ldw	ra,24(sp)
   29ce0:	dc400517 	ldw	r17,20(sp)
   29ce4:	dc000417 	ldw	r16,16(sp)
   29ce8:	dec00704 	addi	sp,sp,28
   29cec:	f800283a 	ret

00029cf0 <__udivdi3>:
   29cf0:	defff504 	addi	sp,sp,-44
   29cf4:	dcc00415 	stw	r19,16(sp)
   29cf8:	dc000115 	stw	r16,4(sp)
   29cfc:	dfc00a15 	stw	ra,40(sp)
   29d00:	df000915 	stw	fp,36(sp)
   29d04:	ddc00815 	stw	r23,32(sp)
   29d08:	dd800715 	stw	r22,28(sp)
   29d0c:	dd400615 	stw	r21,24(sp)
   29d10:	dd000515 	stw	r20,20(sp)
   29d14:	dc800315 	stw	r18,12(sp)
   29d18:	dc400215 	stw	r17,8(sp)
   29d1c:	2027883a 	mov	r19,r4
   29d20:	2821883a 	mov	r16,r5
   29d24:	3800411e 	bne	r7,zero,29e2c <__udivdi3+0x13c>
   29d28:	3023883a 	mov	r17,r6
   29d2c:	2025883a 	mov	r18,r4
   29d30:	2980522e 	bgeu	r5,r6,29e7c <__udivdi3+0x18c>
   29d34:	00bfffd4 	movui	r2,65535
   29d38:	282d883a 	mov	r22,r5
   29d3c:	1180a836 	bltu	r2,r6,29fe0 <__udivdi3+0x2f0>
   29d40:	00803fc4 	movi	r2,255
   29d44:	1185803a 	cmpltu	r2,r2,r6
   29d48:	100490fa 	slli	r2,r2,3
   29d4c:	3086d83a 	srl	r3,r6,r2
   29d50:	010000f4 	movhi	r4,3
   29d54:	213d8f04 	addi	r4,r4,-2500
   29d58:	20c7883a 	add	r3,r4,r3
   29d5c:	18c00003 	ldbu	r3,0(r3)
   29d60:	1885883a 	add	r2,r3,r2
   29d64:	00c00804 	movi	r3,32
   29d68:	1887c83a 	sub	r3,r3,r2
   29d6c:	18000526 	beq	r3,zero,29d84 <__udivdi3+0x94>
   29d70:	80e0983a 	sll	r16,r16,r3
   29d74:	9884d83a 	srl	r2,r19,r2
   29d78:	30e2983a 	sll	r17,r6,r3
   29d7c:	98e4983a 	sll	r18,r19,r3
   29d80:	142cb03a 	or	r22,r2,r16
   29d84:	882ad43a 	srli	r21,r17,16
   29d88:	b009883a 	mov	r4,r22
   29d8c:	8d3fffcc 	andi	r20,r17,65535
   29d90:	a80b883a 	mov	r5,r21
   29d94:	002a8fc0 	call	2a8fc <__umodsi3>
   29d98:	b009883a 	mov	r4,r22
   29d9c:	a80b883a 	mov	r5,r21
   29da0:	1027883a 	mov	r19,r2
   29da4:	002a8980 	call	2a898 <__udivsi3>
   29da8:	102d883a 	mov	r22,r2
   29dac:	9826943a 	slli	r19,r19,16
   29db0:	9004d43a 	srli	r2,r18,16
   29db4:	a5a1383a 	mul	r16,r20,r22
   29db8:	14c4b03a 	or	r2,r2,r19
   29dbc:	1400052e 	bgeu	r2,r16,29dd4 <__udivdi3+0xe4>
   29dc0:	1445883a 	add	r2,r2,r17
   29dc4:	b0ffffc4 	addi	r3,r22,-1
   29dc8:	14400136 	bltu	r2,r17,29dd0 <__udivdi3+0xe0>
   29dcc:	14012336 	bltu	r2,r16,2a25c <__udivdi3+0x56c>
   29dd0:	182d883a 	mov	r22,r3
   29dd4:	1421c83a 	sub	r16,r2,r16
   29dd8:	a80b883a 	mov	r5,r21
   29ddc:	8009883a 	mov	r4,r16
   29de0:	002a8fc0 	call	2a8fc <__umodsi3>
   29de4:	1027883a 	mov	r19,r2
   29de8:	a80b883a 	mov	r5,r21
   29dec:	8009883a 	mov	r4,r16
   29df0:	002a8980 	call	2a898 <__udivsi3>
   29df4:	9826943a 	slli	r19,r19,16
   29df8:	a0a9383a 	mul	r20,r20,r2
   29dfc:	94bfffcc 	andi	r18,r18,65535
   29e00:	94e4b03a 	or	r18,r18,r19
   29e04:	9500052e 	bgeu	r18,r20,29e1c <__udivdi3+0x12c>
   29e08:	8ca5883a 	add	r18,r17,r18
   29e0c:	10ffffc4 	addi	r3,r2,-1
   29e10:	9440f136 	bltu	r18,r17,2a1d8 <__udivdi3+0x4e8>
   29e14:	9500f02e 	bgeu	r18,r20,2a1d8 <__udivdi3+0x4e8>
   29e18:	10bfff84 	addi	r2,r2,-2
   29e1c:	b00c943a 	slli	r6,r22,16
   29e20:	0007883a 	mov	r3,zero
   29e24:	3084b03a 	or	r2,r6,r2
   29e28:	00005906 	br	29f90 <__udivdi3+0x2a0>
   29e2c:	29c05636 	bltu	r5,r7,29f88 <__udivdi3+0x298>
   29e30:	00bfffd4 	movui	r2,65535
   29e34:	11c0622e 	bgeu	r2,r7,29fc0 <__udivdi3+0x2d0>
   29e38:	00804034 	movhi	r2,256
   29e3c:	10bfffc4 	addi	r2,r2,-1
   29e40:	11c0ee36 	bltu	r2,r7,2a1fc <__udivdi3+0x50c>
   29e44:	00800404 	movi	r2,16
   29e48:	3886d83a 	srl	r3,r7,r2
   29e4c:	010000f4 	movhi	r4,3
   29e50:	213d8f04 	addi	r4,r4,-2500
   29e54:	20c7883a 	add	r3,r4,r3
   29e58:	18c00003 	ldbu	r3,0(r3)
   29e5c:	05400804 	movi	r21,32
   29e60:	1885883a 	add	r2,r3,r2
   29e64:	a8abc83a 	sub	r21,r21,r2
   29e68:	a800621e 	bne	r21,zero,29ff4 <__udivdi3+0x304>
   29e6c:	3c00e936 	bltu	r7,r16,2a214 <__udivdi3+0x524>
   29e70:	9985403a 	cmpgeu	r2,r19,r6
   29e74:	0007883a 	mov	r3,zero
   29e78:	00004506 	br	29f90 <__udivdi3+0x2a0>
   29e7c:	3000041e 	bne	r6,zero,29e90 <__udivdi3+0x1a0>
   29e80:	000b883a 	mov	r5,zero
   29e84:	01000044 	movi	r4,1
   29e88:	002a8980 	call	2a898 <__udivsi3>
   29e8c:	1023883a 	mov	r17,r2
   29e90:	00bfffd4 	movui	r2,65535
   29e94:	14404e2e 	bgeu	r2,r17,29fd0 <__udivdi3+0x2e0>
   29e98:	00804034 	movhi	r2,256
   29e9c:	10bfffc4 	addi	r2,r2,-1
   29ea0:	1440d836 	bltu	r2,r17,2a204 <__udivdi3+0x514>
   29ea4:	00800404 	movi	r2,16
   29ea8:	8886d83a 	srl	r3,r17,r2
   29eac:	010000f4 	movhi	r4,3
   29eb0:	213d8f04 	addi	r4,r4,-2500
   29eb4:	20c7883a 	add	r3,r4,r3
   29eb8:	18c00003 	ldbu	r3,0(r3)
   29ebc:	1885883a 	add	r2,r3,r2
   29ec0:	00c00804 	movi	r3,32
   29ec4:	1887c83a 	sub	r3,r3,r2
   29ec8:	18008f1e 	bne	r3,zero,2a108 <__udivdi3+0x418>
   29ecc:	882ad43a 	srli	r21,r17,16
   29ed0:	8461c83a 	sub	r16,r16,r17
   29ed4:	8d3fffcc 	andi	r20,r17,65535
   29ed8:	00c00044 	movi	r3,1
   29edc:	8009883a 	mov	r4,r16
   29ee0:	a80b883a 	mov	r5,r21
   29ee4:	d8c00015 	stw	r3,0(sp)
   29ee8:	002a8fc0 	call	2a8fc <__umodsi3>
   29eec:	8009883a 	mov	r4,r16
   29ef0:	a80b883a 	mov	r5,r21
   29ef4:	1027883a 	mov	r19,r2
   29ef8:	002a8980 	call	2a898 <__udivsi3>
   29efc:	9826943a 	slli	r19,r19,16
   29f00:	9008d43a 	srli	r4,r18,16
   29f04:	1521383a 	mul	r16,r2,r20
   29f08:	102d883a 	mov	r22,r2
   29f0c:	24c8b03a 	or	r4,r4,r19
   29f10:	d8c00017 	ldw	r3,0(sp)
   29f14:	2400052e 	bgeu	r4,r16,29f2c <__udivdi3+0x23c>
   29f18:	2449883a 	add	r4,r4,r17
   29f1c:	b0bfffc4 	addi	r2,r22,-1
   29f20:	24400136 	bltu	r4,r17,29f28 <__udivdi3+0x238>
   29f24:	2400ca36 	bltu	r4,r16,2a250 <__udivdi3+0x560>
   29f28:	102d883a 	mov	r22,r2
   29f2c:	2421c83a 	sub	r16,r4,r16
   29f30:	a80b883a 	mov	r5,r21
   29f34:	8009883a 	mov	r4,r16
   29f38:	d8c00015 	stw	r3,0(sp)
   29f3c:	002a8fc0 	call	2a8fc <__umodsi3>
   29f40:	1027883a 	mov	r19,r2
   29f44:	a80b883a 	mov	r5,r21
   29f48:	8009883a 	mov	r4,r16
   29f4c:	002a8980 	call	2a898 <__udivsi3>
   29f50:	9826943a 	slli	r19,r19,16
   29f54:	1529383a 	mul	r20,r2,r20
   29f58:	94bfffcc 	andi	r18,r18,65535
   29f5c:	94e4b03a 	or	r18,r18,r19
   29f60:	d8c00017 	ldw	r3,0(sp)
   29f64:	9500052e 	bgeu	r18,r20,29f7c <__udivdi3+0x28c>
   29f68:	8ca5883a 	add	r18,r17,r18
   29f6c:	113fffc4 	addi	r4,r2,-1
   29f70:	94409736 	bltu	r18,r17,2a1d0 <__udivdi3+0x4e0>
   29f74:	9500962e 	bgeu	r18,r20,2a1d0 <__udivdi3+0x4e0>
   29f78:	10bfff84 	addi	r2,r2,-2
   29f7c:	b00c943a 	slli	r6,r22,16
   29f80:	3084b03a 	or	r2,r6,r2
   29f84:	00000206 	br	29f90 <__udivdi3+0x2a0>
   29f88:	0007883a 	mov	r3,zero
   29f8c:	0005883a 	mov	r2,zero
   29f90:	dfc00a17 	ldw	ra,40(sp)
   29f94:	df000917 	ldw	fp,36(sp)
   29f98:	ddc00817 	ldw	r23,32(sp)
   29f9c:	dd800717 	ldw	r22,28(sp)
   29fa0:	dd400617 	ldw	r21,24(sp)
   29fa4:	dd000517 	ldw	r20,20(sp)
   29fa8:	dcc00417 	ldw	r19,16(sp)
   29fac:	dc800317 	ldw	r18,12(sp)
   29fb0:	dc400217 	ldw	r17,8(sp)
   29fb4:	dc000117 	ldw	r16,4(sp)
   29fb8:	dec00b04 	addi	sp,sp,44
   29fbc:	f800283a 	ret
   29fc0:	00803fc4 	movi	r2,255
   29fc4:	11c5803a 	cmpltu	r2,r2,r7
   29fc8:	100490fa 	slli	r2,r2,3
   29fcc:	003f9e06 	br	29e48 <__alt_data_end+0xfffe9e48>
   29fd0:	00803fc4 	movi	r2,255
   29fd4:	1445803a 	cmpltu	r2,r2,r17
   29fd8:	100490fa 	slli	r2,r2,3
   29fdc:	003fb206 	br	29ea8 <__alt_data_end+0xfffe9ea8>
   29fe0:	00804034 	movhi	r2,256
   29fe4:	10bfffc4 	addi	r2,r2,-1
   29fe8:	11808836 	bltu	r2,r6,2a20c <__udivdi3+0x51c>
   29fec:	00800404 	movi	r2,16
   29ff0:	003f5606 	br	29d4c <__alt_data_end+0xfffe9d4c>
   29ff4:	30aed83a 	srl	r23,r6,r2
   29ff8:	3d4e983a 	sll	r7,r7,r21
   29ffc:	80acd83a 	srl	r22,r16,r2
   2a000:	9884d83a 	srl	r2,r19,r2
   2a004:	3deeb03a 	or	r23,r7,r23
   2a008:	b824d43a 	srli	r18,r23,16
   2a00c:	8560983a 	sll	r16,r16,r21
   2a010:	b009883a 	mov	r4,r22
   2a014:	900b883a 	mov	r5,r18
   2a018:	3568983a 	sll	r20,r6,r21
   2a01c:	1420b03a 	or	r16,r2,r16
   2a020:	002a8fc0 	call	2a8fc <__umodsi3>
   2a024:	b009883a 	mov	r4,r22
   2a028:	900b883a 	mov	r5,r18
   2a02c:	1023883a 	mov	r17,r2
   2a030:	002a8980 	call	2a898 <__udivsi3>
   2a034:	8808943a 	slli	r4,r17,16
   2a038:	bf3fffcc 	andi	fp,r23,65535
   2a03c:	8006d43a 	srli	r3,r16,16
   2a040:	e0a3383a 	mul	r17,fp,r2
   2a044:	100d883a 	mov	r6,r2
   2a048:	1906b03a 	or	r3,r3,r4
   2a04c:	1c40042e 	bgeu	r3,r17,2a060 <__udivdi3+0x370>
   2a050:	1dc7883a 	add	r3,r3,r23
   2a054:	10bfffc4 	addi	r2,r2,-1
   2a058:	1dc0752e 	bgeu	r3,r23,2a230 <__udivdi3+0x540>
   2a05c:	100d883a 	mov	r6,r2
   2a060:	1c63c83a 	sub	r17,r3,r17
   2a064:	900b883a 	mov	r5,r18
   2a068:	8809883a 	mov	r4,r17
   2a06c:	d9800015 	stw	r6,0(sp)
   2a070:	002a8fc0 	call	2a8fc <__umodsi3>
   2a074:	102d883a 	mov	r22,r2
   2a078:	8809883a 	mov	r4,r17
   2a07c:	900b883a 	mov	r5,r18
   2a080:	002a8980 	call	2a898 <__udivsi3>
   2a084:	b02c943a 	slli	r22,r22,16
   2a088:	e089383a 	mul	r4,fp,r2
   2a08c:	843fffcc 	andi	r16,r16,65535
   2a090:	85a0b03a 	or	r16,r16,r22
   2a094:	d9800017 	ldw	r6,0(sp)
   2a098:	8100042e 	bgeu	r16,r4,2a0ac <__udivdi3+0x3bc>
   2a09c:	85e1883a 	add	r16,r16,r23
   2a0a0:	10ffffc4 	addi	r3,r2,-1
   2a0a4:	85c05e2e 	bgeu	r16,r23,2a220 <__udivdi3+0x530>
   2a0a8:	1805883a 	mov	r2,r3
   2a0ac:	300c943a 	slli	r6,r6,16
   2a0b0:	a17fffcc 	andi	r5,r20,65535
   2a0b4:	a028d43a 	srli	r20,r20,16
   2a0b8:	3084b03a 	or	r2,r6,r2
   2a0bc:	10ffffcc 	andi	r3,r2,65535
   2a0c0:	100cd43a 	srli	r6,r2,16
   2a0c4:	194f383a 	mul	r7,r3,r5
   2a0c8:	1d07383a 	mul	r3,r3,r20
   2a0cc:	314b383a 	mul	r5,r6,r5
   2a0d0:	3810d43a 	srli	r8,r7,16
   2a0d4:	8121c83a 	sub	r16,r16,r4
   2a0d8:	1947883a 	add	r3,r3,r5
   2a0dc:	40c7883a 	add	r3,r8,r3
   2a0e0:	350d383a 	mul	r6,r6,r20
   2a0e4:	1940022e 	bgeu	r3,r5,2a0f0 <__udivdi3+0x400>
   2a0e8:	01000074 	movhi	r4,1
   2a0ec:	310d883a 	add	r6,r6,r4
   2a0f0:	1828d43a 	srli	r20,r3,16
   2a0f4:	a18d883a 	add	r6,r20,r6
   2a0f8:	81803e36 	bltu	r16,r6,2a1f4 <__udivdi3+0x504>
   2a0fc:	81803826 	beq	r16,r6,2a1e0 <__udivdi3+0x4f0>
   2a100:	0007883a 	mov	r3,zero
   2a104:	003fa206 	br	29f90 <__alt_data_end+0xfffe9f90>
   2a108:	88e2983a 	sll	r17,r17,r3
   2a10c:	80a8d83a 	srl	r20,r16,r2
   2a110:	80e0983a 	sll	r16,r16,r3
   2a114:	882ad43a 	srli	r21,r17,16
   2a118:	9884d83a 	srl	r2,r19,r2
   2a11c:	a009883a 	mov	r4,r20
   2a120:	a80b883a 	mov	r5,r21
   2a124:	142eb03a 	or	r23,r2,r16
   2a128:	98e4983a 	sll	r18,r19,r3
   2a12c:	002a8fc0 	call	2a8fc <__umodsi3>
   2a130:	a009883a 	mov	r4,r20
   2a134:	a80b883a 	mov	r5,r21
   2a138:	1021883a 	mov	r16,r2
   2a13c:	002a8980 	call	2a898 <__udivsi3>
   2a140:	1039883a 	mov	fp,r2
   2a144:	8d3fffcc 	andi	r20,r17,65535
   2a148:	8020943a 	slli	r16,r16,16
   2a14c:	b804d43a 	srli	r2,r23,16
   2a150:	a72d383a 	mul	r22,r20,fp
   2a154:	1404b03a 	or	r2,r2,r16
   2a158:	1580062e 	bgeu	r2,r22,2a174 <__udivdi3+0x484>
   2a15c:	1445883a 	add	r2,r2,r17
   2a160:	e0ffffc4 	addi	r3,fp,-1
   2a164:	14403836 	bltu	r2,r17,2a248 <__udivdi3+0x558>
   2a168:	1580372e 	bgeu	r2,r22,2a248 <__udivdi3+0x558>
   2a16c:	e73fff84 	addi	fp,fp,-2
   2a170:	1445883a 	add	r2,r2,r17
   2a174:	15adc83a 	sub	r22,r2,r22
   2a178:	a80b883a 	mov	r5,r21
   2a17c:	b009883a 	mov	r4,r22
   2a180:	002a8fc0 	call	2a8fc <__umodsi3>
   2a184:	1027883a 	mov	r19,r2
   2a188:	b009883a 	mov	r4,r22
   2a18c:	a80b883a 	mov	r5,r21
   2a190:	002a8980 	call	2a898 <__udivsi3>
   2a194:	9826943a 	slli	r19,r19,16
   2a198:	a0a1383a 	mul	r16,r20,r2
   2a19c:	b93fffcc 	andi	r4,r23,65535
   2a1a0:	24c8b03a 	or	r4,r4,r19
   2a1a4:	2400062e 	bgeu	r4,r16,2a1c0 <__udivdi3+0x4d0>
   2a1a8:	2449883a 	add	r4,r4,r17
   2a1ac:	10ffffc4 	addi	r3,r2,-1
   2a1b0:	24402336 	bltu	r4,r17,2a240 <__udivdi3+0x550>
   2a1b4:	2400222e 	bgeu	r4,r16,2a240 <__udivdi3+0x550>
   2a1b8:	10bfff84 	addi	r2,r2,-2
   2a1bc:	2449883a 	add	r4,r4,r17
   2a1c0:	e038943a 	slli	fp,fp,16
   2a1c4:	2421c83a 	sub	r16,r4,r16
   2a1c8:	e086b03a 	or	r3,fp,r2
   2a1cc:	003f4306 	br	29edc <__alt_data_end+0xfffe9edc>
   2a1d0:	2005883a 	mov	r2,r4
   2a1d4:	003f6906 	br	29f7c <__alt_data_end+0xfffe9f7c>
   2a1d8:	1805883a 	mov	r2,r3
   2a1dc:	003f0f06 	br	29e1c <__alt_data_end+0xfffe9e1c>
   2a1e0:	1806943a 	slli	r3,r3,16
   2a1e4:	9d66983a 	sll	r19,r19,r21
   2a1e8:	39ffffcc 	andi	r7,r7,65535
   2a1ec:	19c7883a 	add	r3,r3,r7
   2a1f0:	98ffc32e 	bgeu	r19,r3,2a100 <__alt_data_end+0xfffea100>
   2a1f4:	10bfffc4 	addi	r2,r2,-1
   2a1f8:	003fc106 	br	2a100 <__alt_data_end+0xfffea100>
   2a1fc:	00800604 	movi	r2,24
   2a200:	003f1106 	br	29e48 <__alt_data_end+0xfffe9e48>
   2a204:	00800604 	movi	r2,24
   2a208:	003f2706 	br	29ea8 <__alt_data_end+0xfffe9ea8>
   2a20c:	00800604 	movi	r2,24
   2a210:	003ece06 	br	29d4c <__alt_data_end+0xfffe9d4c>
   2a214:	0007883a 	mov	r3,zero
   2a218:	00800044 	movi	r2,1
   2a21c:	003f5c06 	br	29f90 <__alt_data_end+0xfffe9f90>
   2a220:	813fa12e 	bgeu	r16,r4,2a0a8 <__alt_data_end+0xfffea0a8>
   2a224:	10bfff84 	addi	r2,r2,-2
   2a228:	85e1883a 	add	r16,r16,r23
   2a22c:	003f9f06 	br	2a0ac <__alt_data_end+0xfffea0ac>
   2a230:	1c7f8a2e 	bgeu	r3,r17,2a05c <__alt_data_end+0xfffea05c>
   2a234:	31bfff84 	addi	r6,r6,-2
   2a238:	1dc7883a 	add	r3,r3,r23
   2a23c:	003f8806 	br	2a060 <__alt_data_end+0xfffea060>
   2a240:	1805883a 	mov	r2,r3
   2a244:	003fde06 	br	2a1c0 <__alt_data_end+0xfffea1c0>
   2a248:	1839883a 	mov	fp,r3
   2a24c:	003fc906 	br	2a174 <__alt_data_end+0xfffea174>
   2a250:	b5bfff84 	addi	r22,r22,-2
   2a254:	2449883a 	add	r4,r4,r17
   2a258:	003f3406 	br	29f2c <__alt_data_end+0xfffe9f2c>
   2a25c:	b5bfff84 	addi	r22,r22,-2
   2a260:	1445883a 	add	r2,r2,r17
   2a264:	003edb06 	br	29dd4 <__alt_data_end+0xfffe9dd4>

0002a268 <__umoddi3>:
   2a268:	defff404 	addi	sp,sp,-48
   2a26c:	df000a15 	stw	fp,40(sp)
   2a270:	dc400315 	stw	r17,12(sp)
   2a274:	dc000215 	stw	r16,8(sp)
   2a278:	dfc00b15 	stw	ra,44(sp)
   2a27c:	ddc00915 	stw	r23,36(sp)
   2a280:	dd800815 	stw	r22,32(sp)
   2a284:	dd400715 	stw	r21,28(sp)
   2a288:	dd000615 	stw	r20,24(sp)
   2a28c:	dcc00515 	stw	r19,20(sp)
   2a290:	dc800415 	stw	r18,16(sp)
   2a294:	2021883a 	mov	r16,r4
   2a298:	2823883a 	mov	r17,r5
   2a29c:	2839883a 	mov	fp,r5
   2a2a0:	38003c1e 	bne	r7,zero,2a394 <__umoddi3+0x12c>
   2a2a4:	3027883a 	mov	r19,r6
   2a2a8:	2029883a 	mov	r20,r4
   2a2ac:	2980512e 	bgeu	r5,r6,2a3f4 <__umoddi3+0x18c>
   2a2b0:	00bfffd4 	movui	r2,65535
   2a2b4:	11809a36 	bltu	r2,r6,2a520 <__umoddi3+0x2b8>
   2a2b8:	01003fc4 	movi	r4,255
   2a2bc:	2189803a 	cmpltu	r4,r4,r6
   2a2c0:	200890fa 	slli	r4,r4,3
   2a2c4:	3104d83a 	srl	r2,r6,r4
   2a2c8:	00c000f4 	movhi	r3,3
   2a2cc:	18fd8f04 	addi	r3,r3,-2500
   2a2d0:	1885883a 	add	r2,r3,r2
   2a2d4:	10c00003 	ldbu	r3,0(r2)
   2a2d8:	00800804 	movi	r2,32
   2a2dc:	1909883a 	add	r4,r3,r4
   2a2e0:	1125c83a 	sub	r18,r2,r4
   2a2e4:	90000526 	beq	r18,zero,2a2fc <__umoddi3+0x94>
   2a2e8:	8ca2983a 	sll	r17,r17,r18
   2a2ec:	8108d83a 	srl	r4,r16,r4
   2a2f0:	34a6983a 	sll	r19,r6,r18
   2a2f4:	84a8983a 	sll	r20,r16,r18
   2a2f8:	2478b03a 	or	fp,r4,r17
   2a2fc:	982ed43a 	srli	r23,r19,16
   2a300:	e009883a 	mov	r4,fp
   2a304:	9dbfffcc 	andi	r22,r19,65535
   2a308:	b80b883a 	mov	r5,r23
   2a30c:	002a8fc0 	call	2a8fc <__umodsi3>
   2a310:	e009883a 	mov	r4,fp
   2a314:	b80b883a 	mov	r5,r23
   2a318:	102b883a 	mov	r21,r2
   2a31c:	002a8980 	call	2a898 <__udivsi3>
   2a320:	a806943a 	slli	r3,r21,16
   2a324:	a008d43a 	srli	r4,r20,16
   2a328:	b085383a 	mul	r2,r22,r2
   2a32c:	20c8b03a 	or	r4,r4,r3
   2a330:	2080032e 	bgeu	r4,r2,2a340 <__umoddi3+0xd8>
   2a334:	24c9883a 	add	r4,r4,r19
   2a338:	24c00136 	bltu	r4,r19,2a340 <__umoddi3+0xd8>
   2a33c:	20811036 	bltu	r4,r2,2a780 <__umoddi3+0x518>
   2a340:	20abc83a 	sub	r21,r4,r2
   2a344:	b80b883a 	mov	r5,r23
   2a348:	a809883a 	mov	r4,r21
   2a34c:	002a8fc0 	call	2a8fc <__umodsi3>
   2a350:	1023883a 	mov	r17,r2
   2a354:	b80b883a 	mov	r5,r23
   2a358:	a809883a 	mov	r4,r21
   2a35c:	002a8980 	call	2a898 <__udivsi3>
   2a360:	8822943a 	slli	r17,r17,16
   2a364:	b085383a 	mul	r2,r22,r2
   2a368:	a0ffffcc 	andi	r3,r20,65535
   2a36c:	1c46b03a 	or	r3,r3,r17
   2a370:	1880042e 	bgeu	r3,r2,2a384 <__umoddi3+0x11c>
   2a374:	1cc7883a 	add	r3,r3,r19
   2a378:	1cc00236 	bltu	r3,r19,2a384 <__umoddi3+0x11c>
   2a37c:	1880012e 	bgeu	r3,r2,2a384 <__umoddi3+0x11c>
   2a380:	1cc7883a 	add	r3,r3,r19
   2a384:	1885c83a 	sub	r2,r3,r2
   2a388:	1484d83a 	srl	r2,r2,r18
   2a38c:	0007883a 	mov	r3,zero
   2a390:	00004f06 	br	2a4d0 <__umoddi3+0x268>
   2a394:	29c04c36 	bltu	r5,r7,2a4c8 <__umoddi3+0x260>
   2a398:	00bfffd4 	movui	r2,65535
   2a39c:	11c0582e 	bgeu	r2,r7,2a500 <__umoddi3+0x298>
   2a3a0:	00804034 	movhi	r2,256
   2a3a4:	10bfffc4 	addi	r2,r2,-1
   2a3a8:	11c0e736 	bltu	r2,r7,2a748 <__umoddi3+0x4e0>
   2a3ac:	01000404 	movi	r4,16
   2a3b0:	3904d83a 	srl	r2,r7,r4
   2a3b4:	00c000f4 	movhi	r3,3
   2a3b8:	18fd8f04 	addi	r3,r3,-2500
   2a3bc:	1885883a 	add	r2,r3,r2
   2a3c0:	14c00003 	ldbu	r19,0(r2)
   2a3c4:	00c00804 	movi	r3,32
   2a3c8:	9927883a 	add	r19,r19,r4
   2a3cc:	1ce9c83a 	sub	r20,r3,r19
   2a3d0:	a000581e 	bne	r20,zero,2a534 <__umoddi3+0x2cc>
   2a3d4:	3c400136 	bltu	r7,r17,2a3dc <__umoddi3+0x174>
   2a3d8:	8180eb36 	bltu	r16,r6,2a788 <__umoddi3+0x520>
   2a3dc:	8185c83a 	sub	r2,r16,r6
   2a3e0:	89e3c83a 	sub	r17,r17,r7
   2a3e4:	8089803a 	cmpltu	r4,r16,r2
   2a3e8:	8939c83a 	sub	fp,r17,r4
   2a3ec:	e007883a 	mov	r3,fp
   2a3f0:	00003706 	br	2a4d0 <__umoddi3+0x268>
   2a3f4:	3000041e 	bne	r6,zero,2a408 <__umoddi3+0x1a0>
   2a3f8:	000b883a 	mov	r5,zero
   2a3fc:	01000044 	movi	r4,1
   2a400:	002a8980 	call	2a898 <__udivsi3>
   2a404:	1027883a 	mov	r19,r2
   2a408:	00bfffd4 	movui	r2,65535
   2a40c:	14c0402e 	bgeu	r2,r19,2a510 <__umoddi3+0x2a8>
   2a410:	00804034 	movhi	r2,256
   2a414:	10bfffc4 	addi	r2,r2,-1
   2a418:	14c0cd36 	bltu	r2,r19,2a750 <__umoddi3+0x4e8>
   2a41c:	00800404 	movi	r2,16
   2a420:	9886d83a 	srl	r3,r19,r2
   2a424:	010000f4 	movhi	r4,3
   2a428:	213d8f04 	addi	r4,r4,-2500
   2a42c:	20c7883a 	add	r3,r4,r3
   2a430:	18c00003 	ldbu	r3,0(r3)
   2a434:	1887883a 	add	r3,r3,r2
   2a438:	00800804 	movi	r2,32
   2a43c:	10e5c83a 	sub	r18,r2,r3
   2a440:	9000901e 	bne	r18,zero,2a684 <__umoddi3+0x41c>
   2a444:	982cd43a 	srli	r22,r19,16
   2a448:	8ce3c83a 	sub	r17,r17,r19
   2a44c:	9d7fffcc 	andi	r21,r19,65535
   2a450:	b00b883a 	mov	r5,r22
   2a454:	8809883a 	mov	r4,r17
   2a458:	002a8fc0 	call	2a8fc <__umodsi3>
   2a45c:	8809883a 	mov	r4,r17
   2a460:	b00b883a 	mov	r5,r22
   2a464:	1021883a 	mov	r16,r2
   2a468:	002a8980 	call	2a898 <__udivsi3>
   2a46c:	8006943a 	slli	r3,r16,16
   2a470:	a008d43a 	srli	r4,r20,16
   2a474:	1545383a 	mul	r2,r2,r21
   2a478:	20c8b03a 	or	r4,r4,r3
   2a47c:	2080042e 	bgeu	r4,r2,2a490 <__umoddi3+0x228>
   2a480:	24c9883a 	add	r4,r4,r19
   2a484:	24c00236 	bltu	r4,r19,2a490 <__umoddi3+0x228>
   2a488:	2080012e 	bgeu	r4,r2,2a490 <__umoddi3+0x228>
   2a48c:	24c9883a 	add	r4,r4,r19
   2a490:	20a1c83a 	sub	r16,r4,r2
   2a494:	b00b883a 	mov	r5,r22
   2a498:	8009883a 	mov	r4,r16
   2a49c:	002a8fc0 	call	2a8fc <__umodsi3>
   2a4a0:	1023883a 	mov	r17,r2
   2a4a4:	b00b883a 	mov	r5,r22
   2a4a8:	8009883a 	mov	r4,r16
   2a4ac:	002a8980 	call	2a898 <__udivsi3>
   2a4b0:	8822943a 	slli	r17,r17,16
   2a4b4:	1545383a 	mul	r2,r2,r21
   2a4b8:	a53fffcc 	andi	r20,r20,65535
   2a4bc:	a446b03a 	or	r3,r20,r17
   2a4c0:	18bfb02e 	bgeu	r3,r2,2a384 <__alt_data_end+0xfffea384>
   2a4c4:	003fab06 	br	2a374 <__alt_data_end+0xfffea374>
   2a4c8:	2005883a 	mov	r2,r4
   2a4cc:	2807883a 	mov	r3,r5
   2a4d0:	dfc00b17 	ldw	ra,44(sp)
   2a4d4:	df000a17 	ldw	fp,40(sp)
   2a4d8:	ddc00917 	ldw	r23,36(sp)
   2a4dc:	dd800817 	ldw	r22,32(sp)
   2a4e0:	dd400717 	ldw	r21,28(sp)
   2a4e4:	dd000617 	ldw	r20,24(sp)
   2a4e8:	dcc00517 	ldw	r19,20(sp)
   2a4ec:	dc800417 	ldw	r18,16(sp)
   2a4f0:	dc400317 	ldw	r17,12(sp)
   2a4f4:	dc000217 	ldw	r16,8(sp)
   2a4f8:	dec00c04 	addi	sp,sp,48
   2a4fc:	f800283a 	ret
   2a500:	04c03fc4 	movi	r19,255
   2a504:	99c9803a 	cmpltu	r4,r19,r7
   2a508:	200890fa 	slli	r4,r4,3
   2a50c:	003fa806 	br	2a3b0 <__alt_data_end+0xfffea3b0>
   2a510:	00803fc4 	movi	r2,255
   2a514:	14c5803a 	cmpltu	r2,r2,r19
   2a518:	100490fa 	slli	r2,r2,3
   2a51c:	003fc006 	br	2a420 <__alt_data_end+0xfffea420>
   2a520:	00804034 	movhi	r2,256
   2a524:	10bfffc4 	addi	r2,r2,-1
   2a528:	11808b36 	bltu	r2,r6,2a758 <__umoddi3+0x4f0>
   2a52c:	01000404 	movi	r4,16
   2a530:	003f6406 	br	2a2c4 <__alt_data_end+0xfffea2c4>
   2a534:	34c4d83a 	srl	r2,r6,r19
   2a538:	3d0e983a 	sll	r7,r7,r20
   2a53c:	8cf8d83a 	srl	fp,r17,r19
   2a540:	8d10983a 	sll	r8,r17,r20
   2a544:	38aab03a 	or	r21,r7,r2
   2a548:	a82cd43a 	srli	r22,r21,16
   2a54c:	84e2d83a 	srl	r17,r16,r19
   2a550:	e009883a 	mov	r4,fp
   2a554:	b00b883a 	mov	r5,r22
   2a558:	8a22b03a 	or	r17,r17,r8
   2a55c:	3524983a 	sll	r18,r6,r20
   2a560:	002a8fc0 	call	2a8fc <__umodsi3>
   2a564:	e009883a 	mov	r4,fp
   2a568:	b00b883a 	mov	r5,r22
   2a56c:	102f883a 	mov	r23,r2
   2a570:	002a8980 	call	2a898 <__udivsi3>
   2a574:	100d883a 	mov	r6,r2
   2a578:	b808943a 	slli	r4,r23,16
   2a57c:	aa3fffcc 	andi	r8,r21,65535
   2a580:	8804d43a 	srli	r2,r17,16
   2a584:	41af383a 	mul	r23,r8,r6
   2a588:	8520983a 	sll	r16,r16,r20
   2a58c:	1104b03a 	or	r2,r2,r4
   2a590:	15c0042e 	bgeu	r2,r23,2a5a4 <__umoddi3+0x33c>
   2a594:	1545883a 	add	r2,r2,r21
   2a598:	30ffffc4 	addi	r3,r6,-1
   2a59c:	1540742e 	bgeu	r2,r21,2a770 <__umoddi3+0x508>
   2a5a0:	180d883a 	mov	r6,r3
   2a5a4:	15efc83a 	sub	r23,r2,r23
   2a5a8:	b00b883a 	mov	r5,r22
   2a5ac:	b809883a 	mov	r4,r23
   2a5b0:	d9800115 	stw	r6,4(sp)
   2a5b4:	da000015 	stw	r8,0(sp)
   2a5b8:	002a8fc0 	call	2a8fc <__umodsi3>
   2a5bc:	b00b883a 	mov	r5,r22
   2a5c0:	b809883a 	mov	r4,r23
   2a5c4:	1039883a 	mov	fp,r2
   2a5c8:	002a8980 	call	2a898 <__udivsi3>
   2a5cc:	da000017 	ldw	r8,0(sp)
   2a5d0:	e038943a 	slli	fp,fp,16
   2a5d4:	100b883a 	mov	r5,r2
   2a5d8:	4089383a 	mul	r4,r8,r2
   2a5dc:	8a3fffcc 	andi	r8,r17,65535
   2a5e0:	4710b03a 	or	r8,r8,fp
   2a5e4:	d9800117 	ldw	r6,4(sp)
   2a5e8:	4100042e 	bgeu	r8,r4,2a5fc <__umoddi3+0x394>
   2a5ec:	4551883a 	add	r8,r8,r21
   2a5f0:	10bfffc4 	addi	r2,r2,-1
   2a5f4:	45405a2e 	bgeu	r8,r21,2a760 <__umoddi3+0x4f8>
   2a5f8:	100b883a 	mov	r5,r2
   2a5fc:	300c943a 	slli	r6,r6,16
   2a600:	91ffffcc 	andi	r7,r18,65535
   2a604:	9004d43a 	srli	r2,r18,16
   2a608:	314cb03a 	or	r6,r6,r5
   2a60c:	317fffcc 	andi	r5,r6,65535
   2a610:	300cd43a 	srli	r6,r6,16
   2a614:	29d3383a 	mul	r9,r5,r7
   2a618:	288b383a 	mul	r5,r5,r2
   2a61c:	31cf383a 	mul	r7,r6,r7
   2a620:	4806d43a 	srli	r3,r9,16
   2a624:	4111c83a 	sub	r8,r8,r4
   2a628:	29cb883a 	add	r5,r5,r7
   2a62c:	194b883a 	add	r5,r3,r5
   2a630:	3085383a 	mul	r2,r6,r2
   2a634:	29c0022e 	bgeu	r5,r7,2a640 <__umoddi3+0x3d8>
   2a638:	00c00074 	movhi	r3,1
   2a63c:	10c5883a 	add	r2,r2,r3
   2a640:	2808d43a 	srli	r4,r5,16
   2a644:	280a943a 	slli	r5,r5,16
   2a648:	4a7fffcc 	andi	r9,r9,65535
   2a64c:	2085883a 	add	r2,r4,r2
   2a650:	2a4b883a 	add	r5,r5,r9
   2a654:	40803636 	bltu	r8,r2,2a730 <__umoddi3+0x4c8>
   2a658:	40804d26 	beq	r8,r2,2a790 <__umoddi3+0x528>
   2a65c:	4089c83a 	sub	r4,r8,r2
   2a660:	280f883a 	mov	r7,r5
   2a664:	81cfc83a 	sub	r7,r16,r7
   2a668:	81c7803a 	cmpltu	r3,r16,r7
   2a66c:	20c7c83a 	sub	r3,r4,r3
   2a670:	1cc4983a 	sll	r2,r3,r19
   2a674:	3d0ed83a 	srl	r7,r7,r20
   2a678:	1d06d83a 	srl	r3,r3,r20
   2a67c:	11c4b03a 	or	r2,r2,r7
   2a680:	003f9306 	br	2a4d0 <__alt_data_end+0xfffea4d0>
   2a684:	9ca6983a 	sll	r19,r19,r18
   2a688:	88e8d83a 	srl	r20,r17,r3
   2a68c:	80c4d83a 	srl	r2,r16,r3
   2a690:	982cd43a 	srli	r22,r19,16
   2a694:	8ca2983a 	sll	r17,r17,r18
   2a698:	a009883a 	mov	r4,r20
   2a69c:	b00b883a 	mov	r5,r22
   2a6a0:	1478b03a 	or	fp,r2,r17
   2a6a4:	002a8fc0 	call	2a8fc <__umodsi3>
   2a6a8:	a009883a 	mov	r4,r20
   2a6ac:	b00b883a 	mov	r5,r22
   2a6b0:	1023883a 	mov	r17,r2
   2a6b4:	002a8980 	call	2a898 <__udivsi3>
   2a6b8:	9d7fffcc 	andi	r21,r19,65535
   2a6bc:	880a943a 	slli	r5,r17,16
   2a6c0:	e008d43a 	srli	r4,fp,16
   2a6c4:	a885383a 	mul	r2,r21,r2
   2a6c8:	84a8983a 	sll	r20,r16,r18
   2a6cc:	2148b03a 	or	r4,r4,r5
   2a6d0:	2080042e 	bgeu	r4,r2,2a6e4 <__umoddi3+0x47c>
   2a6d4:	24c9883a 	add	r4,r4,r19
   2a6d8:	24c00236 	bltu	r4,r19,2a6e4 <__umoddi3+0x47c>
   2a6dc:	2080012e 	bgeu	r4,r2,2a6e4 <__umoddi3+0x47c>
   2a6e0:	24c9883a 	add	r4,r4,r19
   2a6e4:	20a3c83a 	sub	r17,r4,r2
   2a6e8:	b00b883a 	mov	r5,r22
   2a6ec:	8809883a 	mov	r4,r17
   2a6f0:	002a8fc0 	call	2a8fc <__umodsi3>
   2a6f4:	102f883a 	mov	r23,r2
   2a6f8:	8809883a 	mov	r4,r17
   2a6fc:	b00b883a 	mov	r5,r22
   2a700:	002a8980 	call	2a898 <__udivsi3>
   2a704:	b82e943a 	slli	r23,r23,16
   2a708:	a885383a 	mul	r2,r21,r2
   2a70c:	e13fffcc 	andi	r4,fp,65535
   2a710:	25c8b03a 	or	r4,r4,r23
   2a714:	2080042e 	bgeu	r4,r2,2a728 <__umoddi3+0x4c0>
   2a718:	24c9883a 	add	r4,r4,r19
   2a71c:	24c00236 	bltu	r4,r19,2a728 <__umoddi3+0x4c0>
   2a720:	2080012e 	bgeu	r4,r2,2a728 <__umoddi3+0x4c0>
   2a724:	24c9883a 	add	r4,r4,r19
   2a728:	20a3c83a 	sub	r17,r4,r2
   2a72c:	003f4806 	br	2a450 <__alt_data_end+0xfffea450>
   2a730:	2c8fc83a 	sub	r7,r5,r18
   2a734:	1545c83a 	sub	r2,r2,r21
   2a738:	29cb803a 	cmpltu	r5,r5,r7
   2a73c:	1145c83a 	sub	r2,r2,r5
   2a740:	4089c83a 	sub	r4,r8,r2
   2a744:	003fc706 	br	2a664 <__alt_data_end+0xfffea664>
   2a748:	01000604 	movi	r4,24
   2a74c:	003f1806 	br	2a3b0 <__alt_data_end+0xfffea3b0>
   2a750:	00800604 	movi	r2,24
   2a754:	003f3206 	br	2a420 <__alt_data_end+0xfffea420>
   2a758:	01000604 	movi	r4,24
   2a75c:	003ed906 	br	2a2c4 <__alt_data_end+0xfffea2c4>
   2a760:	413fa52e 	bgeu	r8,r4,2a5f8 <__alt_data_end+0xfffea5f8>
   2a764:	297fff84 	addi	r5,r5,-2
   2a768:	4551883a 	add	r8,r8,r21
   2a76c:	003fa306 	br	2a5fc <__alt_data_end+0xfffea5fc>
   2a770:	15ff8b2e 	bgeu	r2,r23,2a5a0 <__alt_data_end+0xfffea5a0>
   2a774:	31bfff84 	addi	r6,r6,-2
   2a778:	1545883a 	add	r2,r2,r21
   2a77c:	003f8906 	br	2a5a4 <__alt_data_end+0xfffea5a4>
   2a780:	24c9883a 	add	r4,r4,r19
   2a784:	003eee06 	br	2a340 <__alt_data_end+0xfffea340>
   2a788:	8005883a 	mov	r2,r16
   2a78c:	003f1706 	br	2a3ec <__alt_data_end+0xfffea3ec>
   2a790:	817fe736 	bltu	r16,r5,2a730 <__alt_data_end+0xfffea730>
   2a794:	280f883a 	mov	r7,r5
   2a798:	0009883a 	mov	r4,zero
   2a79c:	003fb106 	br	2a664 <__alt_data_end+0xfffea664>

0002a7a0 <__divsi3>:
   2a7a0:	20001b16 	blt	r4,zero,2a810 <__divsi3+0x70>
   2a7a4:	000f883a 	mov	r7,zero
   2a7a8:	28001616 	blt	r5,zero,2a804 <__divsi3+0x64>
   2a7ac:	200d883a 	mov	r6,r4
   2a7b0:	29001a2e 	bgeu	r5,r4,2a81c <__divsi3+0x7c>
   2a7b4:	00800804 	movi	r2,32
   2a7b8:	00c00044 	movi	r3,1
   2a7bc:	00000106 	br	2a7c4 <__divsi3+0x24>
   2a7c0:	10000d26 	beq	r2,zero,2a7f8 <__divsi3+0x58>
   2a7c4:	294b883a 	add	r5,r5,r5
   2a7c8:	10bfffc4 	addi	r2,r2,-1
   2a7cc:	18c7883a 	add	r3,r3,r3
   2a7d0:	293ffb36 	bltu	r5,r4,2a7c0 <__alt_data_end+0xfffea7c0>
   2a7d4:	0005883a 	mov	r2,zero
   2a7d8:	18000726 	beq	r3,zero,2a7f8 <__divsi3+0x58>
   2a7dc:	0005883a 	mov	r2,zero
   2a7e0:	31400236 	bltu	r6,r5,2a7ec <__divsi3+0x4c>
   2a7e4:	314dc83a 	sub	r6,r6,r5
   2a7e8:	10c4b03a 	or	r2,r2,r3
   2a7ec:	1806d07a 	srli	r3,r3,1
   2a7f0:	280ad07a 	srli	r5,r5,1
   2a7f4:	183ffa1e 	bne	r3,zero,2a7e0 <__alt_data_end+0xfffea7e0>
   2a7f8:	38000126 	beq	r7,zero,2a800 <__divsi3+0x60>
   2a7fc:	0085c83a 	sub	r2,zero,r2
   2a800:	f800283a 	ret
   2a804:	014bc83a 	sub	r5,zero,r5
   2a808:	39c0005c 	xori	r7,r7,1
   2a80c:	003fe706 	br	2a7ac <__alt_data_end+0xfffea7ac>
   2a810:	0109c83a 	sub	r4,zero,r4
   2a814:	01c00044 	movi	r7,1
   2a818:	003fe306 	br	2a7a8 <__alt_data_end+0xfffea7a8>
   2a81c:	00c00044 	movi	r3,1
   2a820:	003fee06 	br	2a7dc <__alt_data_end+0xfffea7dc>

0002a824 <__modsi3>:
   2a824:	20001716 	blt	r4,zero,2a884 <__modsi3+0x60>
   2a828:	000f883a 	mov	r7,zero
   2a82c:	2005883a 	mov	r2,r4
   2a830:	28001216 	blt	r5,zero,2a87c <__modsi3+0x58>
   2a834:	2900162e 	bgeu	r5,r4,2a890 <__modsi3+0x6c>
   2a838:	01800804 	movi	r6,32
   2a83c:	00c00044 	movi	r3,1
   2a840:	00000106 	br	2a848 <__modsi3+0x24>
   2a844:	30000a26 	beq	r6,zero,2a870 <__modsi3+0x4c>
   2a848:	294b883a 	add	r5,r5,r5
   2a84c:	31bfffc4 	addi	r6,r6,-1
   2a850:	18c7883a 	add	r3,r3,r3
   2a854:	293ffb36 	bltu	r5,r4,2a844 <__alt_data_end+0xfffea844>
   2a858:	18000526 	beq	r3,zero,2a870 <__modsi3+0x4c>
   2a85c:	1806d07a 	srli	r3,r3,1
   2a860:	11400136 	bltu	r2,r5,2a868 <__modsi3+0x44>
   2a864:	1145c83a 	sub	r2,r2,r5
   2a868:	280ad07a 	srli	r5,r5,1
   2a86c:	183ffb1e 	bne	r3,zero,2a85c <__alt_data_end+0xfffea85c>
   2a870:	38000126 	beq	r7,zero,2a878 <__modsi3+0x54>
   2a874:	0085c83a 	sub	r2,zero,r2
   2a878:	f800283a 	ret
   2a87c:	014bc83a 	sub	r5,zero,r5
   2a880:	003fec06 	br	2a834 <__alt_data_end+0xfffea834>
   2a884:	0109c83a 	sub	r4,zero,r4
   2a888:	01c00044 	movi	r7,1
   2a88c:	003fe706 	br	2a82c <__alt_data_end+0xfffea82c>
   2a890:	00c00044 	movi	r3,1
   2a894:	003ff106 	br	2a85c <__alt_data_end+0xfffea85c>

0002a898 <__udivsi3>:
   2a898:	200d883a 	mov	r6,r4
   2a89c:	2900152e 	bgeu	r5,r4,2a8f4 <__udivsi3+0x5c>
   2a8a0:	28001416 	blt	r5,zero,2a8f4 <__udivsi3+0x5c>
   2a8a4:	00800804 	movi	r2,32
   2a8a8:	00c00044 	movi	r3,1
   2a8ac:	00000206 	br	2a8b8 <__udivsi3+0x20>
   2a8b0:	10000e26 	beq	r2,zero,2a8ec <__udivsi3+0x54>
   2a8b4:	28000516 	blt	r5,zero,2a8cc <__udivsi3+0x34>
   2a8b8:	294b883a 	add	r5,r5,r5
   2a8bc:	10bfffc4 	addi	r2,r2,-1
   2a8c0:	18c7883a 	add	r3,r3,r3
   2a8c4:	293ffa36 	bltu	r5,r4,2a8b0 <__alt_data_end+0xfffea8b0>
   2a8c8:	18000826 	beq	r3,zero,2a8ec <__udivsi3+0x54>
   2a8cc:	0005883a 	mov	r2,zero
   2a8d0:	31400236 	bltu	r6,r5,2a8dc <__udivsi3+0x44>
   2a8d4:	314dc83a 	sub	r6,r6,r5
   2a8d8:	10c4b03a 	or	r2,r2,r3
   2a8dc:	1806d07a 	srli	r3,r3,1
   2a8e0:	280ad07a 	srli	r5,r5,1
   2a8e4:	183ffa1e 	bne	r3,zero,2a8d0 <__alt_data_end+0xfffea8d0>
   2a8e8:	f800283a 	ret
   2a8ec:	0005883a 	mov	r2,zero
   2a8f0:	f800283a 	ret
   2a8f4:	00c00044 	movi	r3,1
   2a8f8:	003ff406 	br	2a8cc <__alt_data_end+0xfffea8cc>

0002a8fc <__umodsi3>:
   2a8fc:	2005883a 	mov	r2,r4
   2a900:	2900122e 	bgeu	r5,r4,2a94c <__umodsi3+0x50>
   2a904:	28001116 	blt	r5,zero,2a94c <__umodsi3+0x50>
   2a908:	01800804 	movi	r6,32
   2a90c:	00c00044 	movi	r3,1
   2a910:	00000206 	br	2a91c <__umodsi3+0x20>
   2a914:	30000c26 	beq	r6,zero,2a948 <__umodsi3+0x4c>
   2a918:	28000516 	blt	r5,zero,2a930 <__umodsi3+0x34>
   2a91c:	294b883a 	add	r5,r5,r5
   2a920:	31bfffc4 	addi	r6,r6,-1
   2a924:	18c7883a 	add	r3,r3,r3
   2a928:	293ffa36 	bltu	r5,r4,2a914 <__alt_data_end+0xfffea914>
   2a92c:	18000626 	beq	r3,zero,2a948 <__umodsi3+0x4c>
   2a930:	1806d07a 	srli	r3,r3,1
   2a934:	11400136 	bltu	r2,r5,2a93c <__umodsi3+0x40>
   2a938:	1145c83a 	sub	r2,r2,r5
   2a93c:	280ad07a 	srli	r5,r5,1
   2a940:	183ffb1e 	bne	r3,zero,2a930 <__alt_data_end+0xfffea930>
   2a944:	f800283a 	ret
   2a948:	f800283a 	ret
   2a94c:	00c00044 	movi	r3,1
   2a950:	003ff706 	br	2a930 <__alt_data_end+0xfffea930>

0002a954 <__adddf3>:
   2a954:	02c00434 	movhi	r11,16
   2a958:	5affffc4 	addi	r11,r11,-1
   2a95c:	2806d7fa 	srli	r3,r5,31
   2a960:	2ad4703a 	and	r10,r5,r11
   2a964:	3ad2703a 	and	r9,r7,r11
   2a968:	3804d53a 	srli	r2,r7,20
   2a96c:	3018d77a 	srli	r12,r6,29
   2a970:	280ad53a 	srli	r5,r5,20
   2a974:	501490fa 	slli	r10,r10,3
   2a978:	2010d77a 	srli	r8,r4,29
   2a97c:	481290fa 	slli	r9,r9,3
   2a980:	380ed7fa 	srli	r7,r7,31
   2a984:	defffb04 	addi	sp,sp,-20
   2a988:	dc800215 	stw	r18,8(sp)
   2a98c:	dc400115 	stw	r17,4(sp)
   2a990:	dc000015 	stw	r16,0(sp)
   2a994:	dfc00415 	stw	ra,16(sp)
   2a998:	dcc00315 	stw	r19,12(sp)
   2a99c:	1c803fcc 	andi	r18,r3,255
   2a9a0:	2c01ffcc 	andi	r16,r5,2047
   2a9a4:	5210b03a 	or	r8,r10,r8
   2a9a8:	202290fa 	slli	r17,r4,3
   2a9ac:	1081ffcc 	andi	r2,r2,2047
   2a9b0:	4b12b03a 	or	r9,r9,r12
   2a9b4:	300c90fa 	slli	r6,r6,3
   2a9b8:	91c07526 	beq	r18,r7,2ab90 <__adddf3+0x23c>
   2a9bc:	8087c83a 	sub	r3,r16,r2
   2a9c0:	00c0ab0e 	bge	zero,r3,2ac70 <__adddf3+0x31c>
   2a9c4:	10002a1e 	bne	r2,zero,2aa70 <__adddf3+0x11c>
   2a9c8:	4984b03a 	or	r2,r9,r6
   2a9cc:	1000961e 	bne	r2,zero,2ac28 <__adddf3+0x2d4>
   2a9d0:	888001cc 	andi	r2,r17,7
   2a9d4:	10000726 	beq	r2,zero,2a9f4 <__adddf3+0xa0>
   2a9d8:	888003cc 	andi	r2,r17,15
   2a9dc:	00c00104 	movi	r3,4
   2a9e0:	10c00426 	beq	r2,r3,2a9f4 <__adddf3+0xa0>
   2a9e4:	88c7883a 	add	r3,r17,r3
   2a9e8:	1c63803a 	cmpltu	r17,r3,r17
   2a9ec:	4451883a 	add	r8,r8,r17
   2a9f0:	1823883a 	mov	r17,r3
   2a9f4:	4080202c 	andhi	r2,r8,128
   2a9f8:	10005926 	beq	r2,zero,2ab60 <__adddf3+0x20c>
   2a9fc:	84000044 	addi	r16,r16,1
   2aa00:	0081ffc4 	movi	r2,2047
   2aa04:	8080ba26 	beq	r16,r2,2acf0 <__adddf3+0x39c>
   2aa08:	00bfe034 	movhi	r2,65408
   2aa0c:	10bfffc4 	addi	r2,r2,-1
   2aa10:	4090703a 	and	r8,r8,r2
   2aa14:	4004977a 	slli	r2,r8,29
   2aa18:	4010927a 	slli	r8,r8,9
   2aa1c:	8822d0fa 	srli	r17,r17,3
   2aa20:	8401ffcc 	andi	r16,r16,2047
   2aa24:	4010d33a 	srli	r8,r8,12
   2aa28:	9007883a 	mov	r3,r18
   2aa2c:	1444b03a 	or	r2,r2,r17
   2aa30:	8401ffcc 	andi	r16,r16,2047
   2aa34:	8020953a 	slli	r16,r16,20
   2aa38:	18c03fcc 	andi	r3,r3,255
   2aa3c:	01000434 	movhi	r4,16
   2aa40:	213fffc4 	addi	r4,r4,-1
   2aa44:	180697fa 	slli	r3,r3,31
   2aa48:	4110703a 	and	r8,r8,r4
   2aa4c:	4410b03a 	or	r8,r8,r16
   2aa50:	40c6b03a 	or	r3,r8,r3
   2aa54:	dfc00417 	ldw	ra,16(sp)
   2aa58:	dcc00317 	ldw	r19,12(sp)
   2aa5c:	dc800217 	ldw	r18,8(sp)
   2aa60:	dc400117 	ldw	r17,4(sp)
   2aa64:	dc000017 	ldw	r16,0(sp)
   2aa68:	dec00504 	addi	sp,sp,20
   2aa6c:	f800283a 	ret
   2aa70:	0081ffc4 	movi	r2,2047
   2aa74:	80bfd626 	beq	r16,r2,2a9d0 <__alt_data_end+0xfffea9d0>
   2aa78:	4a402034 	orhi	r9,r9,128
   2aa7c:	00800e04 	movi	r2,56
   2aa80:	10c09f16 	blt	r2,r3,2ad00 <__adddf3+0x3ac>
   2aa84:	008007c4 	movi	r2,31
   2aa88:	10c0c216 	blt	r2,r3,2ad94 <__adddf3+0x440>
   2aa8c:	00800804 	movi	r2,32
   2aa90:	10c5c83a 	sub	r2,r2,r3
   2aa94:	488a983a 	sll	r5,r9,r2
   2aa98:	30c8d83a 	srl	r4,r6,r3
   2aa9c:	3084983a 	sll	r2,r6,r2
   2aaa0:	48c6d83a 	srl	r3,r9,r3
   2aaa4:	290cb03a 	or	r6,r5,r4
   2aaa8:	1004c03a 	cmpne	r2,r2,zero
   2aaac:	308cb03a 	or	r6,r6,r2
   2aab0:	898dc83a 	sub	r6,r17,r6
   2aab4:	89a3803a 	cmpltu	r17,r17,r6
   2aab8:	40d1c83a 	sub	r8,r8,r3
   2aabc:	4451c83a 	sub	r8,r8,r17
   2aac0:	3023883a 	mov	r17,r6
   2aac4:	4080202c 	andhi	r2,r8,128
   2aac8:	10002326 	beq	r2,zero,2ab58 <__adddf3+0x204>
   2aacc:	04c02034 	movhi	r19,128
   2aad0:	9cffffc4 	addi	r19,r19,-1
   2aad4:	44e6703a 	and	r19,r8,r19
   2aad8:	98007626 	beq	r19,zero,2acb4 <__adddf3+0x360>
   2aadc:	9809883a 	mov	r4,r19
   2aae0:	002cf580 	call	2cf58 <__clzsi2>
   2aae4:	10fffe04 	addi	r3,r2,-8
   2aae8:	010007c4 	movi	r4,31
   2aaec:	20c07716 	blt	r4,r3,2accc <__adddf3+0x378>
   2aaf0:	00800804 	movi	r2,32
   2aaf4:	10c5c83a 	sub	r2,r2,r3
   2aaf8:	8884d83a 	srl	r2,r17,r2
   2aafc:	98d0983a 	sll	r8,r19,r3
   2ab00:	88e2983a 	sll	r17,r17,r3
   2ab04:	1204b03a 	or	r2,r2,r8
   2ab08:	1c007416 	blt	r3,r16,2acdc <__adddf3+0x388>
   2ab0c:	1c21c83a 	sub	r16,r3,r16
   2ab10:	82000044 	addi	r8,r16,1
   2ab14:	00c007c4 	movi	r3,31
   2ab18:	1a009116 	blt	r3,r8,2ad60 <__adddf3+0x40c>
   2ab1c:	00c00804 	movi	r3,32
   2ab20:	1a07c83a 	sub	r3,r3,r8
   2ab24:	8a08d83a 	srl	r4,r17,r8
   2ab28:	88e2983a 	sll	r17,r17,r3
   2ab2c:	10c6983a 	sll	r3,r2,r3
   2ab30:	1210d83a 	srl	r8,r2,r8
   2ab34:	8804c03a 	cmpne	r2,r17,zero
   2ab38:	1906b03a 	or	r3,r3,r4
   2ab3c:	18a2b03a 	or	r17,r3,r2
   2ab40:	0021883a 	mov	r16,zero
   2ab44:	003fa206 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2ab48:	1890b03a 	or	r8,r3,r2
   2ab4c:	40017d26 	beq	r8,zero,2b144 <__adddf3+0x7f0>
   2ab50:	1011883a 	mov	r8,r2
   2ab54:	1823883a 	mov	r17,r3
   2ab58:	888001cc 	andi	r2,r17,7
   2ab5c:	103f9e1e 	bne	r2,zero,2a9d8 <__alt_data_end+0xfffea9d8>
   2ab60:	4004977a 	slli	r2,r8,29
   2ab64:	8822d0fa 	srli	r17,r17,3
   2ab68:	4010d0fa 	srli	r8,r8,3
   2ab6c:	9007883a 	mov	r3,r18
   2ab70:	1444b03a 	or	r2,r2,r17
   2ab74:	0101ffc4 	movi	r4,2047
   2ab78:	81002426 	beq	r16,r4,2ac0c <__adddf3+0x2b8>
   2ab7c:	8120703a 	and	r16,r16,r4
   2ab80:	01000434 	movhi	r4,16
   2ab84:	213fffc4 	addi	r4,r4,-1
   2ab88:	4110703a 	and	r8,r8,r4
   2ab8c:	003fa806 	br	2aa30 <__alt_data_end+0xfffeaa30>
   2ab90:	8089c83a 	sub	r4,r16,r2
   2ab94:	01005e0e 	bge	zero,r4,2ad10 <__adddf3+0x3bc>
   2ab98:	10002b26 	beq	r2,zero,2ac48 <__adddf3+0x2f4>
   2ab9c:	0081ffc4 	movi	r2,2047
   2aba0:	80bf8b26 	beq	r16,r2,2a9d0 <__alt_data_end+0xfffea9d0>
   2aba4:	4a402034 	orhi	r9,r9,128
   2aba8:	00800e04 	movi	r2,56
   2abac:	1100a40e 	bge	r2,r4,2ae40 <__adddf3+0x4ec>
   2abb0:	498cb03a 	or	r6,r9,r6
   2abb4:	300ac03a 	cmpne	r5,r6,zero
   2abb8:	0013883a 	mov	r9,zero
   2abbc:	2c4b883a 	add	r5,r5,r17
   2abc0:	2c63803a 	cmpltu	r17,r5,r17
   2abc4:	4a11883a 	add	r8,r9,r8
   2abc8:	8a11883a 	add	r8,r17,r8
   2abcc:	2823883a 	mov	r17,r5
   2abd0:	4080202c 	andhi	r2,r8,128
   2abd4:	103fe026 	beq	r2,zero,2ab58 <__alt_data_end+0xfffeab58>
   2abd8:	84000044 	addi	r16,r16,1
   2abdc:	0081ffc4 	movi	r2,2047
   2abe0:	8080d226 	beq	r16,r2,2af2c <__adddf3+0x5d8>
   2abe4:	00bfe034 	movhi	r2,65408
   2abe8:	10bfffc4 	addi	r2,r2,-1
   2abec:	4090703a 	and	r8,r8,r2
   2abf0:	880ad07a 	srli	r5,r17,1
   2abf4:	400897fa 	slli	r4,r8,31
   2abf8:	88c0004c 	andi	r3,r17,1
   2abfc:	28e2b03a 	or	r17,r5,r3
   2ac00:	4010d07a 	srli	r8,r8,1
   2ac04:	2462b03a 	or	r17,r4,r17
   2ac08:	003f7106 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2ac0c:	4088b03a 	or	r4,r8,r2
   2ac10:	20014526 	beq	r4,zero,2b128 <__adddf3+0x7d4>
   2ac14:	01000434 	movhi	r4,16
   2ac18:	42000234 	orhi	r8,r8,8
   2ac1c:	213fffc4 	addi	r4,r4,-1
   2ac20:	4110703a 	and	r8,r8,r4
   2ac24:	003f8206 	br	2aa30 <__alt_data_end+0xfffeaa30>
   2ac28:	18ffffc4 	addi	r3,r3,-1
   2ac2c:	1800491e 	bne	r3,zero,2ad54 <__adddf3+0x400>
   2ac30:	898bc83a 	sub	r5,r17,r6
   2ac34:	8963803a 	cmpltu	r17,r17,r5
   2ac38:	4251c83a 	sub	r8,r8,r9
   2ac3c:	4451c83a 	sub	r8,r8,r17
   2ac40:	2823883a 	mov	r17,r5
   2ac44:	003f9f06 	br	2aac4 <__alt_data_end+0xfffeaac4>
   2ac48:	4984b03a 	or	r2,r9,r6
   2ac4c:	103f6026 	beq	r2,zero,2a9d0 <__alt_data_end+0xfffea9d0>
   2ac50:	213fffc4 	addi	r4,r4,-1
   2ac54:	2000931e 	bne	r4,zero,2aea4 <__adddf3+0x550>
   2ac58:	898d883a 	add	r6,r17,r6
   2ac5c:	3463803a 	cmpltu	r17,r6,r17
   2ac60:	4251883a 	add	r8,r8,r9
   2ac64:	8a11883a 	add	r8,r17,r8
   2ac68:	3023883a 	mov	r17,r6
   2ac6c:	003fd806 	br	2abd0 <__alt_data_end+0xfffeabd0>
   2ac70:	1800541e 	bne	r3,zero,2adc4 <__adddf3+0x470>
   2ac74:	80800044 	addi	r2,r16,1
   2ac78:	1081ffcc 	andi	r2,r2,2047
   2ac7c:	00c00044 	movi	r3,1
   2ac80:	1880a00e 	bge	r3,r2,2af04 <__adddf3+0x5b0>
   2ac84:	8989c83a 	sub	r4,r17,r6
   2ac88:	8905803a 	cmpltu	r2,r17,r4
   2ac8c:	4267c83a 	sub	r19,r8,r9
   2ac90:	98a7c83a 	sub	r19,r19,r2
   2ac94:	9880202c 	andhi	r2,r19,128
   2ac98:	10006326 	beq	r2,zero,2ae28 <__adddf3+0x4d4>
   2ac9c:	3463c83a 	sub	r17,r6,r17
   2aca0:	4a07c83a 	sub	r3,r9,r8
   2aca4:	344d803a 	cmpltu	r6,r6,r17
   2aca8:	19a7c83a 	sub	r19,r3,r6
   2acac:	3825883a 	mov	r18,r7
   2acb0:	983f8a1e 	bne	r19,zero,2aadc <__alt_data_end+0xfffeaadc>
   2acb4:	8809883a 	mov	r4,r17
   2acb8:	002cf580 	call	2cf58 <__clzsi2>
   2acbc:	10800804 	addi	r2,r2,32
   2acc0:	10fffe04 	addi	r3,r2,-8
   2acc4:	010007c4 	movi	r4,31
   2acc8:	20ff890e 	bge	r4,r3,2aaf0 <__alt_data_end+0xfffeaaf0>
   2accc:	10bff604 	addi	r2,r2,-40
   2acd0:	8884983a 	sll	r2,r17,r2
   2acd4:	0023883a 	mov	r17,zero
   2acd8:	1c3f8c0e 	bge	r3,r16,2ab0c <__alt_data_end+0xfffeab0c>
   2acdc:	023fe034 	movhi	r8,65408
   2ace0:	423fffc4 	addi	r8,r8,-1
   2ace4:	80e1c83a 	sub	r16,r16,r3
   2ace8:	1210703a 	and	r8,r2,r8
   2acec:	003f3806 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2acf0:	9007883a 	mov	r3,r18
   2acf4:	0011883a 	mov	r8,zero
   2acf8:	0005883a 	mov	r2,zero
   2acfc:	003f4c06 	br	2aa30 <__alt_data_end+0xfffeaa30>
   2ad00:	498cb03a 	or	r6,r9,r6
   2ad04:	300cc03a 	cmpne	r6,r6,zero
   2ad08:	0007883a 	mov	r3,zero
   2ad0c:	003f6806 	br	2aab0 <__alt_data_end+0xfffeaab0>
   2ad10:	20009c1e 	bne	r4,zero,2af84 <__adddf3+0x630>
   2ad14:	80800044 	addi	r2,r16,1
   2ad18:	1141ffcc 	andi	r5,r2,2047
   2ad1c:	01000044 	movi	r4,1
   2ad20:	2140670e 	bge	r4,r5,2aec0 <__adddf3+0x56c>
   2ad24:	0101ffc4 	movi	r4,2047
   2ad28:	11007f26 	beq	r2,r4,2af28 <__adddf3+0x5d4>
   2ad2c:	898d883a 	add	r6,r17,r6
   2ad30:	4247883a 	add	r3,r8,r9
   2ad34:	3451803a 	cmpltu	r8,r6,r17
   2ad38:	40d1883a 	add	r8,r8,r3
   2ad3c:	402297fa 	slli	r17,r8,31
   2ad40:	300cd07a 	srli	r6,r6,1
   2ad44:	4010d07a 	srli	r8,r8,1
   2ad48:	1021883a 	mov	r16,r2
   2ad4c:	89a2b03a 	or	r17,r17,r6
   2ad50:	003f1f06 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2ad54:	0081ffc4 	movi	r2,2047
   2ad58:	80bf481e 	bne	r16,r2,2aa7c <__alt_data_end+0xfffeaa7c>
   2ad5c:	003f1c06 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2ad60:	843ff844 	addi	r16,r16,-31
   2ad64:	01000804 	movi	r4,32
   2ad68:	1406d83a 	srl	r3,r2,r16
   2ad6c:	41005026 	beq	r8,r4,2aeb0 <__adddf3+0x55c>
   2ad70:	01001004 	movi	r4,64
   2ad74:	2211c83a 	sub	r8,r4,r8
   2ad78:	1204983a 	sll	r2,r2,r8
   2ad7c:	88a2b03a 	or	r17,r17,r2
   2ad80:	8822c03a 	cmpne	r17,r17,zero
   2ad84:	1c62b03a 	or	r17,r3,r17
   2ad88:	0011883a 	mov	r8,zero
   2ad8c:	0021883a 	mov	r16,zero
   2ad90:	003f7106 	br	2ab58 <__alt_data_end+0xfffeab58>
   2ad94:	193ff804 	addi	r4,r3,-32
   2ad98:	00800804 	movi	r2,32
   2ad9c:	4908d83a 	srl	r4,r9,r4
   2ada0:	18804526 	beq	r3,r2,2aeb8 <__adddf3+0x564>
   2ada4:	00801004 	movi	r2,64
   2ada8:	10c5c83a 	sub	r2,r2,r3
   2adac:	4886983a 	sll	r3,r9,r2
   2adb0:	198cb03a 	or	r6,r3,r6
   2adb4:	300cc03a 	cmpne	r6,r6,zero
   2adb8:	218cb03a 	or	r6,r4,r6
   2adbc:	0007883a 	mov	r3,zero
   2adc0:	003f3b06 	br	2aab0 <__alt_data_end+0xfffeaab0>
   2adc4:	80002a26 	beq	r16,zero,2ae70 <__adddf3+0x51c>
   2adc8:	0101ffc4 	movi	r4,2047
   2adcc:	11006826 	beq	r2,r4,2af70 <__adddf3+0x61c>
   2add0:	00c7c83a 	sub	r3,zero,r3
   2add4:	42002034 	orhi	r8,r8,128
   2add8:	01000e04 	movi	r4,56
   2addc:	20c07c16 	blt	r4,r3,2afd0 <__adddf3+0x67c>
   2ade0:	010007c4 	movi	r4,31
   2ade4:	20c0da16 	blt	r4,r3,2b150 <__adddf3+0x7fc>
   2ade8:	01000804 	movi	r4,32
   2adec:	20c9c83a 	sub	r4,r4,r3
   2adf0:	4114983a 	sll	r10,r8,r4
   2adf4:	88cad83a 	srl	r5,r17,r3
   2adf8:	8908983a 	sll	r4,r17,r4
   2adfc:	40c6d83a 	srl	r3,r8,r3
   2ae00:	5162b03a 	or	r17,r10,r5
   2ae04:	2008c03a 	cmpne	r4,r4,zero
   2ae08:	8922b03a 	or	r17,r17,r4
   2ae0c:	3463c83a 	sub	r17,r6,r17
   2ae10:	48c7c83a 	sub	r3,r9,r3
   2ae14:	344d803a 	cmpltu	r6,r6,r17
   2ae18:	1991c83a 	sub	r8,r3,r6
   2ae1c:	1021883a 	mov	r16,r2
   2ae20:	3825883a 	mov	r18,r7
   2ae24:	003f2706 	br	2aac4 <__alt_data_end+0xfffeaac4>
   2ae28:	24d0b03a 	or	r8,r4,r19
   2ae2c:	40001b1e 	bne	r8,zero,2ae9c <__adddf3+0x548>
   2ae30:	0005883a 	mov	r2,zero
   2ae34:	0007883a 	mov	r3,zero
   2ae38:	0021883a 	mov	r16,zero
   2ae3c:	003f4d06 	br	2ab74 <__alt_data_end+0xfffeab74>
   2ae40:	008007c4 	movi	r2,31
   2ae44:	11003c16 	blt	r2,r4,2af38 <__adddf3+0x5e4>
   2ae48:	00800804 	movi	r2,32
   2ae4c:	1105c83a 	sub	r2,r2,r4
   2ae50:	488e983a 	sll	r7,r9,r2
   2ae54:	310ad83a 	srl	r5,r6,r4
   2ae58:	3084983a 	sll	r2,r6,r2
   2ae5c:	4912d83a 	srl	r9,r9,r4
   2ae60:	394ab03a 	or	r5,r7,r5
   2ae64:	1004c03a 	cmpne	r2,r2,zero
   2ae68:	288ab03a 	or	r5,r5,r2
   2ae6c:	003f5306 	br	2abbc <__alt_data_end+0xfffeabbc>
   2ae70:	4448b03a 	or	r4,r8,r17
   2ae74:	20003e26 	beq	r4,zero,2af70 <__adddf3+0x61c>
   2ae78:	00c6303a 	nor	r3,zero,r3
   2ae7c:	18003a1e 	bne	r3,zero,2af68 <__adddf3+0x614>
   2ae80:	3463c83a 	sub	r17,r6,r17
   2ae84:	4a07c83a 	sub	r3,r9,r8
   2ae88:	344d803a 	cmpltu	r6,r6,r17
   2ae8c:	1991c83a 	sub	r8,r3,r6
   2ae90:	1021883a 	mov	r16,r2
   2ae94:	3825883a 	mov	r18,r7
   2ae98:	003f0a06 	br	2aac4 <__alt_data_end+0xfffeaac4>
   2ae9c:	2023883a 	mov	r17,r4
   2aea0:	003f0d06 	br	2aad8 <__alt_data_end+0xfffeaad8>
   2aea4:	0081ffc4 	movi	r2,2047
   2aea8:	80bf3f1e 	bne	r16,r2,2aba8 <__alt_data_end+0xfffeaba8>
   2aeac:	003ec806 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2aeb0:	0005883a 	mov	r2,zero
   2aeb4:	003fb106 	br	2ad7c <__alt_data_end+0xfffead7c>
   2aeb8:	0007883a 	mov	r3,zero
   2aebc:	003fbc06 	br	2adb0 <__alt_data_end+0xfffeadb0>
   2aec0:	4444b03a 	or	r2,r8,r17
   2aec4:	8000871e 	bne	r16,zero,2b0e4 <__adddf3+0x790>
   2aec8:	1000ba26 	beq	r2,zero,2b1b4 <__adddf3+0x860>
   2aecc:	4984b03a 	or	r2,r9,r6
   2aed0:	103ebf26 	beq	r2,zero,2a9d0 <__alt_data_end+0xfffea9d0>
   2aed4:	8985883a 	add	r2,r17,r6
   2aed8:	4247883a 	add	r3,r8,r9
   2aedc:	1451803a 	cmpltu	r8,r2,r17
   2aee0:	40d1883a 	add	r8,r8,r3
   2aee4:	40c0202c 	andhi	r3,r8,128
   2aee8:	1023883a 	mov	r17,r2
   2aeec:	183f1a26 	beq	r3,zero,2ab58 <__alt_data_end+0xfffeab58>
   2aef0:	00bfe034 	movhi	r2,65408
   2aef4:	10bfffc4 	addi	r2,r2,-1
   2aef8:	2021883a 	mov	r16,r4
   2aefc:	4090703a 	and	r8,r8,r2
   2af00:	003eb306 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2af04:	4444b03a 	or	r2,r8,r17
   2af08:	8000291e 	bne	r16,zero,2afb0 <__adddf3+0x65c>
   2af0c:	10004b1e 	bne	r2,zero,2b03c <__adddf3+0x6e8>
   2af10:	4990b03a 	or	r8,r9,r6
   2af14:	40008b26 	beq	r8,zero,2b144 <__adddf3+0x7f0>
   2af18:	4811883a 	mov	r8,r9
   2af1c:	3023883a 	mov	r17,r6
   2af20:	3825883a 	mov	r18,r7
   2af24:	003eaa06 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2af28:	1021883a 	mov	r16,r2
   2af2c:	0011883a 	mov	r8,zero
   2af30:	0005883a 	mov	r2,zero
   2af34:	003f0f06 	br	2ab74 <__alt_data_end+0xfffeab74>
   2af38:	217ff804 	addi	r5,r4,-32
   2af3c:	00800804 	movi	r2,32
   2af40:	494ad83a 	srl	r5,r9,r5
   2af44:	20807d26 	beq	r4,r2,2b13c <__adddf3+0x7e8>
   2af48:	00801004 	movi	r2,64
   2af4c:	1109c83a 	sub	r4,r2,r4
   2af50:	4912983a 	sll	r9,r9,r4
   2af54:	498cb03a 	or	r6,r9,r6
   2af58:	300cc03a 	cmpne	r6,r6,zero
   2af5c:	298ab03a 	or	r5,r5,r6
   2af60:	0013883a 	mov	r9,zero
   2af64:	003f1506 	br	2abbc <__alt_data_end+0xfffeabbc>
   2af68:	0101ffc4 	movi	r4,2047
   2af6c:	113f9a1e 	bne	r2,r4,2add8 <__alt_data_end+0xfffeadd8>
   2af70:	4811883a 	mov	r8,r9
   2af74:	3023883a 	mov	r17,r6
   2af78:	1021883a 	mov	r16,r2
   2af7c:	3825883a 	mov	r18,r7
   2af80:	003e9306 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2af84:	8000161e 	bne	r16,zero,2afe0 <__adddf3+0x68c>
   2af88:	444ab03a 	or	r5,r8,r17
   2af8c:	28005126 	beq	r5,zero,2b0d4 <__adddf3+0x780>
   2af90:	0108303a 	nor	r4,zero,r4
   2af94:	20004d1e 	bne	r4,zero,2b0cc <__adddf3+0x778>
   2af98:	89a3883a 	add	r17,r17,r6
   2af9c:	4253883a 	add	r9,r8,r9
   2afa0:	898d803a 	cmpltu	r6,r17,r6
   2afa4:	3251883a 	add	r8,r6,r9
   2afa8:	1021883a 	mov	r16,r2
   2afac:	003f0806 	br	2abd0 <__alt_data_end+0xfffeabd0>
   2afb0:	1000301e 	bne	r2,zero,2b074 <__adddf3+0x720>
   2afb4:	4984b03a 	or	r2,r9,r6
   2afb8:	10007126 	beq	r2,zero,2b180 <__adddf3+0x82c>
   2afbc:	4811883a 	mov	r8,r9
   2afc0:	3023883a 	mov	r17,r6
   2afc4:	3825883a 	mov	r18,r7
   2afc8:	0401ffc4 	movi	r16,2047
   2afcc:	003e8006 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2afd0:	4462b03a 	or	r17,r8,r17
   2afd4:	8822c03a 	cmpne	r17,r17,zero
   2afd8:	0007883a 	mov	r3,zero
   2afdc:	003f8b06 	br	2ae0c <__alt_data_end+0xfffeae0c>
   2afe0:	0141ffc4 	movi	r5,2047
   2afe4:	11403b26 	beq	r2,r5,2b0d4 <__adddf3+0x780>
   2afe8:	0109c83a 	sub	r4,zero,r4
   2afec:	42002034 	orhi	r8,r8,128
   2aff0:	01400e04 	movi	r5,56
   2aff4:	29006716 	blt	r5,r4,2b194 <__adddf3+0x840>
   2aff8:	014007c4 	movi	r5,31
   2affc:	29007016 	blt	r5,r4,2b1c0 <__adddf3+0x86c>
   2b000:	01400804 	movi	r5,32
   2b004:	290bc83a 	sub	r5,r5,r4
   2b008:	4154983a 	sll	r10,r8,r5
   2b00c:	890ed83a 	srl	r7,r17,r4
   2b010:	894a983a 	sll	r5,r17,r5
   2b014:	4108d83a 	srl	r4,r8,r4
   2b018:	51e2b03a 	or	r17,r10,r7
   2b01c:	280ac03a 	cmpne	r5,r5,zero
   2b020:	8962b03a 	or	r17,r17,r5
   2b024:	89a3883a 	add	r17,r17,r6
   2b028:	2253883a 	add	r9,r4,r9
   2b02c:	898d803a 	cmpltu	r6,r17,r6
   2b030:	3251883a 	add	r8,r6,r9
   2b034:	1021883a 	mov	r16,r2
   2b038:	003ee506 	br	2abd0 <__alt_data_end+0xfffeabd0>
   2b03c:	4984b03a 	or	r2,r9,r6
   2b040:	103e6326 	beq	r2,zero,2a9d0 <__alt_data_end+0xfffea9d0>
   2b044:	8987c83a 	sub	r3,r17,r6
   2b048:	88c9803a 	cmpltu	r4,r17,r3
   2b04c:	4245c83a 	sub	r2,r8,r9
   2b050:	1105c83a 	sub	r2,r2,r4
   2b054:	1100202c 	andhi	r4,r2,128
   2b058:	203ebb26 	beq	r4,zero,2ab48 <__alt_data_end+0xfffeab48>
   2b05c:	3463c83a 	sub	r17,r6,r17
   2b060:	4a07c83a 	sub	r3,r9,r8
   2b064:	344d803a 	cmpltu	r6,r6,r17
   2b068:	1991c83a 	sub	r8,r3,r6
   2b06c:	3825883a 	mov	r18,r7
   2b070:	003e5706 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b074:	4984b03a 	or	r2,r9,r6
   2b078:	10002e26 	beq	r2,zero,2b134 <__adddf3+0x7e0>
   2b07c:	4004d0fa 	srli	r2,r8,3
   2b080:	8822d0fa 	srli	r17,r17,3
   2b084:	4010977a 	slli	r8,r8,29
   2b088:	10c0022c 	andhi	r3,r2,8
   2b08c:	4462b03a 	or	r17,r8,r17
   2b090:	18000826 	beq	r3,zero,2b0b4 <__adddf3+0x760>
   2b094:	4808d0fa 	srli	r4,r9,3
   2b098:	20c0022c 	andhi	r3,r4,8
   2b09c:	1800051e 	bne	r3,zero,2b0b4 <__adddf3+0x760>
   2b0a0:	300cd0fa 	srli	r6,r6,3
   2b0a4:	4806977a 	slli	r3,r9,29
   2b0a8:	2005883a 	mov	r2,r4
   2b0ac:	3825883a 	mov	r18,r7
   2b0b0:	19a2b03a 	or	r17,r3,r6
   2b0b4:	8810d77a 	srli	r8,r17,29
   2b0b8:	100490fa 	slli	r2,r2,3
   2b0bc:	882290fa 	slli	r17,r17,3
   2b0c0:	0401ffc4 	movi	r16,2047
   2b0c4:	4090b03a 	or	r8,r8,r2
   2b0c8:	003e4106 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b0cc:	0141ffc4 	movi	r5,2047
   2b0d0:	117fc71e 	bne	r2,r5,2aff0 <__alt_data_end+0xfffeaff0>
   2b0d4:	4811883a 	mov	r8,r9
   2b0d8:	3023883a 	mov	r17,r6
   2b0dc:	1021883a 	mov	r16,r2
   2b0e0:	003e3b06 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b0e4:	10002f26 	beq	r2,zero,2b1a4 <__adddf3+0x850>
   2b0e8:	4984b03a 	or	r2,r9,r6
   2b0ec:	10001126 	beq	r2,zero,2b134 <__adddf3+0x7e0>
   2b0f0:	4004d0fa 	srli	r2,r8,3
   2b0f4:	8822d0fa 	srli	r17,r17,3
   2b0f8:	4010977a 	slli	r8,r8,29
   2b0fc:	10c0022c 	andhi	r3,r2,8
   2b100:	4462b03a 	or	r17,r8,r17
   2b104:	183feb26 	beq	r3,zero,2b0b4 <__alt_data_end+0xfffeb0b4>
   2b108:	4808d0fa 	srli	r4,r9,3
   2b10c:	20c0022c 	andhi	r3,r4,8
   2b110:	183fe81e 	bne	r3,zero,2b0b4 <__alt_data_end+0xfffeb0b4>
   2b114:	300cd0fa 	srli	r6,r6,3
   2b118:	4806977a 	slli	r3,r9,29
   2b11c:	2005883a 	mov	r2,r4
   2b120:	19a2b03a 	or	r17,r3,r6
   2b124:	003fe306 	br	2b0b4 <__alt_data_end+0xfffeb0b4>
   2b128:	0011883a 	mov	r8,zero
   2b12c:	0005883a 	mov	r2,zero
   2b130:	003e3f06 	br	2aa30 <__alt_data_end+0xfffeaa30>
   2b134:	0401ffc4 	movi	r16,2047
   2b138:	003e2506 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b13c:	0013883a 	mov	r9,zero
   2b140:	003f8406 	br	2af54 <__alt_data_end+0xfffeaf54>
   2b144:	0005883a 	mov	r2,zero
   2b148:	0007883a 	mov	r3,zero
   2b14c:	003e8906 	br	2ab74 <__alt_data_end+0xfffeab74>
   2b150:	197ff804 	addi	r5,r3,-32
   2b154:	01000804 	movi	r4,32
   2b158:	414ad83a 	srl	r5,r8,r5
   2b15c:	19002426 	beq	r3,r4,2b1f0 <__adddf3+0x89c>
   2b160:	01001004 	movi	r4,64
   2b164:	20c7c83a 	sub	r3,r4,r3
   2b168:	40c6983a 	sll	r3,r8,r3
   2b16c:	1c46b03a 	or	r3,r3,r17
   2b170:	1806c03a 	cmpne	r3,r3,zero
   2b174:	28e2b03a 	or	r17,r5,r3
   2b178:	0007883a 	mov	r3,zero
   2b17c:	003f2306 	br	2ae0c <__alt_data_end+0xfffeae0c>
   2b180:	0007883a 	mov	r3,zero
   2b184:	5811883a 	mov	r8,r11
   2b188:	00bfffc4 	movi	r2,-1
   2b18c:	0401ffc4 	movi	r16,2047
   2b190:	003e7806 	br	2ab74 <__alt_data_end+0xfffeab74>
   2b194:	4462b03a 	or	r17,r8,r17
   2b198:	8822c03a 	cmpne	r17,r17,zero
   2b19c:	0009883a 	mov	r4,zero
   2b1a0:	003fa006 	br	2b024 <__alt_data_end+0xfffeb024>
   2b1a4:	4811883a 	mov	r8,r9
   2b1a8:	3023883a 	mov	r17,r6
   2b1ac:	0401ffc4 	movi	r16,2047
   2b1b0:	003e0706 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b1b4:	4811883a 	mov	r8,r9
   2b1b8:	3023883a 	mov	r17,r6
   2b1bc:	003e0406 	br	2a9d0 <__alt_data_end+0xfffea9d0>
   2b1c0:	21fff804 	addi	r7,r4,-32
   2b1c4:	01400804 	movi	r5,32
   2b1c8:	41ced83a 	srl	r7,r8,r7
   2b1cc:	21400a26 	beq	r4,r5,2b1f8 <__adddf3+0x8a4>
   2b1d0:	01401004 	movi	r5,64
   2b1d4:	2909c83a 	sub	r4,r5,r4
   2b1d8:	4108983a 	sll	r4,r8,r4
   2b1dc:	2448b03a 	or	r4,r4,r17
   2b1e0:	2008c03a 	cmpne	r4,r4,zero
   2b1e4:	3922b03a 	or	r17,r7,r4
   2b1e8:	0009883a 	mov	r4,zero
   2b1ec:	003f8d06 	br	2b024 <__alt_data_end+0xfffeb024>
   2b1f0:	0007883a 	mov	r3,zero
   2b1f4:	003fdd06 	br	2b16c <__alt_data_end+0xfffeb16c>
   2b1f8:	0009883a 	mov	r4,zero
   2b1fc:	003ff706 	br	2b1dc <__alt_data_end+0xfffeb1dc>

0002b200 <__divdf3>:
   2b200:	defff204 	addi	sp,sp,-56
   2b204:	dd400915 	stw	r21,36(sp)
   2b208:	282ad53a 	srli	r21,r5,20
   2b20c:	dd000815 	stw	r20,32(sp)
   2b210:	2828d7fa 	srli	r20,r5,31
   2b214:	dc000415 	stw	r16,16(sp)
   2b218:	04000434 	movhi	r16,16
   2b21c:	df000c15 	stw	fp,48(sp)
   2b220:	843fffc4 	addi	r16,r16,-1
   2b224:	dfc00d15 	stw	ra,52(sp)
   2b228:	ddc00b15 	stw	r23,44(sp)
   2b22c:	dd800a15 	stw	r22,40(sp)
   2b230:	dcc00715 	stw	r19,28(sp)
   2b234:	dc800615 	stw	r18,24(sp)
   2b238:	dc400515 	stw	r17,20(sp)
   2b23c:	ad41ffcc 	andi	r21,r21,2047
   2b240:	2c20703a 	and	r16,r5,r16
   2b244:	a7003fcc 	andi	fp,r20,255
   2b248:	a8006126 	beq	r21,zero,2b3d0 <__divdf3+0x1d0>
   2b24c:	0081ffc4 	movi	r2,2047
   2b250:	2025883a 	mov	r18,r4
   2b254:	a8803726 	beq	r21,r2,2b334 <__divdf3+0x134>
   2b258:	80800434 	orhi	r2,r16,16
   2b25c:	100490fa 	slli	r2,r2,3
   2b260:	2020d77a 	srli	r16,r4,29
   2b264:	202490fa 	slli	r18,r4,3
   2b268:	ad7f0044 	addi	r21,r21,-1023
   2b26c:	80a0b03a 	or	r16,r16,r2
   2b270:	0027883a 	mov	r19,zero
   2b274:	0013883a 	mov	r9,zero
   2b278:	3804d53a 	srli	r2,r7,20
   2b27c:	382cd7fa 	srli	r22,r7,31
   2b280:	04400434 	movhi	r17,16
   2b284:	8c7fffc4 	addi	r17,r17,-1
   2b288:	1081ffcc 	andi	r2,r2,2047
   2b28c:	3011883a 	mov	r8,r6
   2b290:	3c62703a 	and	r17,r7,r17
   2b294:	b5c03fcc 	andi	r23,r22,255
   2b298:	10006c26 	beq	r2,zero,2b44c <__divdf3+0x24c>
   2b29c:	00c1ffc4 	movi	r3,2047
   2b2a0:	10c06426 	beq	r2,r3,2b434 <__divdf3+0x234>
   2b2a4:	88c00434 	orhi	r3,r17,16
   2b2a8:	180690fa 	slli	r3,r3,3
   2b2ac:	3022d77a 	srli	r17,r6,29
   2b2b0:	301090fa 	slli	r8,r6,3
   2b2b4:	10bf0044 	addi	r2,r2,-1023
   2b2b8:	88e2b03a 	or	r17,r17,r3
   2b2bc:	000f883a 	mov	r7,zero
   2b2c0:	a58cf03a 	xor	r6,r20,r22
   2b2c4:	3cc8b03a 	or	r4,r7,r19
   2b2c8:	a8abc83a 	sub	r21,r21,r2
   2b2cc:	008003c4 	movi	r2,15
   2b2d0:	3007883a 	mov	r3,r6
   2b2d4:	34c03fcc 	andi	r19,r6,255
   2b2d8:	11009036 	bltu	r2,r4,2b51c <__divdf3+0x31c>
   2b2dc:	200890ba 	slli	r4,r4,2
   2b2e0:	008000f4 	movhi	r2,3
   2b2e4:	10acbd04 	addi	r2,r2,-19724
   2b2e8:	2089883a 	add	r4,r4,r2
   2b2ec:	20800017 	ldw	r2,0(r4)
   2b2f0:	1000683a 	jmp	r2
   2b2f4:	0002b51c 	xori	zero,zero,2772
   2b2f8:	0002b36c 	andhi	zero,zero,2765
   2b2fc:	0002b50c 	andi	zero,zero,2772
   2b300:	0002b360 	cmpeqi	zero,zero,2765
   2b304:	0002b50c 	andi	zero,zero,2772
   2b308:	0002b4e0 	cmpeqi	zero,zero,2771
   2b30c:	0002b50c 	andi	zero,zero,2772
   2b310:	0002b360 	cmpeqi	zero,zero,2765
   2b314:	0002b36c 	andhi	zero,zero,2765
   2b318:	0002b36c 	andhi	zero,zero,2765
   2b31c:	0002b4e0 	cmpeqi	zero,zero,2771
   2b320:	0002b360 	cmpeqi	zero,zero,2765
   2b324:	0002b350 	cmplti	zero,zero,2765
   2b328:	0002b350 	cmplti	zero,zero,2765
   2b32c:	0002b350 	cmplti	zero,zero,2765
   2b330:	0002b800 	call	2b80 <__alt_mem_onchip_memory2_0-0x1d480>
   2b334:	2404b03a 	or	r2,r4,r16
   2b338:	1000661e 	bne	r2,zero,2b4d4 <__divdf3+0x2d4>
   2b33c:	04c00204 	movi	r19,8
   2b340:	0021883a 	mov	r16,zero
   2b344:	0025883a 	mov	r18,zero
   2b348:	02400084 	movi	r9,2
   2b34c:	003fca06 	br	2b278 <__alt_data_end+0xfffeb278>
   2b350:	8023883a 	mov	r17,r16
   2b354:	9011883a 	mov	r8,r18
   2b358:	e02f883a 	mov	r23,fp
   2b35c:	480f883a 	mov	r7,r9
   2b360:	00800084 	movi	r2,2
   2b364:	3881311e 	bne	r7,r2,2b82c <__divdf3+0x62c>
   2b368:	b827883a 	mov	r19,r23
   2b36c:	98c0004c 	andi	r3,r19,1
   2b370:	0081ffc4 	movi	r2,2047
   2b374:	000b883a 	mov	r5,zero
   2b378:	0025883a 	mov	r18,zero
   2b37c:	1004953a 	slli	r2,r2,20
   2b380:	18c03fcc 	andi	r3,r3,255
   2b384:	04400434 	movhi	r17,16
   2b388:	8c7fffc4 	addi	r17,r17,-1
   2b38c:	180697fa 	slli	r3,r3,31
   2b390:	2c4a703a 	and	r5,r5,r17
   2b394:	288ab03a 	or	r5,r5,r2
   2b398:	28c6b03a 	or	r3,r5,r3
   2b39c:	9005883a 	mov	r2,r18
   2b3a0:	dfc00d17 	ldw	ra,52(sp)
   2b3a4:	df000c17 	ldw	fp,48(sp)
   2b3a8:	ddc00b17 	ldw	r23,44(sp)
   2b3ac:	dd800a17 	ldw	r22,40(sp)
   2b3b0:	dd400917 	ldw	r21,36(sp)
   2b3b4:	dd000817 	ldw	r20,32(sp)
   2b3b8:	dcc00717 	ldw	r19,28(sp)
   2b3bc:	dc800617 	ldw	r18,24(sp)
   2b3c0:	dc400517 	ldw	r17,20(sp)
   2b3c4:	dc000417 	ldw	r16,16(sp)
   2b3c8:	dec00e04 	addi	sp,sp,56
   2b3cc:	f800283a 	ret
   2b3d0:	2404b03a 	or	r2,r4,r16
   2b3d4:	2027883a 	mov	r19,r4
   2b3d8:	10003926 	beq	r2,zero,2b4c0 <__divdf3+0x2c0>
   2b3dc:	80012e26 	beq	r16,zero,2b898 <__divdf3+0x698>
   2b3e0:	8009883a 	mov	r4,r16
   2b3e4:	d9800315 	stw	r6,12(sp)
   2b3e8:	d9c00215 	stw	r7,8(sp)
   2b3ec:	002cf580 	call	2cf58 <__clzsi2>
   2b3f0:	d9800317 	ldw	r6,12(sp)
   2b3f4:	d9c00217 	ldw	r7,8(sp)
   2b3f8:	113ffd44 	addi	r4,r2,-11
   2b3fc:	00c00704 	movi	r3,28
   2b400:	19012116 	blt	r3,r4,2b888 <__divdf3+0x688>
   2b404:	00c00744 	movi	r3,29
   2b408:	147ffe04 	addi	r17,r2,-8
   2b40c:	1907c83a 	sub	r3,r3,r4
   2b410:	8460983a 	sll	r16,r16,r17
   2b414:	98c6d83a 	srl	r3,r19,r3
   2b418:	9c64983a 	sll	r18,r19,r17
   2b41c:	1c20b03a 	or	r16,r3,r16
   2b420:	1080fcc4 	addi	r2,r2,1011
   2b424:	00abc83a 	sub	r21,zero,r2
   2b428:	0027883a 	mov	r19,zero
   2b42c:	0013883a 	mov	r9,zero
   2b430:	003f9106 	br	2b278 <__alt_data_end+0xfffeb278>
   2b434:	3446b03a 	or	r3,r6,r17
   2b438:	18001f1e 	bne	r3,zero,2b4b8 <__divdf3+0x2b8>
   2b43c:	0023883a 	mov	r17,zero
   2b440:	0011883a 	mov	r8,zero
   2b444:	01c00084 	movi	r7,2
   2b448:	003f9d06 	br	2b2c0 <__alt_data_end+0xfffeb2c0>
   2b44c:	3446b03a 	or	r3,r6,r17
   2b450:	18001526 	beq	r3,zero,2b4a8 <__divdf3+0x2a8>
   2b454:	88011b26 	beq	r17,zero,2b8c4 <__divdf3+0x6c4>
   2b458:	8809883a 	mov	r4,r17
   2b45c:	d9800315 	stw	r6,12(sp)
   2b460:	da400115 	stw	r9,4(sp)
   2b464:	002cf580 	call	2cf58 <__clzsi2>
   2b468:	d9800317 	ldw	r6,12(sp)
   2b46c:	da400117 	ldw	r9,4(sp)
   2b470:	113ffd44 	addi	r4,r2,-11
   2b474:	00c00704 	movi	r3,28
   2b478:	19010e16 	blt	r3,r4,2b8b4 <__divdf3+0x6b4>
   2b47c:	00c00744 	movi	r3,29
   2b480:	123ffe04 	addi	r8,r2,-8
   2b484:	1907c83a 	sub	r3,r3,r4
   2b488:	8a22983a 	sll	r17,r17,r8
   2b48c:	30c6d83a 	srl	r3,r6,r3
   2b490:	3210983a 	sll	r8,r6,r8
   2b494:	1c62b03a 	or	r17,r3,r17
   2b498:	1080fcc4 	addi	r2,r2,1011
   2b49c:	0085c83a 	sub	r2,zero,r2
   2b4a0:	000f883a 	mov	r7,zero
   2b4a4:	003f8606 	br	2b2c0 <__alt_data_end+0xfffeb2c0>
   2b4a8:	0023883a 	mov	r17,zero
   2b4ac:	0011883a 	mov	r8,zero
   2b4b0:	01c00044 	movi	r7,1
   2b4b4:	003f8206 	br	2b2c0 <__alt_data_end+0xfffeb2c0>
   2b4b8:	01c000c4 	movi	r7,3
   2b4bc:	003f8006 	br	2b2c0 <__alt_data_end+0xfffeb2c0>
   2b4c0:	04c00104 	movi	r19,4
   2b4c4:	0021883a 	mov	r16,zero
   2b4c8:	0025883a 	mov	r18,zero
   2b4cc:	02400044 	movi	r9,1
   2b4d0:	003f6906 	br	2b278 <__alt_data_end+0xfffeb278>
   2b4d4:	04c00304 	movi	r19,12
   2b4d8:	024000c4 	movi	r9,3
   2b4dc:	003f6606 	br	2b278 <__alt_data_end+0xfffeb278>
   2b4e0:	01400434 	movhi	r5,16
   2b4e4:	0007883a 	mov	r3,zero
   2b4e8:	297fffc4 	addi	r5,r5,-1
   2b4ec:	04bfffc4 	movi	r18,-1
   2b4f0:	0081ffc4 	movi	r2,2047
   2b4f4:	003fa106 	br	2b37c <__alt_data_end+0xfffeb37c>
   2b4f8:	00c00044 	movi	r3,1
   2b4fc:	1887c83a 	sub	r3,r3,r2
   2b500:	01000e04 	movi	r4,56
   2b504:	20c1210e 	bge	r4,r3,2b98c <__divdf3+0x78c>
   2b508:	98c0004c 	andi	r3,r19,1
   2b50c:	0005883a 	mov	r2,zero
   2b510:	000b883a 	mov	r5,zero
   2b514:	0025883a 	mov	r18,zero
   2b518:	003f9806 	br	2b37c <__alt_data_end+0xfffeb37c>
   2b51c:	8c00fd36 	bltu	r17,r16,2b914 <__divdf3+0x714>
   2b520:	8440fb26 	beq	r16,r17,2b910 <__divdf3+0x710>
   2b524:	8007883a 	mov	r3,r16
   2b528:	ad7fffc4 	addi	r21,r21,-1
   2b52c:	0021883a 	mov	r16,zero
   2b530:	4004d63a 	srli	r2,r8,24
   2b534:	8822923a 	slli	r17,r17,8
   2b538:	1809883a 	mov	r4,r3
   2b53c:	402c923a 	slli	r22,r8,8
   2b540:	88b8b03a 	or	fp,r17,r2
   2b544:	e028d43a 	srli	r20,fp,16
   2b548:	d8c00015 	stw	r3,0(sp)
   2b54c:	e5ffffcc 	andi	r23,fp,65535
   2b550:	a00b883a 	mov	r5,r20
   2b554:	002a8980 	call	2a898 <__udivsi3>
   2b558:	d8c00017 	ldw	r3,0(sp)
   2b55c:	a00b883a 	mov	r5,r20
   2b560:	d8800315 	stw	r2,12(sp)
   2b564:	1809883a 	mov	r4,r3
   2b568:	002a8fc0 	call	2a8fc <__umodsi3>
   2b56c:	d9800317 	ldw	r6,12(sp)
   2b570:	1006943a 	slli	r3,r2,16
   2b574:	9004d43a 	srli	r2,r18,16
   2b578:	b9a3383a 	mul	r17,r23,r6
   2b57c:	10c4b03a 	or	r2,r2,r3
   2b580:	1440062e 	bgeu	r2,r17,2b59c <__divdf3+0x39c>
   2b584:	1705883a 	add	r2,r2,fp
   2b588:	30ffffc4 	addi	r3,r6,-1
   2b58c:	1700ee36 	bltu	r2,fp,2b948 <__divdf3+0x748>
   2b590:	1440ed2e 	bgeu	r2,r17,2b948 <__divdf3+0x748>
   2b594:	31bfff84 	addi	r6,r6,-2
   2b598:	1705883a 	add	r2,r2,fp
   2b59c:	1463c83a 	sub	r17,r2,r17
   2b5a0:	a00b883a 	mov	r5,r20
   2b5a4:	8809883a 	mov	r4,r17
   2b5a8:	d9800315 	stw	r6,12(sp)
   2b5ac:	002a8980 	call	2a898 <__udivsi3>
   2b5b0:	a00b883a 	mov	r5,r20
   2b5b4:	8809883a 	mov	r4,r17
   2b5b8:	d8800215 	stw	r2,8(sp)
   2b5bc:	002a8fc0 	call	2a8fc <__umodsi3>
   2b5c0:	d9c00217 	ldw	r7,8(sp)
   2b5c4:	1004943a 	slli	r2,r2,16
   2b5c8:	94bfffcc 	andi	r18,r18,65535
   2b5cc:	b9d1383a 	mul	r8,r23,r7
   2b5d0:	90a4b03a 	or	r18,r18,r2
   2b5d4:	d9800317 	ldw	r6,12(sp)
   2b5d8:	9200062e 	bgeu	r18,r8,2b5f4 <__divdf3+0x3f4>
   2b5dc:	9725883a 	add	r18,r18,fp
   2b5e0:	38bfffc4 	addi	r2,r7,-1
   2b5e4:	9700d636 	bltu	r18,fp,2b940 <__divdf3+0x740>
   2b5e8:	9200d52e 	bgeu	r18,r8,2b940 <__divdf3+0x740>
   2b5ec:	39ffff84 	addi	r7,r7,-2
   2b5f0:	9725883a 	add	r18,r18,fp
   2b5f4:	3004943a 	slli	r2,r6,16
   2b5f8:	b012d43a 	srli	r9,r22,16
   2b5fc:	b1bfffcc 	andi	r6,r22,65535
   2b600:	11e2b03a 	or	r17,r2,r7
   2b604:	8806d43a 	srli	r3,r17,16
   2b608:	893fffcc 	andi	r4,r17,65535
   2b60c:	218b383a 	mul	r5,r4,r6
   2b610:	30c5383a 	mul	r2,r6,r3
   2b614:	2249383a 	mul	r4,r4,r9
   2b618:	280ed43a 	srli	r7,r5,16
   2b61c:	9225c83a 	sub	r18,r18,r8
   2b620:	2089883a 	add	r4,r4,r2
   2b624:	3909883a 	add	r4,r7,r4
   2b628:	1a47383a 	mul	r3,r3,r9
   2b62c:	2080022e 	bgeu	r4,r2,2b638 <__divdf3+0x438>
   2b630:	00800074 	movhi	r2,1
   2b634:	1887883a 	add	r3,r3,r2
   2b638:	2004d43a 	srli	r2,r4,16
   2b63c:	2008943a 	slli	r4,r4,16
   2b640:	297fffcc 	andi	r5,r5,65535
   2b644:	10c7883a 	add	r3,r2,r3
   2b648:	2149883a 	add	r4,r4,r5
   2b64c:	90c0a536 	bltu	r18,r3,2b8e4 <__divdf3+0x6e4>
   2b650:	90c0bf26 	beq	r18,r3,2b950 <__divdf3+0x750>
   2b654:	90c7c83a 	sub	r3,r18,r3
   2b658:	810fc83a 	sub	r7,r16,r4
   2b65c:	81e5803a 	cmpltu	r18,r16,r7
   2b660:	1ca5c83a 	sub	r18,r3,r18
   2b664:	e480c126 	beq	fp,r18,2b96c <__divdf3+0x76c>
   2b668:	a00b883a 	mov	r5,r20
   2b66c:	9009883a 	mov	r4,r18
   2b670:	d9800315 	stw	r6,12(sp)
   2b674:	d9c00215 	stw	r7,8(sp)
   2b678:	da400115 	stw	r9,4(sp)
   2b67c:	002a8980 	call	2a898 <__udivsi3>
   2b680:	a00b883a 	mov	r5,r20
   2b684:	9009883a 	mov	r4,r18
   2b688:	d8800015 	stw	r2,0(sp)
   2b68c:	002a8fc0 	call	2a8fc <__umodsi3>
   2b690:	d9c00217 	ldw	r7,8(sp)
   2b694:	da000017 	ldw	r8,0(sp)
   2b698:	1006943a 	slli	r3,r2,16
   2b69c:	3804d43a 	srli	r2,r7,16
   2b6a0:	ba21383a 	mul	r16,r23,r8
   2b6a4:	d9800317 	ldw	r6,12(sp)
   2b6a8:	10c4b03a 	or	r2,r2,r3
   2b6ac:	da400117 	ldw	r9,4(sp)
   2b6b0:	1400062e 	bgeu	r2,r16,2b6cc <__divdf3+0x4cc>
   2b6b4:	1705883a 	add	r2,r2,fp
   2b6b8:	40ffffc4 	addi	r3,r8,-1
   2b6bc:	1700ad36 	bltu	r2,fp,2b974 <__divdf3+0x774>
   2b6c0:	1400ac2e 	bgeu	r2,r16,2b974 <__divdf3+0x774>
   2b6c4:	423fff84 	addi	r8,r8,-2
   2b6c8:	1705883a 	add	r2,r2,fp
   2b6cc:	1421c83a 	sub	r16,r2,r16
   2b6d0:	a00b883a 	mov	r5,r20
   2b6d4:	8009883a 	mov	r4,r16
   2b6d8:	d9800315 	stw	r6,12(sp)
   2b6dc:	d9c00215 	stw	r7,8(sp)
   2b6e0:	da000015 	stw	r8,0(sp)
   2b6e4:	da400115 	stw	r9,4(sp)
   2b6e8:	002a8980 	call	2a898 <__udivsi3>
   2b6ec:	8009883a 	mov	r4,r16
   2b6f0:	a00b883a 	mov	r5,r20
   2b6f4:	1025883a 	mov	r18,r2
   2b6f8:	002a8fc0 	call	2a8fc <__umodsi3>
   2b6fc:	d9c00217 	ldw	r7,8(sp)
   2b700:	1004943a 	slli	r2,r2,16
   2b704:	bcaf383a 	mul	r23,r23,r18
   2b708:	393fffcc 	andi	r4,r7,65535
   2b70c:	2088b03a 	or	r4,r4,r2
   2b710:	d9800317 	ldw	r6,12(sp)
   2b714:	da000017 	ldw	r8,0(sp)
   2b718:	da400117 	ldw	r9,4(sp)
   2b71c:	25c0062e 	bgeu	r4,r23,2b738 <__divdf3+0x538>
   2b720:	2709883a 	add	r4,r4,fp
   2b724:	90bfffc4 	addi	r2,r18,-1
   2b728:	27009436 	bltu	r4,fp,2b97c <__divdf3+0x77c>
   2b72c:	25c0932e 	bgeu	r4,r23,2b97c <__divdf3+0x77c>
   2b730:	94bfff84 	addi	r18,r18,-2
   2b734:	2709883a 	add	r4,r4,fp
   2b738:	4004943a 	slli	r2,r8,16
   2b73c:	25efc83a 	sub	r23,r4,r23
   2b740:	1490b03a 	or	r8,r2,r18
   2b744:	4008d43a 	srli	r4,r8,16
   2b748:	40ffffcc 	andi	r3,r8,65535
   2b74c:	30c5383a 	mul	r2,r6,r3
   2b750:	1a47383a 	mul	r3,r3,r9
   2b754:	310d383a 	mul	r6,r6,r4
   2b758:	100ad43a 	srli	r5,r2,16
   2b75c:	4913383a 	mul	r9,r9,r4
   2b760:	1987883a 	add	r3,r3,r6
   2b764:	28c7883a 	add	r3,r5,r3
   2b768:	1980022e 	bgeu	r3,r6,2b774 <__divdf3+0x574>
   2b76c:	01000074 	movhi	r4,1
   2b770:	4913883a 	add	r9,r9,r4
   2b774:	1808d43a 	srli	r4,r3,16
   2b778:	1806943a 	slli	r3,r3,16
   2b77c:	10bfffcc 	andi	r2,r2,65535
   2b780:	2253883a 	add	r9,r4,r9
   2b784:	1887883a 	add	r3,r3,r2
   2b788:	ba403836 	bltu	r23,r9,2b86c <__divdf3+0x66c>
   2b78c:	ba403626 	beq	r23,r9,2b868 <__divdf3+0x668>
   2b790:	42000054 	ori	r8,r8,1
   2b794:	a880ffc4 	addi	r2,r21,1023
   2b798:	00bf570e 	bge	zero,r2,2b4f8 <__alt_data_end+0xfffeb4f8>
   2b79c:	40c001cc 	andi	r3,r8,7
   2b7a0:	18000726 	beq	r3,zero,2b7c0 <__divdf3+0x5c0>
   2b7a4:	40c003cc 	andi	r3,r8,15
   2b7a8:	01000104 	movi	r4,4
   2b7ac:	19000426 	beq	r3,r4,2b7c0 <__divdf3+0x5c0>
   2b7b0:	4107883a 	add	r3,r8,r4
   2b7b4:	1a11803a 	cmpltu	r8,r3,r8
   2b7b8:	8a23883a 	add	r17,r17,r8
   2b7bc:	1811883a 	mov	r8,r3
   2b7c0:	88c0402c 	andhi	r3,r17,256
   2b7c4:	18000426 	beq	r3,zero,2b7d8 <__divdf3+0x5d8>
   2b7c8:	00ffc034 	movhi	r3,65280
   2b7cc:	18ffffc4 	addi	r3,r3,-1
   2b7d0:	a8810004 	addi	r2,r21,1024
   2b7d4:	88e2703a 	and	r17,r17,r3
   2b7d8:	00c1ff84 	movi	r3,2046
   2b7dc:	18bee316 	blt	r3,r2,2b36c <__alt_data_end+0xfffeb36c>
   2b7e0:	8824977a 	slli	r18,r17,29
   2b7e4:	4010d0fa 	srli	r8,r8,3
   2b7e8:	8822927a 	slli	r17,r17,9
   2b7ec:	1081ffcc 	andi	r2,r2,2047
   2b7f0:	9224b03a 	or	r18,r18,r8
   2b7f4:	880ad33a 	srli	r5,r17,12
   2b7f8:	98c0004c 	andi	r3,r19,1
   2b7fc:	003edf06 	br	2b37c <__alt_data_end+0xfffeb37c>
   2b800:	8080022c 	andhi	r2,r16,8
   2b804:	10001226 	beq	r2,zero,2b850 <__divdf3+0x650>
   2b808:	8880022c 	andhi	r2,r17,8
   2b80c:	1000101e 	bne	r2,zero,2b850 <__divdf3+0x650>
   2b810:	00800434 	movhi	r2,16
   2b814:	89400234 	orhi	r5,r17,8
   2b818:	10bfffc4 	addi	r2,r2,-1
   2b81c:	b007883a 	mov	r3,r22
   2b820:	288a703a 	and	r5,r5,r2
   2b824:	4025883a 	mov	r18,r8
   2b828:	003f3106 	br	2b4f0 <__alt_data_end+0xfffeb4f0>
   2b82c:	008000c4 	movi	r2,3
   2b830:	3880a626 	beq	r7,r2,2bacc <__divdf3+0x8cc>
   2b834:	00800044 	movi	r2,1
   2b838:	3880521e 	bne	r7,r2,2b984 <__divdf3+0x784>
   2b83c:	b807883a 	mov	r3,r23
   2b840:	0005883a 	mov	r2,zero
   2b844:	000b883a 	mov	r5,zero
   2b848:	0025883a 	mov	r18,zero
   2b84c:	003ecb06 	br	2b37c <__alt_data_end+0xfffeb37c>
   2b850:	00800434 	movhi	r2,16
   2b854:	81400234 	orhi	r5,r16,8
   2b858:	10bfffc4 	addi	r2,r2,-1
   2b85c:	a007883a 	mov	r3,r20
   2b860:	288a703a 	and	r5,r5,r2
   2b864:	003f2206 	br	2b4f0 <__alt_data_end+0xfffeb4f0>
   2b868:	183fca26 	beq	r3,zero,2b794 <__alt_data_end+0xfffeb794>
   2b86c:	e5ef883a 	add	r23,fp,r23
   2b870:	40bfffc4 	addi	r2,r8,-1
   2b874:	bf00392e 	bgeu	r23,fp,2b95c <__divdf3+0x75c>
   2b878:	1011883a 	mov	r8,r2
   2b87c:	ba7fc41e 	bne	r23,r9,2b790 <__alt_data_end+0xfffeb790>
   2b880:	b0ffc31e 	bne	r22,r3,2b790 <__alt_data_end+0xfffeb790>
   2b884:	003fc306 	br	2b794 <__alt_data_end+0xfffeb794>
   2b888:	143ff604 	addi	r16,r2,-40
   2b88c:	9c20983a 	sll	r16,r19,r16
   2b890:	0025883a 	mov	r18,zero
   2b894:	003ee206 	br	2b420 <__alt_data_end+0xfffeb420>
   2b898:	d9800315 	stw	r6,12(sp)
   2b89c:	d9c00215 	stw	r7,8(sp)
   2b8a0:	002cf580 	call	2cf58 <__clzsi2>
   2b8a4:	10800804 	addi	r2,r2,32
   2b8a8:	d9c00217 	ldw	r7,8(sp)
   2b8ac:	d9800317 	ldw	r6,12(sp)
   2b8b0:	003ed106 	br	2b3f8 <__alt_data_end+0xfffeb3f8>
   2b8b4:	147ff604 	addi	r17,r2,-40
   2b8b8:	3462983a 	sll	r17,r6,r17
   2b8bc:	0011883a 	mov	r8,zero
   2b8c0:	003ef506 	br	2b498 <__alt_data_end+0xfffeb498>
   2b8c4:	3009883a 	mov	r4,r6
   2b8c8:	d9800315 	stw	r6,12(sp)
   2b8cc:	da400115 	stw	r9,4(sp)
   2b8d0:	002cf580 	call	2cf58 <__clzsi2>
   2b8d4:	10800804 	addi	r2,r2,32
   2b8d8:	da400117 	ldw	r9,4(sp)
   2b8dc:	d9800317 	ldw	r6,12(sp)
   2b8e0:	003ee306 	br	2b470 <__alt_data_end+0xfffeb470>
   2b8e4:	85a1883a 	add	r16,r16,r22
   2b8e8:	8585803a 	cmpltu	r2,r16,r22
   2b8ec:	1705883a 	add	r2,r2,fp
   2b8f0:	14a5883a 	add	r18,r2,r18
   2b8f4:	88bfffc4 	addi	r2,r17,-1
   2b8f8:	e4800c2e 	bgeu	fp,r18,2b92c <__divdf3+0x72c>
   2b8fc:	90c03e36 	bltu	r18,r3,2b9f8 <__divdf3+0x7f8>
   2b900:	1c806926 	beq	r3,r18,2baa8 <__divdf3+0x8a8>
   2b904:	90c7c83a 	sub	r3,r18,r3
   2b908:	1023883a 	mov	r17,r2
   2b90c:	003f5206 	br	2b658 <__alt_data_end+0xfffeb658>
   2b910:	923f0436 	bltu	r18,r8,2b524 <__alt_data_end+0xfffeb524>
   2b914:	800897fa 	slli	r4,r16,31
   2b918:	9004d07a 	srli	r2,r18,1
   2b91c:	8006d07a 	srli	r3,r16,1
   2b920:	902097fa 	slli	r16,r18,31
   2b924:	20a4b03a 	or	r18,r4,r2
   2b928:	003f0106 	br	2b530 <__alt_data_end+0xfffeb530>
   2b92c:	e4bff51e 	bne	fp,r18,2b904 <__alt_data_end+0xfffeb904>
   2b930:	85bff22e 	bgeu	r16,r22,2b8fc <__alt_data_end+0xfffeb8fc>
   2b934:	e0c7c83a 	sub	r3,fp,r3
   2b938:	1023883a 	mov	r17,r2
   2b93c:	003f4606 	br	2b658 <__alt_data_end+0xfffeb658>
   2b940:	100f883a 	mov	r7,r2
   2b944:	003f2b06 	br	2b5f4 <__alt_data_end+0xfffeb5f4>
   2b948:	180d883a 	mov	r6,r3
   2b94c:	003f1306 	br	2b59c <__alt_data_end+0xfffeb59c>
   2b950:	813fe436 	bltu	r16,r4,2b8e4 <__alt_data_end+0xfffeb8e4>
   2b954:	0007883a 	mov	r3,zero
   2b958:	003f3f06 	br	2b658 <__alt_data_end+0xfffeb658>
   2b95c:	ba402c36 	bltu	r23,r9,2ba10 <__divdf3+0x810>
   2b960:	4dc05426 	beq	r9,r23,2bab4 <__divdf3+0x8b4>
   2b964:	1011883a 	mov	r8,r2
   2b968:	003f8906 	br	2b790 <__alt_data_end+0xfffeb790>
   2b96c:	023fffc4 	movi	r8,-1
   2b970:	003f8806 	br	2b794 <__alt_data_end+0xfffeb794>
   2b974:	1811883a 	mov	r8,r3
   2b978:	003f5406 	br	2b6cc <__alt_data_end+0xfffeb6cc>
   2b97c:	1025883a 	mov	r18,r2
   2b980:	003f6d06 	br	2b738 <__alt_data_end+0xfffeb738>
   2b984:	b827883a 	mov	r19,r23
   2b988:	003f8206 	br	2b794 <__alt_data_end+0xfffeb794>
   2b98c:	010007c4 	movi	r4,31
   2b990:	20c02616 	blt	r4,r3,2ba2c <__divdf3+0x82c>
   2b994:	00800804 	movi	r2,32
   2b998:	10c5c83a 	sub	r2,r2,r3
   2b99c:	888a983a 	sll	r5,r17,r2
   2b9a0:	40c8d83a 	srl	r4,r8,r3
   2b9a4:	4084983a 	sll	r2,r8,r2
   2b9a8:	88e2d83a 	srl	r17,r17,r3
   2b9ac:	2906b03a 	or	r3,r5,r4
   2b9b0:	1004c03a 	cmpne	r2,r2,zero
   2b9b4:	1886b03a 	or	r3,r3,r2
   2b9b8:	188001cc 	andi	r2,r3,7
   2b9bc:	10000726 	beq	r2,zero,2b9dc <__divdf3+0x7dc>
   2b9c0:	188003cc 	andi	r2,r3,15
   2b9c4:	01000104 	movi	r4,4
   2b9c8:	11000426 	beq	r2,r4,2b9dc <__divdf3+0x7dc>
   2b9cc:	1805883a 	mov	r2,r3
   2b9d0:	10c00104 	addi	r3,r2,4
   2b9d4:	1885803a 	cmpltu	r2,r3,r2
   2b9d8:	88a3883a 	add	r17,r17,r2
   2b9dc:	8880202c 	andhi	r2,r17,128
   2b9e0:	10002726 	beq	r2,zero,2ba80 <__divdf3+0x880>
   2b9e4:	98c0004c 	andi	r3,r19,1
   2b9e8:	00800044 	movi	r2,1
   2b9ec:	000b883a 	mov	r5,zero
   2b9f0:	0025883a 	mov	r18,zero
   2b9f4:	003e6106 	br	2b37c <__alt_data_end+0xfffeb37c>
   2b9f8:	85a1883a 	add	r16,r16,r22
   2b9fc:	8585803a 	cmpltu	r2,r16,r22
   2ba00:	1705883a 	add	r2,r2,fp
   2ba04:	14a5883a 	add	r18,r2,r18
   2ba08:	8c7fff84 	addi	r17,r17,-2
   2ba0c:	003f1106 	br	2b654 <__alt_data_end+0xfffeb654>
   2ba10:	b589883a 	add	r4,r22,r22
   2ba14:	25ad803a 	cmpltu	r22,r4,r22
   2ba18:	b739883a 	add	fp,r22,fp
   2ba1c:	40bfff84 	addi	r2,r8,-2
   2ba20:	bf2f883a 	add	r23,r23,fp
   2ba24:	202d883a 	mov	r22,r4
   2ba28:	003f9306 	br	2b878 <__alt_data_end+0xfffeb878>
   2ba2c:	013ff844 	movi	r4,-31
   2ba30:	2085c83a 	sub	r2,r4,r2
   2ba34:	8888d83a 	srl	r4,r17,r2
   2ba38:	00800804 	movi	r2,32
   2ba3c:	18802126 	beq	r3,r2,2bac4 <__divdf3+0x8c4>
   2ba40:	00801004 	movi	r2,64
   2ba44:	10c5c83a 	sub	r2,r2,r3
   2ba48:	8884983a 	sll	r2,r17,r2
   2ba4c:	1204b03a 	or	r2,r2,r8
   2ba50:	1004c03a 	cmpne	r2,r2,zero
   2ba54:	2084b03a 	or	r2,r4,r2
   2ba58:	144001cc 	andi	r17,r2,7
   2ba5c:	88000d1e 	bne	r17,zero,2ba94 <__divdf3+0x894>
   2ba60:	000b883a 	mov	r5,zero
   2ba64:	1024d0fa 	srli	r18,r2,3
   2ba68:	98c0004c 	andi	r3,r19,1
   2ba6c:	0005883a 	mov	r2,zero
   2ba70:	9464b03a 	or	r18,r18,r17
   2ba74:	003e4106 	br	2b37c <__alt_data_end+0xfffeb37c>
   2ba78:	1007883a 	mov	r3,r2
   2ba7c:	0023883a 	mov	r17,zero
   2ba80:	880a927a 	slli	r5,r17,9
   2ba84:	1805883a 	mov	r2,r3
   2ba88:	8822977a 	slli	r17,r17,29
   2ba8c:	280ad33a 	srli	r5,r5,12
   2ba90:	003ff406 	br	2ba64 <__alt_data_end+0xfffeba64>
   2ba94:	10c003cc 	andi	r3,r2,15
   2ba98:	01000104 	movi	r4,4
   2ba9c:	193ff626 	beq	r3,r4,2ba78 <__alt_data_end+0xfffeba78>
   2baa0:	0023883a 	mov	r17,zero
   2baa4:	003fca06 	br	2b9d0 <__alt_data_end+0xfffeb9d0>
   2baa8:	813fd336 	bltu	r16,r4,2b9f8 <__alt_data_end+0xfffeb9f8>
   2baac:	1023883a 	mov	r17,r2
   2bab0:	003fa806 	br	2b954 <__alt_data_end+0xfffeb954>
   2bab4:	b0ffd636 	bltu	r22,r3,2ba10 <__alt_data_end+0xfffeba10>
   2bab8:	1011883a 	mov	r8,r2
   2babc:	b0ff341e 	bne	r22,r3,2b790 <__alt_data_end+0xfffeb790>
   2bac0:	003f3406 	br	2b794 <__alt_data_end+0xfffeb794>
   2bac4:	0005883a 	mov	r2,zero
   2bac8:	003fe006 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2bacc:	00800434 	movhi	r2,16
   2bad0:	89400234 	orhi	r5,r17,8
   2bad4:	10bfffc4 	addi	r2,r2,-1
   2bad8:	b807883a 	mov	r3,r23
   2badc:	288a703a 	and	r5,r5,r2
   2bae0:	4025883a 	mov	r18,r8
   2bae4:	003e8206 	br	2b4f0 <__alt_data_end+0xfffeb4f0>

0002bae8 <__eqdf2>:
   2bae8:	2804d53a 	srli	r2,r5,20
   2baec:	3806d53a 	srli	r3,r7,20
   2baf0:	02000434 	movhi	r8,16
   2baf4:	423fffc4 	addi	r8,r8,-1
   2baf8:	1081ffcc 	andi	r2,r2,2047
   2bafc:	0281ffc4 	movi	r10,2047
   2bb00:	2a12703a 	and	r9,r5,r8
   2bb04:	18c1ffcc 	andi	r3,r3,2047
   2bb08:	3a10703a 	and	r8,r7,r8
   2bb0c:	280ad7fa 	srli	r5,r5,31
   2bb10:	380ed7fa 	srli	r7,r7,31
   2bb14:	12801026 	beq	r2,r10,2bb58 <__eqdf2+0x70>
   2bb18:	0281ffc4 	movi	r10,2047
   2bb1c:	1a800a26 	beq	r3,r10,2bb48 <__eqdf2+0x60>
   2bb20:	10c00226 	beq	r2,r3,2bb2c <__eqdf2+0x44>
   2bb24:	00800044 	movi	r2,1
   2bb28:	f800283a 	ret
   2bb2c:	4a3ffd1e 	bne	r9,r8,2bb24 <__alt_data_end+0xfffebb24>
   2bb30:	21bffc1e 	bne	r4,r6,2bb24 <__alt_data_end+0xfffebb24>
   2bb34:	29c00c26 	beq	r5,r7,2bb68 <__eqdf2+0x80>
   2bb38:	103ffa1e 	bne	r2,zero,2bb24 <__alt_data_end+0xfffebb24>
   2bb3c:	2244b03a 	or	r2,r4,r9
   2bb40:	1004c03a 	cmpne	r2,r2,zero
   2bb44:	f800283a 	ret
   2bb48:	3214b03a 	or	r10,r6,r8
   2bb4c:	503ff426 	beq	r10,zero,2bb20 <__alt_data_end+0xfffebb20>
   2bb50:	00800044 	movi	r2,1
   2bb54:	f800283a 	ret
   2bb58:	2254b03a 	or	r10,r4,r9
   2bb5c:	503fee26 	beq	r10,zero,2bb18 <__alt_data_end+0xfffebb18>
   2bb60:	00800044 	movi	r2,1
   2bb64:	f800283a 	ret
   2bb68:	0005883a 	mov	r2,zero
   2bb6c:	f800283a 	ret

0002bb70 <__gedf2>:
   2bb70:	2804d53a 	srli	r2,r5,20
   2bb74:	3806d53a 	srli	r3,r7,20
   2bb78:	02000434 	movhi	r8,16
   2bb7c:	423fffc4 	addi	r8,r8,-1
   2bb80:	1081ffcc 	andi	r2,r2,2047
   2bb84:	0241ffc4 	movi	r9,2047
   2bb88:	2a14703a 	and	r10,r5,r8
   2bb8c:	18c1ffcc 	andi	r3,r3,2047
   2bb90:	3a10703a 	and	r8,r7,r8
   2bb94:	280ad7fa 	srli	r5,r5,31
   2bb98:	380ed7fa 	srli	r7,r7,31
   2bb9c:	12401d26 	beq	r2,r9,2bc14 <__gedf2+0xa4>
   2bba0:	0241ffc4 	movi	r9,2047
   2bba4:	1a401226 	beq	r3,r9,2bbf0 <__gedf2+0x80>
   2bba8:	1000081e 	bne	r2,zero,2bbcc <__gedf2+0x5c>
   2bbac:	2296b03a 	or	r11,r4,r10
   2bbb0:	5813003a 	cmpeq	r9,r11,zero
   2bbb4:	1800091e 	bne	r3,zero,2bbdc <__gedf2+0x6c>
   2bbb8:	3218b03a 	or	r12,r6,r8
   2bbbc:	6000071e 	bne	r12,zero,2bbdc <__gedf2+0x6c>
   2bbc0:	0005883a 	mov	r2,zero
   2bbc4:	5800101e 	bne	r11,zero,2bc08 <__gedf2+0x98>
   2bbc8:	f800283a 	ret
   2bbcc:	18000c1e 	bne	r3,zero,2bc00 <__gedf2+0x90>
   2bbd0:	3212b03a 	or	r9,r6,r8
   2bbd4:	48000c26 	beq	r9,zero,2bc08 <__gedf2+0x98>
   2bbd8:	0013883a 	mov	r9,zero
   2bbdc:	39c03fcc 	andi	r7,r7,255
   2bbe0:	48000826 	beq	r9,zero,2bc04 <__gedf2+0x94>
   2bbe4:	38000926 	beq	r7,zero,2bc0c <__gedf2+0x9c>
   2bbe8:	00800044 	movi	r2,1
   2bbec:	f800283a 	ret
   2bbf0:	3212b03a 	or	r9,r6,r8
   2bbf4:	483fec26 	beq	r9,zero,2bba8 <__alt_data_end+0xfffebba8>
   2bbf8:	00bfff84 	movi	r2,-2
   2bbfc:	f800283a 	ret
   2bc00:	39c03fcc 	andi	r7,r7,255
   2bc04:	29c00626 	beq	r5,r7,2bc20 <__gedf2+0xb0>
   2bc08:	283ff726 	beq	r5,zero,2bbe8 <__alt_data_end+0xfffebbe8>
   2bc0c:	00bfffc4 	movi	r2,-1
   2bc10:	f800283a 	ret
   2bc14:	2292b03a 	or	r9,r4,r10
   2bc18:	483fe126 	beq	r9,zero,2bba0 <__alt_data_end+0xfffebba0>
   2bc1c:	003ff606 	br	2bbf8 <__alt_data_end+0xfffebbf8>
   2bc20:	18bff916 	blt	r3,r2,2bc08 <__alt_data_end+0xfffebc08>
   2bc24:	10c00316 	blt	r2,r3,2bc34 <__gedf2+0xc4>
   2bc28:	42bff736 	bltu	r8,r10,2bc08 <__alt_data_end+0xfffebc08>
   2bc2c:	52000326 	beq	r10,r8,2bc3c <__gedf2+0xcc>
   2bc30:	5200042e 	bgeu	r10,r8,2bc44 <__gedf2+0xd4>
   2bc34:	283fec1e 	bne	r5,zero,2bbe8 <__alt_data_end+0xfffebbe8>
   2bc38:	003ff406 	br	2bc0c <__alt_data_end+0xfffebc0c>
   2bc3c:	313ff236 	bltu	r6,r4,2bc08 <__alt_data_end+0xfffebc08>
   2bc40:	21bffc36 	bltu	r4,r6,2bc34 <__alt_data_end+0xfffebc34>
   2bc44:	0005883a 	mov	r2,zero
   2bc48:	f800283a 	ret

0002bc4c <__ledf2>:
   2bc4c:	2804d53a 	srli	r2,r5,20
   2bc50:	3810d53a 	srli	r8,r7,20
   2bc54:	00c00434 	movhi	r3,16
   2bc58:	18ffffc4 	addi	r3,r3,-1
   2bc5c:	1081ffcc 	andi	r2,r2,2047
   2bc60:	0241ffc4 	movi	r9,2047
   2bc64:	28d4703a 	and	r10,r5,r3
   2bc68:	4201ffcc 	andi	r8,r8,2047
   2bc6c:	38c6703a 	and	r3,r7,r3
   2bc70:	280ad7fa 	srli	r5,r5,31
   2bc74:	380ed7fa 	srli	r7,r7,31
   2bc78:	12401f26 	beq	r2,r9,2bcf8 <__ledf2+0xac>
   2bc7c:	0241ffc4 	movi	r9,2047
   2bc80:	42401426 	beq	r8,r9,2bcd4 <__ledf2+0x88>
   2bc84:	1000091e 	bne	r2,zero,2bcac <__ledf2+0x60>
   2bc88:	2296b03a 	or	r11,r4,r10
   2bc8c:	5813003a 	cmpeq	r9,r11,zero
   2bc90:	29403fcc 	andi	r5,r5,255
   2bc94:	40000a1e 	bne	r8,zero,2bcc0 <__ledf2+0x74>
   2bc98:	30d8b03a 	or	r12,r6,r3
   2bc9c:	6000081e 	bne	r12,zero,2bcc0 <__ledf2+0x74>
   2bca0:	0005883a 	mov	r2,zero
   2bca4:	5800111e 	bne	r11,zero,2bcec <__ledf2+0xa0>
   2bca8:	f800283a 	ret
   2bcac:	29403fcc 	andi	r5,r5,255
   2bcb0:	40000c1e 	bne	r8,zero,2bce4 <__ledf2+0x98>
   2bcb4:	30d2b03a 	or	r9,r6,r3
   2bcb8:	48000c26 	beq	r9,zero,2bcec <__ledf2+0xa0>
   2bcbc:	0013883a 	mov	r9,zero
   2bcc0:	39c03fcc 	andi	r7,r7,255
   2bcc4:	48000826 	beq	r9,zero,2bce8 <__ledf2+0x9c>
   2bcc8:	38001126 	beq	r7,zero,2bd10 <__ledf2+0xc4>
   2bccc:	00800044 	movi	r2,1
   2bcd0:	f800283a 	ret
   2bcd4:	30d2b03a 	or	r9,r6,r3
   2bcd8:	483fea26 	beq	r9,zero,2bc84 <__alt_data_end+0xfffebc84>
   2bcdc:	00800084 	movi	r2,2
   2bce0:	f800283a 	ret
   2bce4:	39c03fcc 	andi	r7,r7,255
   2bce8:	39400726 	beq	r7,r5,2bd08 <__ledf2+0xbc>
   2bcec:	2800081e 	bne	r5,zero,2bd10 <__ledf2+0xc4>
   2bcf0:	00800044 	movi	r2,1
   2bcf4:	f800283a 	ret
   2bcf8:	2292b03a 	or	r9,r4,r10
   2bcfc:	483fdf26 	beq	r9,zero,2bc7c <__alt_data_end+0xfffebc7c>
   2bd00:	00800084 	movi	r2,2
   2bd04:	f800283a 	ret
   2bd08:	4080030e 	bge	r8,r2,2bd18 <__ledf2+0xcc>
   2bd0c:	383fef26 	beq	r7,zero,2bccc <__alt_data_end+0xfffebccc>
   2bd10:	00bfffc4 	movi	r2,-1
   2bd14:	f800283a 	ret
   2bd18:	123feb16 	blt	r2,r8,2bcc8 <__alt_data_end+0xfffebcc8>
   2bd1c:	1abff336 	bltu	r3,r10,2bcec <__alt_data_end+0xfffebcec>
   2bd20:	50c00326 	beq	r10,r3,2bd30 <__ledf2+0xe4>
   2bd24:	50c0042e 	bgeu	r10,r3,2bd38 <__ledf2+0xec>
   2bd28:	283fe81e 	bne	r5,zero,2bccc <__alt_data_end+0xfffebccc>
   2bd2c:	003ff806 	br	2bd10 <__alt_data_end+0xfffebd10>
   2bd30:	313fee36 	bltu	r6,r4,2bcec <__alt_data_end+0xfffebcec>
   2bd34:	21bffc36 	bltu	r4,r6,2bd28 <__alt_data_end+0xfffebd28>
   2bd38:	0005883a 	mov	r2,zero
   2bd3c:	f800283a 	ret

0002bd40 <__muldf3>:
   2bd40:	defff304 	addi	sp,sp,-52
   2bd44:	2804d53a 	srli	r2,r5,20
   2bd48:	dd800915 	stw	r22,36(sp)
   2bd4c:	282cd7fa 	srli	r22,r5,31
   2bd50:	dc000315 	stw	r16,12(sp)
   2bd54:	04000434 	movhi	r16,16
   2bd58:	dd400815 	stw	r21,32(sp)
   2bd5c:	dc800515 	stw	r18,20(sp)
   2bd60:	843fffc4 	addi	r16,r16,-1
   2bd64:	dfc00c15 	stw	ra,48(sp)
   2bd68:	df000b15 	stw	fp,44(sp)
   2bd6c:	ddc00a15 	stw	r23,40(sp)
   2bd70:	dd000715 	stw	r20,28(sp)
   2bd74:	dcc00615 	stw	r19,24(sp)
   2bd78:	dc400415 	stw	r17,16(sp)
   2bd7c:	1481ffcc 	andi	r18,r2,2047
   2bd80:	2c20703a 	and	r16,r5,r16
   2bd84:	b02b883a 	mov	r21,r22
   2bd88:	b2403fcc 	andi	r9,r22,255
   2bd8c:	90006026 	beq	r18,zero,2bf10 <__muldf3+0x1d0>
   2bd90:	0081ffc4 	movi	r2,2047
   2bd94:	2029883a 	mov	r20,r4
   2bd98:	90803626 	beq	r18,r2,2be74 <__muldf3+0x134>
   2bd9c:	80800434 	orhi	r2,r16,16
   2bda0:	100490fa 	slli	r2,r2,3
   2bda4:	2020d77a 	srli	r16,r4,29
   2bda8:	202890fa 	slli	r20,r4,3
   2bdac:	94bf0044 	addi	r18,r18,-1023
   2bdb0:	80a0b03a 	or	r16,r16,r2
   2bdb4:	0027883a 	mov	r19,zero
   2bdb8:	0039883a 	mov	fp,zero
   2bdbc:	3804d53a 	srli	r2,r7,20
   2bdc0:	382ed7fa 	srli	r23,r7,31
   2bdc4:	04400434 	movhi	r17,16
   2bdc8:	8c7fffc4 	addi	r17,r17,-1
   2bdcc:	1081ffcc 	andi	r2,r2,2047
   2bdd0:	3011883a 	mov	r8,r6
   2bdd4:	3c62703a 	and	r17,r7,r17
   2bdd8:	ba803fcc 	andi	r10,r23,255
   2bddc:	10006d26 	beq	r2,zero,2bf94 <__muldf3+0x254>
   2bde0:	00c1ffc4 	movi	r3,2047
   2bde4:	10c06526 	beq	r2,r3,2bf7c <__muldf3+0x23c>
   2bde8:	88c00434 	orhi	r3,r17,16
   2bdec:	180690fa 	slli	r3,r3,3
   2bdf0:	3022d77a 	srli	r17,r6,29
   2bdf4:	301090fa 	slli	r8,r6,3
   2bdf8:	10bf0044 	addi	r2,r2,-1023
   2bdfc:	88e2b03a 	or	r17,r17,r3
   2be00:	000b883a 	mov	r5,zero
   2be04:	9085883a 	add	r2,r18,r2
   2be08:	2cc8b03a 	or	r4,r5,r19
   2be0c:	00c003c4 	movi	r3,15
   2be10:	bdacf03a 	xor	r22,r23,r22
   2be14:	12c00044 	addi	r11,r2,1
   2be18:	19009936 	bltu	r3,r4,2c080 <__muldf3+0x340>
   2be1c:	200890ba 	slli	r4,r4,2
   2be20:	00c000f4 	movhi	r3,3
   2be24:	18ef8d04 	addi	r3,r3,-16844
   2be28:	20c9883a 	add	r4,r4,r3
   2be2c:	20c00017 	ldw	r3,0(r4)
   2be30:	1800683a 	jmp	r3
   2be34:	0002c080 	call	2c08 <__alt_mem_onchip_memory2_0-0x1d3f8>
   2be38:	0002be94 	movui	zero,2810
   2be3c:	0002be94 	movui	zero,2810
   2be40:	0002be90 	cmplti	zero,zero,2810
   2be44:	0002c05c 	xori	zero,zero,2817
   2be48:	0002c05c 	xori	zero,zero,2817
   2be4c:	0002c044 	movi	zero,2817
   2be50:	0002be90 	cmplti	zero,zero,2810
   2be54:	0002c05c 	xori	zero,zero,2817
   2be58:	0002c044 	movi	zero,2817
   2be5c:	0002c05c 	xori	zero,zero,2817
   2be60:	0002be90 	cmplti	zero,zero,2810
   2be64:	0002c06c 	andhi	zero,zero,2817
   2be68:	0002c06c 	andhi	zero,zero,2817
   2be6c:	0002c06c 	andhi	zero,zero,2817
   2be70:	0002c288 	cmpgei	zero,zero,2826
   2be74:	2404b03a 	or	r2,r4,r16
   2be78:	10006f1e 	bne	r2,zero,2c038 <__muldf3+0x2f8>
   2be7c:	04c00204 	movi	r19,8
   2be80:	0021883a 	mov	r16,zero
   2be84:	0029883a 	mov	r20,zero
   2be88:	07000084 	movi	fp,2
   2be8c:	003fcb06 	br	2bdbc <__alt_data_end+0xfffebdbc>
   2be90:	502d883a 	mov	r22,r10
   2be94:	00800084 	movi	r2,2
   2be98:	28805726 	beq	r5,r2,2bff8 <__muldf3+0x2b8>
   2be9c:	008000c4 	movi	r2,3
   2bea0:	28816626 	beq	r5,r2,2c43c <__muldf3+0x6fc>
   2bea4:	00800044 	movi	r2,1
   2bea8:	2881411e 	bne	r5,r2,2c3b0 <__muldf3+0x670>
   2beac:	b02b883a 	mov	r21,r22
   2beb0:	0005883a 	mov	r2,zero
   2beb4:	000b883a 	mov	r5,zero
   2beb8:	0029883a 	mov	r20,zero
   2bebc:	1004953a 	slli	r2,r2,20
   2bec0:	a8c03fcc 	andi	r3,r21,255
   2bec4:	04400434 	movhi	r17,16
   2bec8:	8c7fffc4 	addi	r17,r17,-1
   2becc:	180697fa 	slli	r3,r3,31
   2bed0:	2c4a703a 	and	r5,r5,r17
   2bed4:	288ab03a 	or	r5,r5,r2
   2bed8:	28c6b03a 	or	r3,r5,r3
   2bedc:	a005883a 	mov	r2,r20
   2bee0:	dfc00c17 	ldw	ra,48(sp)
   2bee4:	df000b17 	ldw	fp,44(sp)
   2bee8:	ddc00a17 	ldw	r23,40(sp)
   2beec:	dd800917 	ldw	r22,36(sp)
   2bef0:	dd400817 	ldw	r21,32(sp)
   2bef4:	dd000717 	ldw	r20,28(sp)
   2bef8:	dcc00617 	ldw	r19,24(sp)
   2befc:	dc800517 	ldw	r18,20(sp)
   2bf00:	dc400417 	ldw	r17,16(sp)
   2bf04:	dc000317 	ldw	r16,12(sp)
   2bf08:	dec00d04 	addi	sp,sp,52
   2bf0c:	f800283a 	ret
   2bf10:	2404b03a 	or	r2,r4,r16
   2bf14:	2027883a 	mov	r19,r4
   2bf18:	10004226 	beq	r2,zero,2c024 <__muldf3+0x2e4>
   2bf1c:	8000fc26 	beq	r16,zero,2c310 <__muldf3+0x5d0>
   2bf20:	8009883a 	mov	r4,r16
   2bf24:	d9800215 	stw	r6,8(sp)
   2bf28:	d9c00015 	stw	r7,0(sp)
   2bf2c:	da400115 	stw	r9,4(sp)
   2bf30:	002cf580 	call	2cf58 <__clzsi2>
   2bf34:	d9800217 	ldw	r6,8(sp)
   2bf38:	d9c00017 	ldw	r7,0(sp)
   2bf3c:	da400117 	ldw	r9,4(sp)
   2bf40:	113ffd44 	addi	r4,r2,-11
   2bf44:	00c00704 	movi	r3,28
   2bf48:	1900ed16 	blt	r3,r4,2c300 <__muldf3+0x5c0>
   2bf4c:	00c00744 	movi	r3,29
   2bf50:	147ffe04 	addi	r17,r2,-8
   2bf54:	1907c83a 	sub	r3,r3,r4
   2bf58:	8460983a 	sll	r16,r16,r17
   2bf5c:	98c6d83a 	srl	r3,r19,r3
   2bf60:	9c68983a 	sll	r20,r19,r17
   2bf64:	1c20b03a 	or	r16,r3,r16
   2bf68:	1080fcc4 	addi	r2,r2,1011
   2bf6c:	00a5c83a 	sub	r18,zero,r2
   2bf70:	0027883a 	mov	r19,zero
   2bf74:	0039883a 	mov	fp,zero
   2bf78:	003f9006 	br	2bdbc <__alt_data_end+0xfffebdbc>
   2bf7c:	3446b03a 	or	r3,r6,r17
   2bf80:	1800261e 	bne	r3,zero,2c01c <__muldf3+0x2dc>
   2bf84:	0023883a 	mov	r17,zero
   2bf88:	0011883a 	mov	r8,zero
   2bf8c:	01400084 	movi	r5,2
   2bf90:	003f9c06 	br	2be04 <__alt_data_end+0xfffebe04>
   2bf94:	3446b03a 	or	r3,r6,r17
   2bf98:	18001c26 	beq	r3,zero,2c00c <__muldf3+0x2cc>
   2bf9c:	8800ce26 	beq	r17,zero,2c2d8 <__muldf3+0x598>
   2bfa0:	8809883a 	mov	r4,r17
   2bfa4:	d9800215 	stw	r6,8(sp)
   2bfa8:	da400115 	stw	r9,4(sp)
   2bfac:	da800015 	stw	r10,0(sp)
   2bfb0:	002cf580 	call	2cf58 <__clzsi2>
   2bfb4:	d9800217 	ldw	r6,8(sp)
   2bfb8:	da400117 	ldw	r9,4(sp)
   2bfbc:	da800017 	ldw	r10,0(sp)
   2bfc0:	113ffd44 	addi	r4,r2,-11
   2bfc4:	00c00704 	movi	r3,28
   2bfc8:	1900bf16 	blt	r3,r4,2c2c8 <__muldf3+0x588>
   2bfcc:	00c00744 	movi	r3,29
   2bfd0:	123ffe04 	addi	r8,r2,-8
   2bfd4:	1907c83a 	sub	r3,r3,r4
   2bfd8:	8a22983a 	sll	r17,r17,r8
   2bfdc:	30c6d83a 	srl	r3,r6,r3
   2bfe0:	3210983a 	sll	r8,r6,r8
   2bfe4:	1c62b03a 	or	r17,r3,r17
   2bfe8:	1080fcc4 	addi	r2,r2,1011
   2bfec:	0085c83a 	sub	r2,zero,r2
   2bff0:	000b883a 	mov	r5,zero
   2bff4:	003f8306 	br	2be04 <__alt_data_end+0xfffebe04>
   2bff8:	b02b883a 	mov	r21,r22
   2bffc:	0081ffc4 	movi	r2,2047
   2c000:	000b883a 	mov	r5,zero
   2c004:	0029883a 	mov	r20,zero
   2c008:	003fac06 	br	2bebc <__alt_data_end+0xfffebebc>
   2c00c:	0023883a 	mov	r17,zero
   2c010:	0011883a 	mov	r8,zero
   2c014:	01400044 	movi	r5,1
   2c018:	003f7a06 	br	2be04 <__alt_data_end+0xfffebe04>
   2c01c:	014000c4 	movi	r5,3
   2c020:	003f7806 	br	2be04 <__alt_data_end+0xfffebe04>
   2c024:	04c00104 	movi	r19,4
   2c028:	0021883a 	mov	r16,zero
   2c02c:	0029883a 	mov	r20,zero
   2c030:	07000044 	movi	fp,1
   2c034:	003f6106 	br	2bdbc <__alt_data_end+0xfffebdbc>
   2c038:	04c00304 	movi	r19,12
   2c03c:	070000c4 	movi	fp,3
   2c040:	003f5e06 	br	2bdbc <__alt_data_end+0xfffebdbc>
   2c044:	01400434 	movhi	r5,16
   2c048:	002b883a 	mov	r21,zero
   2c04c:	297fffc4 	addi	r5,r5,-1
   2c050:	053fffc4 	movi	r20,-1
   2c054:	0081ffc4 	movi	r2,2047
   2c058:	003f9806 	br	2bebc <__alt_data_end+0xfffebebc>
   2c05c:	8023883a 	mov	r17,r16
   2c060:	a011883a 	mov	r8,r20
   2c064:	e00b883a 	mov	r5,fp
   2c068:	003f8a06 	br	2be94 <__alt_data_end+0xfffebe94>
   2c06c:	8023883a 	mov	r17,r16
   2c070:	a011883a 	mov	r8,r20
   2c074:	482d883a 	mov	r22,r9
   2c078:	e00b883a 	mov	r5,fp
   2c07c:	003f8506 	br	2be94 <__alt_data_end+0xfffebe94>
   2c080:	a00ad43a 	srli	r5,r20,16
   2c084:	401ad43a 	srli	r13,r8,16
   2c088:	a53fffcc 	andi	r20,r20,65535
   2c08c:	423fffcc 	andi	r8,r8,65535
   2c090:	4519383a 	mul	r12,r8,r20
   2c094:	4147383a 	mul	r3,r8,r5
   2c098:	6d09383a 	mul	r4,r13,r20
   2c09c:	600cd43a 	srli	r6,r12,16
   2c0a0:	2b5d383a 	mul	r14,r5,r13
   2c0a4:	20c9883a 	add	r4,r4,r3
   2c0a8:	310d883a 	add	r6,r6,r4
   2c0ac:	30c0022e 	bgeu	r6,r3,2c0b8 <__muldf3+0x378>
   2c0b0:	00c00074 	movhi	r3,1
   2c0b4:	70dd883a 	add	r14,r14,r3
   2c0b8:	8826d43a 	srli	r19,r17,16
   2c0bc:	8bffffcc 	andi	r15,r17,65535
   2c0c0:	7d23383a 	mul	r17,r15,r20
   2c0c4:	7949383a 	mul	r4,r15,r5
   2c0c8:	9d29383a 	mul	r20,r19,r20
   2c0cc:	8814d43a 	srli	r10,r17,16
   2c0d0:	3012943a 	slli	r9,r6,16
   2c0d4:	a129883a 	add	r20,r20,r4
   2c0d8:	633fffcc 	andi	r12,r12,65535
   2c0dc:	5515883a 	add	r10,r10,r20
   2c0e0:	3006d43a 	srli	r3,r6,16
   2c0e4:	4b13883a 	add	r9,r9,r12
   2c0e8:	2ccb383a 	mul	r5,r5,r19
   2c0ec:	5100022e 	bgeu	r10,r4,2c0f8 <__muldf3+0x3b8>
   2c0f0:	01000074 	movhi	r4,1
   2c0f4:	290b883a 	add	r5,r5,r4
   2c0f8:	802ad43a 	srli	r21,r16,16
   2c0fc:	843fffcc 	andi	r16,r16,65535
   2c100:	440d383a 	mul	r6,r8,r16
   2c104:	4565383a 	mul	r18,r8,r21
   2c108:	8349383a 	mul	r4,r16,r13
   2c10c:	500e943a 	slli	r7,r10,16
   2c110:	3010d43a 	srli	r8,r6,16
   2c114:	5028d43a 	srli	r20,r10,16
   2c118:	2489883a 	add	r4,r4,r18
   2c11c:	8abfffcc 	andi	r10,r17,65535
   2c120:	3a95883a 	add	r10,r7,r10
   2c124:	4119883a 	add	r12,r8,r4
   2c128:	a169883a 	add	r20,r20,r5
   2c12c:	1a87883a 	add	r3,r3,r10
   2c130:	6d5b383a 	mul	r13,r13,r21
   2c134:	6480022e 	bgeu	r12,r18,2c140 <__muldf3+0x400>
   2c138:	01000074 	movhi	r4,1
   2c13c:	691b883a 	add	r13,r13,r4
   2c140:	7c25383a 	mul	r18,r15,r16
   2c144:	7d4b383a 	mul	r5,r15,r21
   2c148:	84cf383a 	mul	r7,r16,r19
   2c14c:	901ed43a 	srli	r15,r18,16
   2c150:	6008d43a 	srli	r4,r12,16
   2c154:	6010943a 	slli	r8,r12,16
   2c158:	394f883a 	add	r7,r7,r5
   2c15c:	333fffcc 	andi	r12,r6,65535
   2c160:	79df883a 	add	r15,r15,r7
   2c164:	235b883a 	add	r13,r4,r13
   2c168:	9d63383a 	mul	r17,r19,r21
   2c16c:	4309883a 	add	r4,r8,r12
   2c170:	7940022e 	bgeu	r15,r5,2c17c <__muldf3+0x43c>
   2c174:	01400074 	movhi	r5,1
   2c178:	8963883a 	add	r17,r17,r5
   2c17c:	780a943a 	slli	r5,r15,16
   2c180:	91bfffcc 	andi	r6,r18,65535
   2c184:	70c7883a 	add	r3,r14,r3
   2c188:	298d883a 	add	r6,r5,r6
   2c18c:	1a8f803a 	cmpltu	r7,r3,r10
   2c190:	350b883a 	add	r5,r6,r20
   2c194:	20c7883a 	add	r3,r4,r3
   2c198:	3955883a 	add	r10,r7,r5
   2c19c:	1909803a 	cmpltu	r4,r3,r4
   2c1a0:	6a91883a 	add	r8,r13,r10
   2c1a4:	780cd43a 	srli	r6,r15,16
   2c1a8:	2219883a 	add	r12,r4,r8
   2c1ac:	2d0b803a 	cmpltu	r5,r5,r20
   2c1b0:	51cf803a 	cmpltu	r7,r10,r7
   2c1b4:	29ceb03a 	or	r7,r5,r7
   2c1b8:	4351803a 	cmpltu	r8,r8,r13
   2c1bc:	610b803a 	cmpltu	r5,r12,r4
   2c1c0:	4148b03a 	or	r4,r8,r5
   2c1c4:	398f883a 	add	r7,r7,r6
   2c1c8:	3909883a 	add	r4,r7,r4
   2c1cc:	1810927a 	slli	r8,r3,9
   2c1d0:	2449883a 	add	r4,r4,r17
   2c1d4:	2008927a 	slli	r4,r4,9
   2c1d8:	6022d5fa 	srli	r17,r12,23
   2c1dc:	1806d5fa 	srli	r3,r3,23
   2c1e0:	4252b03a 	or	r9,r8,r9
   2c1e4:	600a927a 	slli	r5,r12,9
   2c1e8:	4810c03a 	cmpne	r8,r9,zero
   2c1ec:	2462b03a 	or	r17,r4,r17
   2c1f0:	40c6b03a 	or	r3,r8,r3
   2c1f4:	8900402c 	andhi	r4,r17,256
   2c1f8:	1950b03a 	or	r8,r3,r5
   2c1fc:	20000726 	beq	r4,zero,2c21c <__muldf3+0x4dc>
   2c200:	4006d07a 	srli	r3,r8,1
   2c204:	880497fa 	slli	r2,r17,31
   2c208:	4200004c 	andi	r8,r8,1
   2c20c:	8822d07a 	srli	r17,r17,1
   2c210:	1a10b03a 	or	r8,r3,r8
   2c214:	1210b03a 	or	r8,r2,r8
   2c218:	5805883a 	mov	r2,r11
   2c21c:	1140ffc4 	addi	r5,r2,1023
   2c220:	0140440e 	bge	zero,r5,2c334 <__muldf3+0x5f4>
   2c224:	40c001cc 	andi	r3,r8,7
   2c228:	18000726 	beq	r3,zero,2c248 <__muldf3+0x508>
   2c22c:	40c003cc 	andi	r3,r8,15
   2c230:	01000104 	movi	r4,4
   2c234:	19000426 	beq	r3,r4,2c248 <__muldf3+0x508>
   2c238:	4107883a 	add	r3,r8,r4
   2c23c:	1a11803a 	cmpltu	r8,r3,r8
   2c240:	8a23883a 	add	r17,r17,r8
   2c244:	1811883a 	mov	r8,r3
   2c248:	88c0402c 	andhi	r3,r17,256
   2c24c:	18000426 	beq	r3,zero,2c260 <__muldf3+0x520>
   2c250:	11410004 	addi	r5,r2,1024
   2c254:	00bfc034 	movhi	r2,65280
   2c258:	10bfffc4 	addi	r2,r2,-1
   2c25c:	88a2703a 	and	r17,r17,r2
   2c260:	0081ff84 	movi	r2,2046
   2c264:	117f6416 	blt	r2,r5,2bff8 <__alt_data_end+0xfffebff8>
   2c268:	8828977a 	slli	r20,r17,29
   2c26c:	4010d0fa 	srli	r8,r8,3
   2c270:	8822927a 	slli	r17,r17,9
   2c274:	2881ffcc 	andi	r2,r5,2047
   2c278:	a228b03a 	or	r20,r20,r8
   2c27c:	880ad33a 	srli	r5,r17,12
   2c280:	b02b883a 	mov	r21,r22
   2c284:	003f0d06 	br	2bebc <__alt_data_end+0xfffebebc>
   2c288:	8080022c 	andhi	r2,r16,8
   2c28c:	10000926 	beq	r2,zero,2c2b4 <__muldf3+0x574>
   2c290:	8880022c 	andhi	r2,r17,8
   2c294:	1000071e 	bne	r2,zero,2c2b4 <__muldf3+0x574>
   2c298:	00800434 	movhi	r2,16
   2c29c:	89400234 	orhi	r5,r17,8
   2c2a0:	10bfffc4 	addi	r2,r2,-1
   2c2a4:	b82b883a 	mov	r21,r23
   2c2a8:	288a703a 	and	r5,r5,r2
   2c2ac:	4029883a 	mov	r20,r8
   2c2b0:	003f6806 	br	2c054 <__alt_data_end+0xfffec054>
   2c2b4:	00800434 	movhi	r2,16
   2c2b8:	81400234 	orhi	r5,r16,8
   2c2bc:	10bfffc4 	addi	r2,r2,-1
   2c2c0:	288a703a 	and	r5,r5,r2
   2c2c4:	003f6306 	br	2c054 <__alt_data_end+0xfffec054>
   2c2c8:	147ff604 	addi	r17,r2,-40
   2c2cc:	3462983a 	sll	r17,r6,r17
   2c2d0:	0011883a 	mov	r8,zero
   2c2d4:	003f4406 	br	2bfe8 <__alt_data_end+0xfffebfe8>
   2c2d8:	3009883a 	mov	r4,r6
   2c2dc:	d9800215 	stw	r6,8(sp)
   2c2e0:	da400115 	stw	r9,4(sp)
   2c2e4:	da800015 	stw	r10,0(sp)
   2c2e8:	002cf580 	call	2cf58 <__clzsi2>
   2c2ec:	10800804 	addi	r2,r2,32
   2c2f0:	da800017 	ldw	r10,0(sp)
   2c2f4:	da400117 	ldw	r9,4(sp)
   2c2f8:	d9800217 	ldw	r6,8(sp)
   2c2fc:	003f3006 	br	2bfc0 <__alt_data_end+0xfffebfc0>
   2c300:	143ff604 	addi	r16,r2,-40
   2c304:	9c20983a 	sll	r16,r19,r16
   2c308:	0029883a 	mov	r20,zero
   2c30c:	003f1606 	br	2bf68 <__alt_data_end+0xfffebf68>
   2c310:	d9800215 	stw	r6,8(sp)
   2c314:	d9c00015 	stw	r7,0(sp)
   2c318:	da400115 	stw	r9,4(sp)
   2c31c:	002cf580 	call	2cf58 <__clzsi2>
   2c320:	10800804 	addi	r2,r2,32
   2c324:	da400117 	ldw	r9,4(sp)
   2c328:	d9c00017 	ldw	r7,0(sp)
   2c32c:	d9800217 	ldw	r6,8(sp)
   2c330:	003f0306 	br	2bf40 <__alt_data_end+0xfffebf40>
   2c334:	00c00044 	movi	r3,1
   2c338:	1947c83a 	sub	r3,r3,r5
   2c33c:	00800e04 	movi	r2,56
   2c340:	10feda16 	blt	r2,r3,2beac <__alt_data_end+0xfffebeac>
   2c344:	008007c4 	movi	r2,31
   2c348:	10c01b16 	blt	r2,r3,2c3b8 <__muldf3+0x678>
   2c34c:	00800804 	movi	r2,32
   2c350:	10c5c83a 	sub	r2,r2,r3
   2c354:	888a983a 	sll	r5,r17,r2
   2c358:	40c8d83a 	srl	r4,r8,r3
   2c35c:	4084983a 	sll	r2,r8,r2
   2c360:	88e2d83a 	srl	r17,r17,r3
   2c364:	2906b03a 	or	r3,r5,r4
   2c368:	1004c03a 	cmpne	r2,r2,zero
   2c36c:	1886b03a 	or	r3,r3,r2
   2c370:	188001cc 	andi	r2,r3,7
   2c374:	10000726 	beq	r2,zero,2c394 <__muldf3+0x654>
   2c378:	188003cc 	andi	r2,r3,15
   2c37c:	01000104 	movi	r4,4
   2c380:	11000426 	beq	r2,r4,2c394 <__muldf3+0x654>
   2c384:	1805883a 	mov	r2,r3
   2c388:	10c00104 	addi	r3,r2,4
   2c38c:	1885803a 	cmpltu	r2,r3,r2
   2c390:	88a3883a 	add	r17,r17,r2
   2c394:	8880202c 	andhi	r2,r17,128
   2c398:	10001c26 	beq	r2,zero,2c40c <__muldf3+0x6cc>
   2c39c:	b02b883a 	mov	r21,r22
   2c3a0:	00800044 	movi	r2,1
   2c3a4:	000b883a 	mov	r5,zero
   2c3a8:	0029883a 	mov	r20,zero
   2c3ac:	003ec306 	br	2bebc <__alt_data_end+0xfffebebc>
   2c3b0:	5805883a 	mov	r2,r11
   2c3b4:	003f9906 	br	2c21c <__alt_data_end+0xfffec21c>
   2c3b8:	00bff844 	movi	r2,-31
   2c3bc:	1145c83a 	sub	r2,r2,r5
   2c3c0:	8888d83a 	srl	r4,r17,r2
   2c3c4:	00800804 	movi	r2,32
   2c3c8:	18801a26 	beq	r3,r2,2c434 <__muldf3+0x6f4>
   2c3cc:	00801004 	movi	r2,64
   2c3d0:	10c5c83a 	sub	r2,r2,r3
   2c3d4:	8884983a 	sll	r2,r17,r2
   2c3d8:	1204b03a 	or	r2,r2,r8
   2c3dc:	1004c03a 	cmpne	r2,r2,zero
   2c3e0:	2084b03a 	or	r2,r4,r2
   2c3e4:	144001cc 	andi	r17,r2,7
   2c3e8:	88000d1e 	bne	r17,zero,2c420 <__muldf3+0x6e0>
   2c3ec:	000b883a 	mov	r5,zero
   2c3f0:	1028d0fa 	srli	r20,r2,3
   2c3f4:	b02b883a 	mov	r21,r22
   2c3f8:	0005883a 	mov	r2,zero
   2c3fc:	a468b03a 	or	r20,r20,r17
   2c400:	003eae06 	br	2bebc <__alt_data_end+0xfffebebc>
   2c404:	1007883a 	mov	r3,r2
   2c408:	0023883a 	mov	r17,zero
   2c40c:	880a927a 	slli	r5,r17,9
   2c410:	1805883a 	mov	r2,r3
   2c414:	8822977a 	slli	r17,r17,29
   2c418:	280ad33a 	srli	r5,r5,12
   2c41c:	003ff406 	br	2c3f0 <__alt_data_end+0xfffec3f0>
   2c420:	10c003cc 	andi	r3,r2,15
   2c424:	01000104 	movi	r4,4
   2c428:	193ff626 	beq	r3,r4,2c404 <__alt_data_end+0xfffec404>
   2c42c:	0023883a 	mov	r17,zero
   2c430:	003fd506 	br	2c388 <__alt_data_end+0xfffec388>
   2c434:	0005883a 	mov	r2,zero
   2c438:	003fe706 	br	2c3d8 <__alt_data_end+0xfffec3d8>
   2c43c:	00800434 	movhi	r2,16
   2c440:	89400234 	orhi	r5,r17,8
   2c444:	10bfffc4 	addi	r2,r2,-1
   2c448:	b02b883a 	mov	r21,r22
   2c44c:	288a703a 	and	r5,r5,r2
   2c450:	4029883a 	mov	r20,r8
   2c454:	003eff06 	br	2c054 <__alt_data_end+0xfffec054>

0002c458 <__subdf3>:
   2c458:	02000434 	movhi	r8,16
   2c45c:	423fffc4 	addi	r8,r8,-1
   2c460:	defffb04 	addi	sp,sp,-20
   2c464:	2a14703a 	and	r10,r5,r8
   2c468:	3812d53a 	srli	r9,r7,20
   2c46c:	3a10703a 	and	r8,r7,r8
   2c470:	2006d77a 	srli	r3,r4,29
   2c474:	3004d77a 	srli	r2,r6,29
   2c478:	dc000015 	stw	r16,0(sp)
   2c47c:	501490fa 	slli	r10,r10,3
   2c480:	2820d53a 	srli	r16,r5,20
   2c484:	401090fa 	slli	r8,r8,3
   2c488:	dc800215 	stw	r18,8(sp)
   2c48c:	dc400115 	stw	r17,4(sp)
   2c490:	dfc00415 	stw	ra,16(sp)
   2c494:	202290fa 	slli	r17,r4,3
   2c498:	dcc00315 	stw	r19,12(sp)
   2c49c:	4a41ffcc 	andi	r9,r9,2047
   2c4a0:	0101ffc4 	movi	r4,2047
   2c4a4:	2824d7fa 	srli	r18,r5,31
   2c4a8:	8401ffcc 	andi	r16,r16,2047
   2c4ac:	50c6b03a 	or	r3,r10,r3
   2c4b0:	380ed7fa 	srli	r7,r7,31
   2c4b4:	408ab03a 	or	r5,r8,r2
   2c4b8:	300c90fa 	slli	r6,r6,3
   2c4bc:	49009626 	beq	r9,r4,2c718 <__subdf3+0x2c0>
   2c4c0:	39c0005c 	xori	r7,r7,1
   2c4c4:	8245c83a 	sub	r2,r16,r9
   2c4c8:	3c807426 	beq	r7,r18,2c69c <__subdf3+0x244>
   2c4cc:	0080af0e 	bge	zero,r2,2c78c <__subdf3+0x334>
   2c4d0:	48002a1e 	bne	r9,zero,2c57c <__subdf3+0x124>
   2c4d4:	2988b03a 	or	r4,r5,r6
   2c4d8:	20009a1e 	bne	r4,zero,2c744 <__subdf3+0x2ec>
   2c4dc:	888001cc 	andi	r2,r17,7
   2c4e0:	10000726 	beq	r2,zero,2c500 <__subdf3+0xa8>
   2c4e4:	888003cc 	andi	r2,r17,15
   2c4e8:	01000104 	movi	r4,4
   2c4ec:	11000426 	beq	r2,r4,2c500 <__subdf3+0xa8>
   2c4f0:	890b883a 	add	r5,r17,r4
   2c4f4:	2c63803a 	cmpltu	r17,r5,r17
   2c4f8:	1c47883a 	add	r3,r3,r17
   2c4fc:	2823883a 	mov	r17,r5
   2c500:	1880202c 	andhi	r2,r3,128
   2c504:	10005926 	beq	r2,zero,2c66c <__subdf3+0x214>
   2c508:	84000044 	addi	r16,r16,1
   2c50c:	0081ffc4 	movi	r2,2047
   2c510:	8080be26 	beq	r16,r2,2c80c <__subdf3+0x3b4>
   2c514:	017fe034 	movhi	r5,65408
   2c518:	297fffc4 	addi	r5,r5,-1
   2c51c:	1946703a 	and	r3,r3,r5
   2c520:	1804977a 	slli	r2,r3,29
   2c524:	1806927a 	slli	r3,r3,9
   2c528:	8822d0fa 	srli	r17,r17,3
   2c52c:	8401ffcc 	andi	r16,r16,2047
   2c530:	180ad33a 	srli	r5,r3,12
   2c534:	9100004c 	andi	r4,r18,1
   2c538:	1444b03a 	or	r2,r2,r17
   2c53c:	80c1ffcc 	andi	r3,r16,2047
   2c540:	1820953a 	slli	r16,r3,20
   2c544:	20c03fcc 	andi	r3,r4,255
   2c548:	180897fa 	slli	r4,r3,31
   2c54c:	00c00434 	movhi	r3,16
   2c550:	18ffffc4 	addi	r3,r3,-1
   2c554:	28c6703a 	and	r3,r5,r3
   2c558:	1c06b03a 	or	r3,r3,r16
   2c55c:	1906b03a 	or	r3,r3,r4
   2c560:	dfc00417 	ldw	ra,16(sp)
   2c564:	dcc00317 	ldw	r19,12(sp)
   2c568:	dc800217 	ldw	r18,8(sp)
   2c56c:	dc400117 	ldw	r17,4(sp)
   2c570:	dc000017 	ldw	r16,0(sp)
   2c574:	dec00504 	addi	sp,sp,20
   2c578:	f800283a 	ret
   2c57c:	0101ffc4 	movi	r4,2047
   2c580:	813fd626 	beq	r16,r4,2c4dc <__alt_data_end+0xfffec4dc>
   2c584:	29402034 	orhi	r5,r5,128
   2c588:	01000e04 	movi	r4,56
   2c58c:	2080a316 	blt	r4,r2,2c81c <__subdf3+0x3c4>
   2c590:	010007c4 	movi	r4,31
   2c594:	2080c616 	blt	r4,r2,2c8b0 <__subdf3+0x458>
   2c598:	01000804 	movi	r4,32
   2c59c:	2089c83a 	sub	r4,r4,r2
   2c5a0:	2910983a 	sll	r8,r5,r4
   2c5a4:	308ed83a 	srl	r7,r6,r2
   2c5a8:	3108983a 	sll	r4,r6,r4
   2c5ac:	2884d83a 	srl	r2,r5,r2
   2c5b0:	41ccb03a 	or	r6,r8,r7
   2c5b4:	2008c03a 	cmpne	r4,r4,zero
   2c5b8:	310cb03a 	or	r6,r6,r4
   2c5bc:	898dc83a 	sub	r6,r17,r6
   2c5c0:	89a3803a 	cmpltu	r17,r17,r6
   2c5c4:	1887c83a 	sub	r3,r3,r2
   2c5c8:	1c47c83a 	sub	r3,r3,r17
   2c5cc:	3023883a 	mov	r17,r6
   2c5d0:	1880202c 	andhi	r2,r3,128
   2c5d4:	10002326 	beq	r2,zero,2c664 <__subdf3+0x20c>
   2c5d8:	04c02034 	movhi	r19,128
   2c5dc:	9cffffc4 	addi	r19,r19,-1
   2c5e0:	1ce6703a 	and	r19,r3,r19
   2c5e4:	98007a26 	beq	r19,zero,2c7d0 <__subdf3+0x378>
   2c5e8:	9809883a 	mov	r4,r19
   2c5ec:	002cf580 	call	2cf58 <__clzsi2>
   2c5f0:	113ffe04 	addi	r4,r2,-8
   2c5f4:	00c007c4 	movi	r3,31
   2c5f8:	19007b16 	blt	r3,r4,2c7e8 <__subdf3+0x390>
   2c5fc:	00800804 	movi	r2,32
   2c600:	1105c83a 	sub	r2,r2,r4
   2c604:	8884d83a 	srl	r2,r17,r2
   2c608:	9906983a 	sll	r3,r19,r4
   2c60c:	8922983a 	sll	r17,r17,r4
   2c610:	10c4b03a 	or	r2,r2,r3
   2c614:	24007816 	blt	r4,r16,2c7f8 <__subdf3+0x3a0>
   2c618:	2421c83a 	sub	r16,r4,r16
   2c61c:	80c00044 	addi	r3,r16,1
   2c620:	010007c4 	movi	r4,31
   2c624:	20c09516 	blt	r4,r3,2c87c <__subdf3+0x424>
   2c628:	01400804 	movi	r5,32
   2c62c:	28cbc83a 	sub	r5,r5,r3
   2c630:	88c8d83a 	srl	r4,r17,r3
   2c634:	8962983a 	sll	r17,r17,r5
   2c638:	114a983a 	sll	r5,r2,r5
   2c63c:	10c6d83a 	srl	r3,r2,r3
   2c640:	8804c03a 	cmpne	r2,r17,zero
   2c644:	290ab03a 	or	r5,r5,r4
   2c648:	28a2b03a 	or	r17,r5,r2
   2c64c:	0021883a 	mov	r16,zero
   2c650:	003fa206 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c654:	2090b03a 	or	r8,r4,r2
   2c658:	40018e26 	beq	r8,zero,2cc94 <__subdf3+0x83c>
   2c65c:	1007883a 	mov	r3,r2
   2c660:	2023883a 	mov	r17,r4
   2c664:	888001cc 	andi	r2,r17,7
   2c668:	103f9e1e 	bne	r2,zero,2c4e4 <__alt_data_end+0xfffec4e4>
   2c66c:	1804977a 	slli	r2,r3,29
   2c670:	8822d0fa 	srli	r17,r17,3
   2c674:	1810d0fa 	srli	r8,r3,3
   2c678:	9100004c 	andi	r4,r18,1
   2c67c:	1444b03a 	or	r2,r2,r17
   2c680:	00c1ffc4 	movi	r3,2047
   2c684:	80c02826 	beq	r16,r3,2c728 <__subdf3+0x2d0>
   2c688:	01400434 	movhi	r5,16
   2c68c:	297fffc4 	addi	r5,r5,-1
   2c690:	80e0703a 	and	r16,r16,r3
   2c694:	414a703a 	and	r5,r8,r5
   2c698:	003fa806 	br	2c53c <__alt_data_end+0xfffec53c>
   2c69c:	0080630e 	bge	zero,r2,2c82c <__subdf3+0x3d4>
   2c6a0:	48003026 	beq	r9,zero,2c764 <__subdf3+0x30c>
   2c6a4:	0101ffc4 	movi	r4,2047
   2c6a8:	813f8c26 	beq	r16,r4,2c4dc <__alt_data_end+0xfffec4dc>
   2c6ac:	29402034 	orhi	r5,r5,128
   2c6b0:	01000e04 	movi	r4,56
   2c6b4:	2080a90e 	bge	r4,r2,2c95c <__subdf3+0x504>
   2c6b8:	298cb03a 	or	r6,r5,r6
   2c6bc:	3012c03a 	cmpne	r9,r6,zero
   2c6c0:	0005883a 	mov	r2,zero
   2c6c4:	4c53883a 	add	r9,r9,r17
   2c6c8:	4c63803a 	cmpltu	r17,r9,r17
   2c6cc:	10c7883a 	add	r3,r2,r3
   2c6d0:	88c7883a 	add	r3,r17,r3
   2c6d4:	4823883a 	mov	r17,r9
   2c6d8:	1880202c 	andhi	r2,r3,128
   2c6dc:	1000d026 	beq	r2,zero,2ca20 <__subdf3+0x5c8>
   2c6e0:	84000044 	addi	r16,r16,1
   2c6e4:	0081ffc4 	movi	r2,2047
   2c6e8:	8080fe26 	beq	r16,r2,2cae4 <__subdf3+0x68c>
   2c6ec:	00bfe034 	movhi	r2,65408
   2c6f0:	10bfffc4 	addi	r2,r2,-1
   2c6f4:	1886703a 	and	r3,r3,r2
   2c6f8:	880ad07a 	srli	r5,r17,1
   2c6fc:	180497fa 	slli	r2,r3,31
   2c700:	8900004c 	andi	r4,r17,1
   2c704:	2922b03a 	or	r17,r5,r4
   2c708:	1806d07a 	srli	r3,r3,1
   2c70c:	1462b03a 	or	r17,r2,r17
   2c710:	3825883a 	mov	r18,r7
   2c714:	003f7106 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c718:	2984b03a 	or	r2,r5,r6
   2c71c:	103f6826 	beq	r2,zero,2c4c0 <__alt_data_end+0xfffec4c0>
   2c720:	39c03fcc 	andi	r7,r7,255
   2c724:	003f6706 	br	2c4c4 <__alt_data_end+0xfffec4c4>
   2c728:	4086b03a 	or	r3,r8,r2
   2c72c:	18015226 	beq	r3,zero,2cc78 <__subdf3+0x820>
   2c730:	00c00434 	movhi	r3,16
   2c734:	41400234 	orhi	r5,r8,8
   2c738:	18ffffc4 	addi	r3,r3,-1
   2c73c:	28ca703a 	and	r5,r5,r3
   2c740:	003f7e06 	br	2c53c <__alt_data_end+0xfffec53c>
   2c744:	10bfffc4 	addi	r2,r2,-1
   2c748:	1000491e 	bne	r2,zero,2c870 <__subdf3+0x418>
   2c74c:	898fc83a 	sub	r7,r17,r6
   2c750:	89e3803a 	cmpltu	r17,r17,r7
   2c754:	1947c83a 	sub	r3,r3,r5
   2c758:	1c47c83a 	sub	r3,r3,r17
   2c75c:	3823883a 	mov	r17,r7
   2c760:	003f9b06 	br	2c5d0 <__alt_data_end+0xfffec5d0>
   2c764:	2988b03a 	or	r4,r5,r6
   2c768:	203f5c26 	beq	r4,zero,2c4dc <__alt_data_end+0xfffec4dc>
   2c76c:	10bfffc4 	addi	r2,r2,-1
   2c770:	1000931e 	bne	r2,zero,2c9c0 <__subdf3+0x568>
   2c774:	898d883a 	add	r6,r17,r6
   2c778:	3463803a 	cmpltu	r17,r6,r17
   2c77c:	1947883a 	add	r3,r3,r5
   2c780:	88c7883a 	add	r3,r17,r3
   2c784:	3023883a 	mov	r17,r6
   2c788:	003fd306 	br	2c6d8 <__alt_data_end+0xfffec6d8>
   2c78c:	1000541e 	bne	r2,zero,2c8e0 <__subdf3+0x488>
   2c790:	80800044 	addi	r2,r16,1
   2c794:	1081ffcc 	andi	r2,r2,2047
   2c798:	01000044 	movi	r4,1
   2c79c:	2080a20e 	bge	r4,r2,2ca28 <__subdf3+0x5d0>
   2c7a0:	8989c83a 	sub	r4,r17,r6
   2c7a4:	8905803a 	cmpltu	r2,r17,r4
   2c7a8:	1967c83a 	sub	r19,r3,r5
   2c7ac:	98a7c83a 	sub	r19,r19,r2
   2c7b0:	9880202c 	andhi	r2,r19,128
   2c7b4:	10006326 	beq	r2,zero,2c944 <__subdf3+0x4ec>
   2c7b8:	3463c83a 	sub	r17,r6,r17
   2c7bc:	28c7c83a 	sub	r3,r5,r3
   2c7c0:	344d803a 	cmpltu	r6,r6,r17
   2c7c4:	19a7c83a 	sub	r19,r3,r6
   2c7c8:	3825883a 	mov	r18,r7
   2c7cc:	983f861e 	bne	r19,zero,2c5e8 <__alt_data_end+0xfffec5e8>
   2c7d0:	8809883a 	mov	r4,r17
   2c7d4:	002cf580 	call	2cf58 <__clzsi2>
   2c7d8:	10800804 	addi	r2,r2,32
   2c7dc:	113ffe04 	addi	r4,r2,-8
   2c7e0:	00c007c4 	movi	r3,31
   2c7e4:	193f850e 	bge	r3,r4,2c5fc <__alt_data_end+0xfffec5fc>
   2c7e8:	10bff604 	addi	r2,r2,-40
   2c7ec:	8884983a 	sll	r2,r17,r2
   2c7f0:	0023883a 	mov	r17,zero
   2c7f4:	243f880e 	bge	r4,r16,2c618 <__alt_data_end+0xfffec618>
   2c7f8:	00ffe034 	movhi	r3,65408
   2c7fc:	18ffffc4 	addi	r3,r3,-1
   2c800:	8121c83a 	sub	r16,r16,r4
   2c804:	10c6703a 	and	r3,r2,r3
   2c808:	003f3406 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c80c:	9100004c 	andi	r4,r18,1
   2c810:	000b883a 	mov	r5,zero
   2c814:	0005883a 	mov	r2,zero
   2c818:	003f4806 	br	2c53c <__alt_data_end+0xfffec53c>
   2c81c:	298cb03a 	or	r6,r5,r6
   2c820:	300cc03a 	cmpne	r6,r6,zero
   2c824:	0005883a 	mov	r2,zero
   2c828:	003f6406 	br	2c5bc <__alt_data_end+0xfffec5bc>
   2c82c:	10009a1e 	bne	r2,zero,2ca98 <__subdf3+0x640>
   2c830:	82400044 	addi	r9,r16,1
   2c834:	4881ffcc 	andi	r2,r9,2047
   2c838:	02800044 	movi	r10,1
   2c83c:	5080670e 	bge	r10,r2,2c9dc <__subdf3+0x584>
   2c840:	0081ffc4 	movi	r2,2047
   2c844:	4880af26 	beq	r9,r2,2cb04 <__subdf3+0x6ac>
   2c848:	898d883a 	add	r6,r17,r6
   2c84c:	1945883a 	add	r2,r3,r5
   2c850:	3447803a 	cmpltu	r3,r6,r17
   2c854:	1887883a 	add	r3,r3,r2
   2c858:	182297fa 	slli	r17,r3,31
   2c85c:	300cd07a 	srli	r6,r6,1
   2c860:	1806d07a 	srli	r3,r3,1
   2c864:	4821883a 	mov	r16,r9
   2c868:	89a2b03a 	or	r17,r17,r6
   2c86c:	003f1b06 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c870:	0101ffc4 	movi	r4,2047
   2c874:	813f441e 	bne	r16,r4,2c588 <__alt_data_end+0xfffec588>
   2c878:	003f1806 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c87c:	843ff844 	addi	r16,r16,-31
   2c880:	01400804 	movi	r5,32
   2c884:	1408d83a 	srl	r4,r2,r16
   2c888:	19405026 	beq	r3,r5,2c9cc <__subdf3+0x574>
   2c88c:	01401004 	movi	r5,64
   2c890:	28c7c83a 	sub	r3,r5,r3
   2c894:	10c4983a 	sll	r2,r2,r3
   2c898:	88a2b03a 	or	r17,r17,r2
   2c89c:	8822c03a 	cmpne	r17,r17,zero
   2c8a0:	2462b03a 	or	r17,r4,r17
   2c8a4:	0007883a 	mov	r3,zero
   2c8a8:	0021883a 	mov	r16,zero
   2c8ac:	003f6d06 	br	2c664 <__alt_data_end+0xfffec664>
   2c8b0:	11fff804 	addi	r7,r2,-32
   2c8b4:	01000804 	movi	r4,32
   2c8b8:	29ced83a 	srl	r7,r5,r7
   2c8bc:	11004526 	beq	r2,r4,2c9d4 <__subdf3+0x57c>
   2c8c0:	01001004 	movi	r4,64
   2c8c4:	2089c83a 	sub	r4,r4,r2
   2c8c8:	2904983a 	sll	r2,r5,r4
   2c8cc:	118cb03a 	or	r6,r2,r6
   2c8d0:	300cc03a 	cmpne	r6,r6,zero
   2c8d4:	398cb03a 	or	r6,r7,r6
   2c8d8:	0005883a 	mov	r2,zero
   2c8dc:	003f3706 	br	2c5bc <__alt_data_end+0xfffec5bc>
   2c8e0:	80002a26 	beq	r16,zero,2c98c <__subdf3+0x534>
   2c8e4:	0101ffc4 	movi	r4,2047
   2c8e8:	49006626 	beq	r9,r4,2ca84 <__subdf3+0x62c>
   2c8ec:	0085c83a 	sub	r2,zero,r2
   2c8f0:	18c02034 	orhi	r3,r3,128
   2c8f4:	01000e04 	movi	r4,56
   2c8f8:	20807e16 	blt	r4,r2,2caf4 <__subdf3+0x69c>
   2c8fc:	010007c4 	movi	r4,31
   2c900:	2080e716 	blt	r4,r2,2cca0 <__subdf3+0x848>
   2c904:	01000804 	movi	r4,32
   2c908:	2089c83a 	sub	r4,r4,r2
   2c90c:	1914983a 	sll	r10,r3,r4
   2c910:	8890d83a 	srl	r8,r17,r2
   2c914:	8908983a 	sll	r4,r17,r4
   2c918:	1884d83a 	srl	r2,r3,r2
   2c91c:	5222b03a 	or	r17,r10,r8
   2c920:	2006c03a 	cmpne	r3,r4,zero
   2c924:	88e2b03a 	or	r17,r17,r3
   2c928:	3463c83a 	sub	r17,r6,r17
   2c92c:	2885c83a 	sub	r2,r5,r2
   2c930:	344d803a 	cmpltu	r6,r6,r17
   2c934:	1187c83a 	sub	r3,r2,r6
   2c938:	4821883a 	mov	r16,r9
   2c93c:	3825883a 	mov	r18,r7
   2c940:	003f2306 	br	2c5d0 <__alt_data_end+0xfffec5d0>
   2c944:	24d0b03a 	or	r8,r4,r19
   2c948:	40001b1e 	bne	r8,zero,2c9b8 <__subdf3+0x560>
   2c94c:	0005883a 	mov	r2,zero
   2c950:	0009883a 	mov	r4,zero
   2c954:	0021883a 	mov	r16,zero
   2c958:	003f4906 	br	2c680 <__alt_data_end+0xfffec680>
   2c95c:	010007c4 	movi	r4,31
   2c960:	20803a16 	blt	r4,r2,2ca4c <__subdf3+0x5f4>
   2c964:	01000804 	movi	r4,32
   2c968:	2089c83a 	sub	r4,r4,r2
   2c96c:	2912983a 	sll	r9,r5,r4
   2c970:	3090d83a 	srl	r8,r6,r2
   2c974:	3108983a 	sll	r4,r6,r4
   2c978:	2884d83a 	srl	r2,r5,r2
   2c97c:	4a12b03a 	or	r9,r9,r8
   2c980:	2008c03a 	cmpne	r4,r4,zero
   2c984:	4912b03a 	or	r9,r9,r4
   2c988:	003f4e06 	br	2c6c4 <__alt_data_end+0xfffec6c4>
   2c98c:	1c48b03a 	or	r4,r3,r17
   2c990:	20003c26 	beq	r4,zero,2ca84 <__subdf3+0x62c>
   2c994:	0084303a 	nor	r2,zero,r2
   2c998:	1000381e 	bne	r2,zero,2ca7c <__subdf3+0x624>
   2c99c:	3463c83a 	sub	r17,r6,r17
   2c9a0:	28c5c83a 	sub	r2,r5,r3
   2c9a4:	344d803a 	cmpltu	r6,r6,r17
   2c9a8:	1187c83a 	sub	r3,r2,r6
   2c9ac:	4821883a 	mov	r16,r9
   2c9b0:	3825883a 	mov	r18,r7
   2c9b4:	003f0606 	br	2c5d0 <__alt_data_end+0xfffec5d0>
   2c9b8:	2023883a 	mov	r17,r4
   2c9bc:	003f0906 	br	2c5e4 <__alt_data_end+0xfffec5e4>
   2c9c0:	0101ffc4 	movi	r4,2047
   2c9c4:	813f3a1e 	bne	r16,r4,2c6b0 <__alt_data_end+0xfffec6b0>
   2c9c8:	003ec406 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2c9cc:	0005883a 	mov	r2,zero
   2c9d0:	003fb106 	br	2c898 <__alt_data_end+0xfffec898>
   2c9d4:	0005883a 	mov	r2,zero
   2c9d8:	003fbc06 	br	2c8cc <__alt_data_end+0xfffec8cc>
   2c9dc:	1c44b03a 	or	r2,r3,r17
   2c9e0:	80008e1e 	bne	r16,zero,2cc1c <__subdf3+0x7c4>
   2c9e4:	1000c826 	beq	r2,zero,2cd08 <__subdf3+0x8b0>
   2c9e8:	2984b03a 	or	r2,r5,r6
   2c9ec:	103ebb26 	beq	r2,zero,2c4dc <__alt_data_end+0xfffec4dc>
   2c9f0:	8989883a 	add	r4,r17,r6
   2c9f4:	1945883a 	add	r2,r3,r5
   2c9f8:	2447803a 	cmpltu	r3,r4,r17
   2c9fc:	1887883a 	add	r3,r3,r2
   2ca00:	1880202c 	andhi	r2,r3,128
   2ca04:	2023883a 	mov	r17,r4
   2ca08:	103f1626 	beq	r2,zero,2c664 <__alt_data_end+0xfffec664>
   2ca0c:	00bfe034 	movhi	r2,65408
   2ca10:	10bfffc4 	addi	r2,r2,-1
   2ca14:	5021883a 	mov	r16,r10
   2ca18:	1886703a 	and	r3,r3,r2
   2ca1c:	003eaf06 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2ca20:	3825883a 	mov	r18,r7
   2ca24:	003f0f06 	br	2c664 <__alt_data_end+0xfffec664>
   2ca28:	1c44b03a 	or	r2,r3,r17
   2ca2c:	8000251e 	bne	r16,zero,2cac4 <__subdf3+0x66c>
   2ca30:	1000661e 	bne	r2,zero,2cbcc <__subdf3+0x774>
   2ca34:	2990b03a 	or	r8,r5,r6
   2ca38:	40009626 	beq	r8,zero,2cc94 <__subdf3+0x83c>
   2ca3c:	2807883a 	mov	r3,r5
   2ca40:	3023883a 	mov	r17,r6
   2ca44:	3825883a 	mov	r18,r7
   2ca48:	003ea406 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2ca4c:	127ff804 	addi	r9,r2,-32
   2ca50:	01000804 	movi	r4,32
   2ca54:	2a52d83a 	srl	r9,r5,r9
   2ca58:	11008c26 	beq	r2,r4,2cc8c <__subdf3+0x834>
   2ca5c:	01001004 	movi	r4,64
   2ca60:	2085c83a 	sub	r2,r4,r2
   2ca64:	2884983a 	sll	r2,r5,r2
   2ca68:	118cb03a 	or	r6,r2,r6
   2ca6c:	300cc03a 	cmpne	r6,r6,zero
   2ca70:	4992b03a 	or	r9,r9,r6
   2ca74:	0005883a 	mov	r2,zero
   2ca78:	003f1206 	br	2c6c4 <__alt_data_end+0xfffec6c4>
   2ca7c:	0101ffc4 	movi	r4,2047
   2ca80:	493f9c1e 	bne	r9,r4,2c8f4 <__alt_data_end+0xfffec8f4>
   2ca84:	2807883a 	mov	r3,r5
   2ca88:	3023883a 	mov	r17,r6
   2ca8c:	4821883a 	mov	r16,r9
   2ca90:	3825883a 	mov	r18,r7
   2ca94:	003e9106 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2ca98:	80001f1e 	bne	r16,zero,2cb18 <__subdf3+0x6c0>
   2ca9c:	1c48b03a 	or	r4,r3,r17
   2caa0:	20005a26 	beq	r4,zero,2cc0c <__subdf3+0x7b4>
   2caa4:	0084303a 	nor	r2,zero,r2
   2caa8:	1000561e 	bne	r2,zero,2cc04 <__subdf3+0x7ac>
   2caac:	89a3883a 	add	r17,r17,r6
   2cab0:	1945883a 	add	r2,r3,r5
   2cab4:	898d803a 	cmpltu	r6,r17,r6
   2cab8:	3087883a 	add	r3,r6,r2
   2cabc:	4821883a 	mov	r16,r9
   2cac0:	003f0506 	br	2c6d8 <__alt_data_end+0xfffec6d8>
   2cac4:	10002b1e 	bne	r2,zero,2cb74 <__subdf3+0x71c>
   2cac8:	2984b03a 	or	r2,r5,r6
   2cacc:	10008026 	beq	r2,zero,2ccd0 <__subdf3+0x878>
   2cad0:	2807883a 	mov	r3,r5
   2cad4:	3023883a 	mov	r17,r6
   2cad8:	3825883a 	mov	r18,r7
   2cadc:	0401ffc4 	movi	r16,2047
   2cae0:	003e7e06 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cae4:	3809883a 	mov	r4,r7
   2cae8:	0011883a 	mov	r8,zero
   2caec:	0005883a 	mov	r2,zero
   2caf0:	003ee306 	br	2c680 <__alt_data_end+0xfffec680>
   2caf4:	1c62b03a 	or	r17,r3,r17
   2caf8:	8822c03a 	cmpne	r17,r17,zero
   2cafc:	0005883a 	mov	r2,zero
   2cb00:	003f8906 	br	2c928 <__alt_data_end+0xfffec928>
   2cb04:	3809883a 	mov	r4,r7
   2cb08:	4821883a 	mov	r16,r9
   2cb0c:	0011883a 	mov	r8,zero
   2cb10:	0005883a 	mov	r2,zero
   2cb14:	003eda06 	br	2c680 <__alt_data_end+0xfffec680>
   2cb18:	0101ffc4 	movi	r4,2047
   2cb1c:	49003b26 	beq	r9,r4,2cc0c <__subdf3+0x7b4>
   2cb20:	0085c83a 	sub	r2,zero,r2
   2cb24:	18c02034 	orhi	r3,r3,128
   2cb28:	01000e04 	movi	r4,56
   2cb2c:	20806e16 	blt	r4,r2,2cce8 <__subdf3+0x890>
   2cb30:	010007c4 	movi	r4,31
   2cb34:	20807716 	blt	r4,r2,2cd14 <__subdf3+0x8bc>
   2cb38:	01000804 	movi	r4,32
   2cb3c:	2089c83a 	sub	r4,r4,r2
   2cb40:	1914983a 	sll	r10,r3,r4
   2cb44:	8890d83a 	srl	r8,r17,r2
   2cb48:	8908983a 	sll	r4,r17,r4
   2cb4c:	1884d83a 	srl	r2,r3,r2
   2cb50:	5222b03a 	or	r17,r10,r8
   2cb54:	2006c03a 	cmpne	r3,r4,zero
   2cb58:	88e2b03a 	or	r17,r17,r3
   2cb5c:	89a3883a 	add	r17,r17,r6
   2cb60:	1145883a 	add	r2,r2,r5
   2cb64:	898d803a 	cmpltu	r6,r17,r6
   2cb68:	3087883a 	add	r3,r6,r2
   2cb6c:	4821883a 	mov	r16,r9
   2cb70:	003ed906 	br	2c6d8 <__alt_data_end+0xfffec6d8>
   2cb74:	2984b03a 	or	r2,r5,r6
   2cb78:	10004226 	beq	r2,zero,2cc84 <__subdf3+0x82c>
   2cb7c:	1808d0fa 	srli	r4,r3,3
   2cb80:	8822d0fa 	srli	r17,r17,3
   2cb84:	1806977a 	slli	r3,r3,29
   2cb88:	2080022c 	andhi	r2,r4,8
   2cb8c:	1c62b03a 	or	r17,r3,r17
   2cb90:	10000826 	beq	r2,zero,2cbb4 <__subdf3+0x75c>
   2cb94:	2812d0fa 	srli	r9,r5,3
   2cb98:	4880022c 	andhi	r2,r9,8
   2cb9c:	1000051e 	bne	r2,zero,2cbb4 <__subdf3+0x75c>
   2cba0:	300cd0fa 	srli	r6,r6,3
   2cba4:	2804977a 	slli	r2,r5,29
   2cba8:	4809883a 	mov	r4,r9
   2cbac:	3825883a 	mov	r18,r7
   2cbb0:	11a2b03a 	or	r17,r2,r6
   2cbb4:	8806d77a 	srli	r3,r17,29
   2cbb8:	200890fa 	slli	r4,r4,3
   2cbbc:	882290fa 	slli	r17,r17,3
   2cbc0:	0401ffc4 	movi	r16,2047
   2cbc4:	1906b03a 	or	r3,r3,r4
   2cbc8:	003e4406 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cbcc:	2984b03a 	or	r2,r5,r6
   2cbd0:	103e4226 	beq	r2,zero,2c4dc <__alt_data_end+0xfffec4dc>
   2cbd4:	8989c83a 	sub	r4,r17,r6
   2cbd8:	8911803a 	cmpltu	r8,r17,r4
   2cbdc:	1945c83a 	sub	r2,r3,r5
   2cbe0:	1205c83a 	sub	r2,r2,r8
   2cbe4:	1200202c 	andhi	r8,r2,128
   2cbe8:	403e9a26 	beq	r8,zero,2c654 <__alt_data_end+0xfffec654>
   2cbec:	3463c83a 	sub	r17,r6,r17
   2cbf0:	28c5c83a 	sub	r2,r5,r3
   2cbf4:	344d803a 	cmpltu	r6,r6,r17
   2cbf8:	1187c83a 	sub	r3,r2,r6
   2cbfc:	3825883a 	mov	r18,r7
   2cc00:	003e3606 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cc04:	0101ffc4 	movi	r4,2047
   2cc08:	493fc71e 	bne	r9,r4,2cb28 <__alt_data_end+0xfffecb28>
   2cc0c:	2807883a 	mov	r3,r5
   2cc10:	3023883a 	mov	r17,r6
   2cc14:	4821883a 	mov	r16,r9
   2cc18:	003e3006 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cc1c:	10003626 	beq	r2,zero,2ccf8 <__subdf3+0x8a0>
   2cc20:	2984b03a 	or	r2,r5,r6
   2cc24:	10001726 	beq	r2,zero,2cc84 <__subdf3+0x82c>
   2cc28:	1808d0fa 	srli	r4,r3,3
   2cc2c:	8822d0fa 	srli	r17,r17,3
   2cc30:	1806977a 	slli	r3,r3,29
   2cc34:	2080022c 	andhi	r2,r4,8
   2cc38:	1c62b03a 	or	r17,r3,r17
   2cc3c:	10000726 	beq	r2,zero,2cc5c <__subdf3+0x804>
   2cc40:	2812d0fa 	srli	r9,r5,3
   2cc44:	4880022c 	andhi	r2,r9,8
   2cc48:	1000041e 	bne	r2,zero,2cc5c <__subdf3+0x804>
   2cc4c:	300cd0fa 	srli	r6,r6,3
   2cc50:	2804977a 	slli	r2,r5,29
   2cc54:	4809883a 	mov	r4,r9
   2cc58:	11a2b03a 	or	r17,r2,r6
   2cc5c:	8806d77a 	srli	r3,r17,29
   2cc60:	200890fa 	slli	r4,r4,3
   2cc64:	882290fa 	slli	r17,r17,3
   2cc68:	3825883a 	mov	r18,r7
   2cc6c:	1906b03a 	or	r3,r3,r4
   2cc70:	0401ffc4 	movi	r16,2047
   2cc74:	003e1906 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cc78:	000b883a 	mov	r5,zero
   2cc7c:	0005883a 	mov	r2,zero
   2cc80:	003e2e06 	br	2c53c <__alt_data_end+0xfffec53c>
   2cc84:	0401ffc4 	movi	r16,2047
   2cc88:	003e1406 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cc8c:	0005883a 	mov	r2,zero
   2cc90:	003f7506 	br	2ca68 <__alt_data_end+0xfffeca68>
   2cc94:	0005883a 	mov	r2,zero
   2cc98:	0009883a 	mov	r4,zero
   2cc9c:	003e7806 	br	2c680 <__alt_data_end+0xfffec680>
   2cca0:	123ff804 	addi	r8,r2,-32
   2cca4:	01000804 	movi	r4,32
   2cca8:	1a10d83a 	srl	r8,r3,r8
   2ccac:	11002526 	beq	r2,r4,2cd44 <__subdf3+0x8ec>
   2ccb0:	01001004 	movi	r4,64
   2ccb4:	2085c83a 	sub	r2,r4,r2
   2ccb8:	1884983a 	sll	r2,r3,r2
   2ccbc:	1444b03a 	or	r2,r2,r17
   2ccc0:	1004c03a 	cmpne	r2,r2,zero
   2ccc4:	40a2b03a 	or	r17,r8,r2
   2ccc8:	0005883a 	mov	r2,zero
   2cccc:	003f1606 	br	2c928 <__alt_data_end+0xfffec928>
   2ccd0:	02000434 	movhi	r8,16
   2ccd4:	0009883a 	mov	r4,zero
   2ccd8:	423fffc4 	addi	r8,r8,-1
   2ccdc:	00bfffc4 	movi	r2,-1
   2cce0:	0401ffc4 	movi	r16,2047
   2cce4:	003e6606 	br	2c680 <__alt_data_end+0xfffec680>
   2cce8:	1c62b03a 	or	r17,r3,r17
   2ccec:	8822c03a 	cmpne	r17,r17,zero
   2ccf0:	0005883a 	mov	r2,zero
   2ccf4:	003f9906 	br	2cb5c <__alt_data_end+0xfffecb5c>
   2ccf8:	2807883a 	mov	r3,r5
   2ccfc:	3023883a 	mov	r17,r6
   2cd00:	0401ffc4 	movi	r16,2047
   2cd04:	003df506 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cd08:	2807883a 	mov	r3,r5
   2cd0c:	3023883a 	mov	r17,r6
   2cd10:	003df206 	br	2c4dc <__alt_data_end+0xfffec4dc>
   2cd14:	123ff804 	addi	r8,r2,-32
   2cd18:	01000804 	movi	r4,32
   2cd1c:	1a10d83a 	srl	r8,r3,r8
   2cd20:	11000a26 	beq	r2,r4,2cd4c <__subdf3+0x8f4>
   2cd24:	01001004 	movi	r4,64
   2cd28:	2085c83a 	sub	r2,r4,r2
   2cd2c:	1884983a 	sll	r2,r3,r2
   2cd30:	1444b03a 	or	r2,r2,r17
   2cd34:	1004c03a 	cmpne	r2,r2,zero
   2cd38:	40a2b03a 	or	r17,r8,r2
   2cd3c:	0005883a 	mov	r2,zero
   2cd40:	003f8606 	br	2cb5c <__alt_data_end+0xfffecb5c>
   2cd44:	0005883a 	mov	r2,zero
   2cd48:	003fdc06 	br	2ccbc <__alt_data_end+0xfffeccbc>
   2cd4c:	0005883a 	mov	r2,zero
   2cd50:	003ff706 	br	2cd30 <__alt_data_end+0xfffecd30>

0002cd54 <__fixdfsi>:
   2cd54:	280cd53a 	srli	r6,r5,20
   2cd58:	00c00434 	movhi	r3,16
   2cd5c:	18ffffc4 	addi	r3,r3,-1
   2cd60:	3181ffcc 	andi	r6,r6,2047
   2cd64:	01c0ff84 	movi	r7,1022
   2cd68:	28c6703a 	and	r3,r5,r3
   2cd6c:	280ad7fa 	srli	r5,r5,31
   2cd70:	3980120e 	bge	r7,r6,2cdbc <__fixdfsi+0x68>
   2cd74:	00810744 	movi	r2,1053
   2cd78:	11800c16 	blt	r2,r6,2cdac <__fixdfsi+0x58>
   2cd7c:	00810cc4 	movi	r2,1075
   2cd80:	1185c83a 	sub	r2,r2,r6
   2cd84:	01c007c4 	movi	r7,31
   2cd88:	18c00434 	orhi	r3,r3,16
   2cd8c:	38800d16 	blt	r7,r2,2cdc4 <__fixdfsi+0x70>
   2cd90:	31befb44 	addi	r6,r6,-1043
   2cd94:	2084d83a 	srl	r2,r4,r2
   2cd98:	1986983a 	sll	r3,r3,r6
   2cd9c:	1884b03a 	or	r2,r3,r2
   2cda0:	28000726 	beq	r5,zero,2cdc0 <__fixdfsi+0x6c>
   2cda4:	0085c83a 	sub	r2,zero,r2
   2cda8:	f800283a 	ret
   2cdac:	00a00034 	movhi	r2,32768
   2cdb0:	10bfffc4 	addi	r2,r2,-1
   2cdb4:	2885883a 	add	r2,r5,r2
   2cdb8:	f800283a 	ret
   2cdbc:	0005883a 	mov	r2,zero
   2cdc0:	f800283a 	ret
   2cdc4:	008104c4 	movi	r2,1043
   2cdc8:	1185c83a 	sub	r2,r2,r6
   2cdcc:	1884d83a 	srl	r2,r3,r2
   2cdd0:	003ff306 	br	2cda0 <__alt_data_end+0xfffecda0>

0002cdd4 <__floatsidf>:
   2cdd4:	defffd04 	addi	sp,sp,-12
   2cdd8:	dfc00215 	stw	ra,8(sp)
   2cddc:	dc400115 	stw	r17,4(sp)
   2cde0:	dc000015 	stw	r16,0(sp)
   2cde4:	20002b26 	beq	r4,zero,2ce94 <__floatsidf+0xc0>
   2cde8:	2023883a 	mov	r17,r4
   2cdec:	2020d7fa 	srli	r16,r4,31
   2cdf0:	20002d16 	blt	r4,zero,2cea8 <__floatsidf+0xd4>
   2cdf4:	8809883a 	mov	r4,r17
   2cdf8:	002cf580 	call	2cf58 <__clzsi2>
   2cdfc:	01410784 	movi	r5,1054
   2ce00:	288bc83a 	sub	r5,r5,r2
   2ce04:	01010cc4 	movi	r4,1075
   2ce08:	2149c83a 	sub	r4,r4,r5
   2ce0c:	00c007c4 	movi	r3,31
   2ce10:	1900160e 	bge	r3,r4,2ce6c <__floatsidf+0x98>
   2ce14:	00c104c4 	movi	r3,1043
   2ce18:	1947c83a 	sub	r3,r3,r5
   2ce1c:	88c6983a 	sll	r3,r17,r3
   2ce20:	00800434 	movhi	r2,16
   2ce24:	10bfffc4 	addi	r2,r2,-1
   2ce28:	1886703a 	and	r3,r3,r2
   2ce2c:	2941ffcc 	andi	r5,r5,2047
   2ce30:	800d883a 	mov	r6,r16
   2ce34:	0005883a 	mov	r2,zero
   2ce38:	280a953a 	slli	r5,r5,20
   2ce3c:	31803fcc 	andi	r6,r6,255
   2ce40:	01000434 	movhi	r4,16
   2ce44:	300c97fa 	slli	r6,r6,31
   2ce48:	213fffc4 	addi	r4,r4,-1
   2ce4c:	1906703a 	and	r3,r3,r4
   2ce50:	1946b03a 	or	r3,r3,r5
   2ce54:	1986b03a 	or	r3,r3,r6
   2ce58:	dfc00217 	ldw	ra,8(sp)
   2ce5c:	dc400117 	ldw	r17,4(sp)
   2ce60:	dc000017 	ldw	r16,0(sp)
   2ce64:	dec00304 	addi	sp,sp,12
   2ce68:	f800283a 	ret
   2ce6c:	00c002c4 	movi	r3,11
   2ce70:	1887c83a 	sub	r3,r3,r2
   2ce74:	88c6d83a 	srl	r3,r17,r3
   2ce78:	8904983a 	sll	r2,r17,r4
   2ce7c:	01000434 	movhi	r4,16
   2ce80:	213fffc4 	addi	r4,r4,-1
   2ce84:	2941ffcc 	andi	r5,r5,2047
   2ce88:	1906703a 	and	r3,r3,r4
   2ce8c:	800d883a 	mov	r6,r16
   2ce90:	003fe906 	br	2ce38 <__alt_data_end+0xfffece38>
   2ce94:	000d883a 	mov	r6,zero
   2ce98:	000b883a 	mov	r5,zero
   2ce9c:	0007883a 	mov	r3,zero
   2cea0:	0005883a 	mov	r2,zero
   2cea4:	003fe406 	br	2ce38 <__alt_data_end+0xfffece38>
   2cea8:	0123c83a 	sub	r17,zero,r4
   2ceac:	003fd106 	br	2cdf4 <__alt_data_end+0xfffecdf4>

0002ceb0 <__floatunsidf>:
   2ceb0:	defffe04 	addi	sp,sp,-8
   2ceb4:	dc000015 	stw	r16,0(sp)
   2ceb8:	dfc00115 	stw	ra,4(sp)
   2cebc:	2021883a 	mov	r16,r4
   2cec0:	20002226 	beq	r4,zero,2cf4c <__floatunsidf+0x9c>
   2cec4:	002cf580 	call	2cf58 <__clzsi2>
   2cec8:	01010784 	movi	r4,1054
   2cecc:	2089c83a 	sub	r4,r4,r2
   2ced0:	01810cc4 	movi	r6,1075
   2ced4:	310dc83a 	sub	r6,r6,r4
   2ced8:	00c007c4 	movi	r3,31
   2cedc:	1980120e 	bge	r3,r6,2cf28 <__floatunsidf+0x78>
   2cee0:	00c104c4 	movi	r3,1043
   2cee4:	1907c83a 	sub	r3,r3,r4
   2cee8:	80ca983a 	sll	r5,r16,r3
   2ceec:	00800434 	movhi	r2,16
   2cef0:	10bfffc4 	addi	r2,r2,-1
   2cef4:	2101ffcc 	andi	r4,r4,2047
   2cef8:	0021883a 	mov	r16,zero
   2cefc:	288a703a 	and	r5,r5,r2
   2cf00:	2008953a 	slli	r4,r4,20
   2cf04:	00c00434 	movhi	r3,16
   2cf08:	18ffffc4 	addi	r3,r3,-1
   2cf0c:	28c6703a 	and	r3,r5,r3
   2cf10:	8005883a 	mov	r2,r16
   2cf14:	1906b03a 	or	r3,r3,r4
   2cf18:	dfc00117 	ldw	ra,4(sp)
   2cf1c:	dc000017 	ldw	r16,0(sp)
   2cf20:	dec00204 	addi	sp,sp,8
   2cf24:	f800283a 	ret
   2cf28:	00c002c4 	movi	r3,11
   2cf2c:	188bc83a 	sub	r5,r3,r2
   2cf30:	814ad83a 	srl	r5,r16,r5
   2cf34:	00c00434 	movhi	r3,16
   2cf38:	18ffffc4 	addi	r3,r3,-1
   2cf3c:	81a0983a 	sll	r16,r16,r6
   2cf40:	2101ffcc 	andi	r4,r4,2047
   2cf44:	28ca703a 	and	r5,r5,r3
   2cf48:	003fed06 	br	2cf00 <__alt_data_end+0xfffecf00>
   2cf4c:	0009883a 	mov	r4,zero
   2cf50:	000b883a 	mov	r5,zero
   2cf54:	003fea06 	br	2cf00 <__alt_data_end+0xfffecf00>

0002cf58 <__clzsi2>:
   2cf58:	00bfffd4 	movui	r2,65535
   2cf5c:	11000536 	bltu	r2,r4,2cf74 <__clzsi2+0x1c>
   2cf60:	00803fc4 	movi	r2,255
   2cf64:	11000f36 	bltu	r2,r4,2cfa4 <__clzsi2+0x4c>
   2cf68:	00800804 	movi	r2,32
   2cf6c:	0007883a 	mov	r3,zero
   2cf70:	00000506 	br	2cf88 <__clzsi2+0x30>
   2cf74:	00804034 	movhi	r2,256
   2cf78:	10bfffc4 	addi	r2,r2,-1
   2cf7c:	11000c2e 	bgeu	r2,r4,2cfb0 <__clzsi2+0x58>
   2cf80:	00800204 	movi	r2,8
   2cf84:	00c00604 	movi	r3,24
   2cf88:	20c8d83a 	srl	r4,r4,r3
   2cf8c:	00c000f4 	movhi	r3,3
   2cf90:	18fd8f04 	addi	r3,r3,-2500
   2cf94:	1909883a 	add	r4,r3,r4
   2cf98:	20c00003 	ldbu	r3,0(r4)
   2cf9c:	10c5c83a 	sub	r2,r2,r3
   2cfa0:	f800283a 	ret
   2cfa4:	00800604 	movi	r2,24
   2cfa8:	00c00204 	movi	r3,8
   2cfac:	003ff606 	br	2cf88 <__alt_data_end+0xfffecf88>
   2cfb0:	00800404 	movi	r2,16
   2cfb4:	1007883a 	mov	r3,r2
   2cfb8:	003ff306 	br	2cf88 <__alt_data_end+0xfffecf88>

0002cfbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cfbc:	defffe04 	addi	sp,sp,-8
   2cfc0:	dfc00115 	stw	ra,4(sp)
   2cfc4:	df000015 	stw	fp,0(sp)
   2cfc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cfcc:	d0a00b17 	ldw	r2,-32724(gp)
   2cfd0:	10000326 	beq	r2,zero,2cfe0 <alt_get_errno+0x24>
   2cfd4:	d0a00b17 	ldw	r2,-32724(gp)
   2cfd8:	103ee83a 	callr	r2
   2cfdc:	00000106 	br	2cfe4 <alt_get_errno+0x28>
   2cfe0:	d0a6d104 	addi	r2,gp,-25788
}
   2cfe4:	e037883a 	mov	sp,fp
   2cfe8:	dfc00117 	ldw	ra,4(sp)
   2cfec:	df000017 	ldw	fp,0(sp)
   2cff0:	dec00204 	addi	sp,sp,8
   2cff4:	f800283a 	ret

0002cff8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2cff8:	defffb04 	addi	sp,sp,-20
   2cffc:	dfc00415 	stw	ra,16(sp)
   2d000:	df000315 	stw	fp,12(sp)
   2d004:	df000304 	addi	fp,sp,12
   2d008:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d00c:	e0bfff17 	ldw	r2,-4(fp)
   2d010:	10000616 	blt	r2,zero,2d02c <close+0x34>
   2d014:	e0bfff17 	ldw	r2,-4(fp)
   2d018:	10c00324 	muli	r3,r2,12
   2d01c:	008000f4 	movhi	r2,3
   2d020:	10800f04 	addi	r2,r2,60
   2d024:	1885883a 	add	r2,r3,r2
   2d028:	00000106 	br	2d030 <close+0x38>
   2d02c:	0005883a 	mov	r2,zero
   2d030:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2d034:	e0bffd17 	ldw	r2,-12(fp)
   2d038:	10001926 	beq	r2,zero,2d0a0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d03c:	e0bffd17 	ldw	r2,-12(fp)
   2d040:	10800017 	ldw	r2,0(r2)
   2d044:	10800417 	ldw	r2,16(r2)
   2d048:	10000626 	beq	r2,zero,2d064 <close+0x6c>
   2d04c:	e0bffd17 	ldw	r2,-12(fp)
   2d050:	10800017 	ldw	r2,0(r2)
   2d054:	10800417 	ldw	r2,16(r2)
   2d058:	e13ffd17 	ldw	r4,-12(fp)
   2d05c:	103ee83a 	callr	r2
   2d060:	00000106 	br	2d068 <close+0x70>
   2d064:	0005883a 	mov	r2,zero
   2d068:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d06c:	e13fff17 	ldw	r4,-4(fp)
   2d070:	002d5800 	call	2d580 <alt_release_fd>
    if (rval < 0)
   2d074:	e0bffe17 	ldw	r2,-8(fp)
   2d078:	1000070e 	bge	r2,zero,2d098 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2d07c:	002cfbc0 	call	2cfbc <alt_get_errno>
   2d080:	1007883a 	mov	r3,r2
   2d084:	e0bffe17 	ldw	r2,-8(fp)
   2d088:	0085c83a 	sub	r2,zero,r2
   2d08c:	18800015 	stw	r2,0(r3)
      return -1;
   2d090:	00bfffc4 	movi	r2,-1
   2d094:	00000706 	br	2d0b4 <close+0xbc>
    }
    return 0;
   2d098:	0005883a 	mov	r2,zero
   2d09c:	00000506 	br	2d0b4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d0a0:	002cfbc0 	call	2cfbc <alt_get_errno>
   2d0a4:	1007883a 	mov	r3,r2
   2d0a8:	00801444 	movi	r2,81
   2d0ac:	18800015 	stw	r2,0(r3)
    return -1;
   2d0b0:	00bfffc4 	movi	r2,-1
  }
}
   2d0b4:	e037883a 	mov	sp,fp
   2d0b8:	dfc00117 	ldw	ra,4(sp)
   2d0bc:	df000017 	ldw	fp,0(sp)
   2d0c0:	dec00204 	addi	sp,sp,8
   2d0c4:	f800283a 	ret

0002d0c8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d0c8:	defffc04 	addi	sp,sp,-16
   2d0cc:	df000315 	stw	fp,12(sp)
   2d0d0:	df000304 	addi	fp,sp,12
   2d0d4:	e13ffd15 	stw	r4,-12(fp)
   2d0d8:	e17ffe15 	stw	r5,-8(fp)
   2d0dc:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2d0e0:	e0bfff17 	ldw	r2,-4(fp)
}
   2d0e4:	e037883a 	mov	sp,fp
   2d0e8:	df000017 	ldw	fp,0(sp)
   2d0ec:	dec00104 	addi	sp,sp,4
   2d0f0:	f800283a 	ret

0002d0f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d0f4:	defffe04 	addi	sp,sp,-8
   2d0f8:	dfc00115 	stw	ra,4(sp)
   2d0fc:	df000015 	stw	fp,0(sp)
   2d100:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d104:	d0a00b17 	ldw	r2,-32724(gp)
   2d108:	10000326 	beq	r2,zero,2d118 <alt_get_errno+0x24>
   2d10c:	d0a00b17 	ldw	r2,-32724(gp)
   2d110:	103ee83a 	callr	r2
   2d114:	00000106 	br	2d11c <alt_get_errno+0x28>
   2d118:	d0a6d104 	addi	r2,gp,-25788
}
   2d11c:	e037883a 	mov	sp,fp
   2d120:	dfc00117 	ldw	ra,4(sp)
   2d124:	df000017 	ldw	fp,0(sp)
   2d128:	dec00204 	addi	sp,sp,8
   2d12c:	f800283a 	ret

0002d130 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d130:	defffb04 	addi	sp,sp,-20
   2d134:	dfc00415 	stw	ra,16(sp)
   2d138:	df000315 	stw	fp,12(sp)
   2d13c:	df000304 	addi	fp,sp,12
   2d140:	e13ffe15 	stw	r4,-8(fp)
   2d144:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d148:	e0bffe17 	ldw	r2,-8(fp)
   2d14c:	10000616 	blt	r2,zero,2d168 <fstat+0x38>
   2d150:	e0bffe17 	ldw	r2,-8(fp)
   2d154:	10c00324 	muli	r3,r2,12
   2d158:	008000f4 	movhi	r2,3
   2d15c:	10800f04 	addi	r2,r2,60
   2d160:	1885883a 	add	r2,r3,r2
   2d164:	00000106 	br	2d16c <fstat+0x3c>
   2d168:	0005883a 	mov	r2,zero
   2d16c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2d170:	e0bffd17 	ldw	r2,-12(fp)
   2d174:	10001026 	beq	r2,zero,2d1b8 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d178:	e0bffd17 	ldw	r2,-12(fp)
   2d17c:	10800017 	ldw	r2,0(r2)
   2d180:	10800817 	ldw	r2,32(r2)
   2d184:	10000726 	beq	r2,zero,2d1a4 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2d188:	e0bffd17 	ldw	r2,-12(fp)
   2d18c:	10800017 	ldw	r2,0(r2)
   2d190:	10800817 	ldw	r2,32(r2)
   2d194:	e17fff17 	ldw	r5,-4(fp)
   2d198:	e13ffd17 	ldw	r4,-12(fp)
   2d19c:	103ee83a 	callr	r2
   2d1a0:	00000a06 	br	2d1cc <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d1a4:	e0bfff17 	ldw	r2,-4(fp)
   2d1a8:	00c80004 	movi	r3,8192
   2d1ac:	10c00115 	stw	r3,4(r2)
      return 0;
   2d1b0:	0005883a 	mov	r2,zero
   2d1b4:	00000506 	br	2d1cc <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d1b8:	002d0f40 	call	2d0f4 <alt_get_errno>
   2d1bc:	1007883a 	mov	r3,r2
   2d1c0:	00801444 	movi	r2,81
   2d1c4:	18800015 	stw	r2,0(r3)
    return -1;
   2d1c8:	00bfffc4 	movi	r2,-1
  }
}
   2d1cc:	e037883a 	mov	sp,fp
   2d1d0:	dfc00117 	ldw	ra,4(sp)
   2d1d4:	df000017 	ldw	fp,0(sp)
   2d1d8:	dec00204 	addi	sp,sp,8
   2d1dc:	f800283a 	ret

0002d1e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d1e0:	defffe04 	addi	sp,sp,-8
   2d1e4:	dfc00115 	stw	ra,4(sp)
   2d1e8:	df000015 	stw	fp,0(sp)
   2d1ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d1f0:	d0a00b17 	ldw	r2,-32724(gp)
   2d1f4:	10000326 	beq	r2,zero,2d204 <alt_get_errno+0x24>
   2d1f8:	d0a00b17 	ldw	r2,-32724(gp)
   2d1fc:	103ee83a 	callr	r2
   2d200:	00000106 	br	2d208 <alt_get_errno+0x28>
   2d204:	d0a6d104 	addi	r2,gp,-25788
}
   2d208:	e037883a 	mov	sp,fp
   2d20c:	dfc00117 	ldw	ra,4(sp)
   2d210:	df000017 	ldw	fp,0(sp)
   2d214:	dec00204 	addi	sp,sp,8
   2d218:	f800283a 	ret

0002d21c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d21c:	deffed04 	addi	sp,sp,-76
   2d220:	dfc01215 	stw	ra,72(sp)
   2d224:	df001115 	stw	fp,68(sp)
   2d228:	df001104 	addi	fp,sp,68
   2d22c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d230:	e0bfff17 	ldw	r2,-4(fp)
   2d234:	10000616 	blt	r2,zero,2d250 <isatty+0x34>
   2d238:	e0bfff17 	ldw	r2,-4(fp)
   2d23c:	10c00324 	muli	r3,r2,12
   2d240:	008000f4 	movhi	r2,3
   2d244:	10800f04 	addi	r2,r2,60
   2d248:	1885883a 	add	r2,r3,r2
   2d24c:	00000106 	br	2d254 <isatty+0x38>
   2d250:	0005883a 	mov	r2,zero
   2d254:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2d258:	e0bfef17 	ldw	r2,-68(fp)
   2d25c:	10000e26 	beq	r2,zero,2d298 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d260:	e0bfef17 	ldw	r2,-68(fp)
   2d264:	10800017 	ldw	r2,0(r2)
   2d268:	10800817 	ldw	r2,32(r2)
   2d26c:	1000021e 	bne	r2,zero,2d278 <isatty+0x5c>
    {
      return 1;
   2d270:	00800044 	movi	r2,1
   2d274:	00000d06 	br	2d2ac <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d278:	e0bff004 	addi	r2,fp,-64
   2d27c:	100b883a 	mov	r5,r2
   2d280:	e13fff17 	ldw	r4,-4(fp)
   2d284:	002d1300 	call	2d130 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d288:	e0bff117 	ldw	r2,-60(fp)
   2d28c:	10880020 	cmpeqi	r2,r2,8192
   2d290:	10803fcc 	andi	r2,r2,255
   2d294:	00000506 	br	2d2ac <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d298:	002d1e00 	call	2d1e0 <alt_get_errno>
   2d29c:	1007883a 	mov	r3,r2
   2d2a0:	00801444 	movi	r2,81
   2d2a4:	18800015 	stw	r2,0(r3)
    return 0;
   2d2a8:	0005883a 	mov	r2,zero
  }
}
   2d2ac:	e037883a 	mov	sp,fp
   2d2b0:	dfc00117 	ldw	ra,4(sp)
   2d2b4:	df000017 	ldw	fp,0(sp)
   2d2b8:	dec00204 	addi	sp,sp,8
   2d2bc:	f800283a 	ret

0002d2c0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d2c0:	defffc04 	addi	sp,sp,-16
   2d2c4:	df000315 	stw	fp,12(sp)
   2d2c8:	df000304 	addi	fp,sp,12
   2d2cc:	e13ffd15 	stw	r4,-12(fp)
   2d2d0:	e17ffe15 	stw	r5,-8(fp)
   2d2d4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2d2d8:	e0fffe17 	ldw	r3,-8(fp)
   2d2dc:	e0bffd17 	ldw	r2,-12(fp)
   2d2e0:	18800c26 	beq	r3,r2,2d314 <alt_load_section+0x54>
  {
    while( to != end )
   2d2e4:	00000806 	br	2d308 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d2e8:	e0bffe17 	ldw	r2,-8(fp)
   2d2ec:	10c00104 	addi	r3,r2,4
   2d2f0:	e0fffe15 	stw	r3,-8(fp)
   2d2f4:	e0fffd17 	ldw	r3,-12(fp)
   2d2f8:	19000104 	addi	r4,r3,4
   2d2fc:	e13ffd15 	stw	r4,-12(fp)
   2d300:	18c00017 	ldw	r3,0(r3)
   2d304:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d308:	e0fffe17 	ldw	r3,-8(fp)
   2d30c:	e0bfff17 	ldw	r2,-4(fp)
   2d310:	18bff51e 	bne	r3,r2,2d2e8 <__alt_data_end+0xfffed2e8>
    {
      *to++ = *from++;
    }
  }
}
   2d314:	0001883a 	nop
   2d318:	e037883a 	mov	sp,fp
   2d31c:	df000017 	ldw	fp,0(sp)
   2d320:	dec00104 	addi	sp,sp,4
   2d324:	f800283a 	ret

0002d328 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d328:	defffe04 	addi	sp,sp,-8
   2d32c:	dfc00115 	stw	ra,4(sp)
   2d330:	df000015 	stw	fp,0(sp)
   2d334:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d338:	018000f4 	movhi	r6,3
   2d33c:	31849704 	addi	r6,r6,4700
   2d340:	014000f4 	movhi	r5,3
   2d344:	297ddc04 	addi	r5,r5,-2192
   2d348:	010000f4 	movhi	r4,3
   2d34c:	21049704 	addi	r4,r4,4700
   2d350:	002d2c00 	call	2d2c0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d354:	018000b4 	movhi	r6,2
   2d358:	31809104 	addi	r6,r6,580
   2d35c:	014000b4 	movhi	r5,2
   2d360:	29400804 	addi	r5,r5,32
   2d364:	010000b4 	movhi	r4,2
   2d368:	21000804 	addi	r4,r4,32
   2d36c:	002d2c00 	call	2d2c0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d370:	018000f4 	movhi	r6,3
   2d374:	31bddc04 	addi	r6,r6,-2192
   2d378:	014000f4 	movhi	r5,3
   2d37c:	297cfd04 	addi	r5,r5,-3084
   2d380:	010000f4 	movhi	r4,3
   2d384:	213cfd04 	addi	r4,r4,-3084
   2d388:	002d2c00 	call	2d2c0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d38c:	002e2e00 	call	2e2e0 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d390:	002e4c80 	call	2e4c8 <alt_icache_flush_all>
}
   2d394:	0001883a 	nop
   2d398:	e037883a 	mov	sp,fp
   2d39c:	dfc00117 	ldw	ra,4(sp)
   2d3a0:	df000017 	ldw	fp,0(sp)
   2d3a4:	dec00204 	addi	sp,sp,8
   2d3a8:	f800283a 	ret

0002d3ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d3ac:	defffe04 	addi	sp,sp,-8
   2d3b0:	dfc00115 	stw	ra,4(sp)
   2d3b4:	df000015 	stw	fp,0(sp)
   2d3b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d3bc:	d0a00b17 	ldw	r2,-32724(gp)
   2d3c0:	10000326 	beq	r2,zero,2d3d0 <alt_get_errno+0x24>
   2d3c4:	d0a00b17 	ldw	r2,-32724(gp)
   2d3c8:	103ee83a 	callr	r2
   2d3cc:	00000106 	br	2d3d4 <alt_get_errno+0x28>
   2d3d0:	d0a6d104 	addi	r2,gp,-25788
}
   2d3d4:	e037883a 	mov	sp,fp
   2d3d8:	dfc00117 	ldw	ra,4(sp)
   2d3dc:	df000017 	ldw	fp,0(sp)
   2d3e0:	dec00204 	addi	sp,sp,8
   2d3e4:	f800283a 	ret

0002d3e8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d3e8:	defff904 	addi	sp,sp,-28
   2d3ec:	dfc00615 	stw	ra,24(sp)
   2d3f0:	df000515 	stw	fp,20(sp)
   2d3f4:	df000504 	addi	fp,sp,20
   2d3f8:	e13ffd15 	stw	r4,-12(fp)
   2d3fc:	e17ffe15 	stw	r5,-8(fp)
   2d400:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d404:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d408:	e0bffd17 	ldw	r2,-12(fp)
   2d40c:	10000616 	blt	r2,zero,2d428 <lseek+0x40>
   2d410:	e0bffd17 	ldw	r2,-12(fp)
   2d414:	10c00324 	muli	r3,r2,12
   2d418:	008000f4 	movhi	r2,3
   2d41c:	10800f04 	addi	r2,r2,60
   2d420:	1885883a 	add	r2,r3,r2
   2d424:	00000106 	br	2d42c <lseek+0x44>
   2d428:	0005883a 	mov	r2,zero
   2d42c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2d430:	e0bffc17 	ldw	r2,-16(fp)
   2d434:	10001026 	beq	r2,zero,2d478 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d438:	e0bffc17 	ldw	r2,-16(fp)
   2d43c:	10800017 	ldw	r2,0(r2)
   2d440:	10800717 	ldw	r2,28(r2)
   2d444:	10000926 	beq	r2,zero,2d46c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d448:	e0bffc17 	ldw	r2,-16(fp)
   2d44c:	10800017 	ldw	r2,0(r2)
   2d450:	10800717 	ldw	r2,28(r2)
   2d454:	e1bfff17 	ldw	r6,-4(fp)
   2d458:	e17ffe17 	ldw	r5,-8(fp)
   2d45c:	e13ffc17 	ldw	r4,-16(fp)
   2d460:	103ee83a 	callr	r2
   2d464:	e0bffb15 	stw	r2,-20(fp)
   2d468:	00000506 	br	2d480 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d46c:	00bfde84 	movi	r2,-134
   2d470:	e0bffb15 	stw	r2,-20(fp)
   2d474:	00000206 	br	2d480 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d478:	00bfebc4 	movi	r2,-81
   2d47c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2d480:	e0bffb17 	ldw	r2,-20(fp)
   2d484:	1000070e 	bge	r2,zero,2d4a4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2d488:	002d3ac0 	call	2d3ac <alt_get_errno>
   2d48c:	1007883a 	mov	r3,r2
   2d490:	e0bffb17 	ldw	r2,-20(fp)
   2d494:	0085c83a 	sub	r2,zero,r2
   2d498:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d49c:	00bfffc4 	movi	r2,-1
   2d4a0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2d4a4:	e0bffb17 	ldw	r2,-20(fp)
}
   2d4a8:	e037883a 	mov	sp,fp
   2d4ac:	dfc00117 	ldw	ra,4(sp)
   2d4b0:	df000017 	ldw	fp,0(sp)
   2d4b4:	dec00204 	addi	sp,sp,8
   2d4b8:	f800283a 	ret

0002d4bc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d4bc:	defffd04 	addi	sp,sp,-12
   2d4c0:	dfc00215 	stw	ra,8(sp)
   2d4c4:	df000115 	stw	fp,4(sp)
   2d4c8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d4cc:	0009883a 	mov	r4,zero
   2d4d0:	002d6c80 	call	2d6c8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d4d4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d4d8:	002d7000 	call	2d700 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d4dc:	018000f4 	movhi	r6,3
   2d4e0:	31bdd204 	addi	r6,r6,-2232
   2d4e4:	014000f4 	movhi	r5,3
   2d4e8:	297dd204 	addi	r5,r5,-2232
   2d4ec:	010000f4 	movhi	r4,3
   2d4f0:	213dd204 	addi	r4,r4,-2232
   2d4f4:	002e8600 	call	2e860 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d4f8:	002e4080 	call	2e408 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d4fc:	010000f4 	movhi	r4,3
   2d500:	21391a04 	addi	r4,r4,-7064
   2d504:	002f0600 	call	2f060 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d508:	d0a6d217 	ldw	r2,-25784(gp)
   2d50c:	d0e6d317 	ldw	r3,-25780(gp)
   2d510:	d126d417 	ldw	r4,-25776(gp)
   2d514:	200d883a 	mov	r6,r4
   2d518:	180b883a 	mov	r5,r3
   2d51c:	1009883a 	mov	r4,r2
   2d520:	00202900 	call	20290 <main>
   2d524:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d528:	01000044 	movi	r4,1
   2d52c:	002cff80 	call	2cff8 <close>
  exit (result);
   2d530:	e13fff17 	ldw	r4,-4(fp)
   2d534:	002f0740 	call	2f074 <exit>

0002d538 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d538:	defffe04 	addi	sp,sp,-8
   2d53c:	df000115 	stw	fp,4(sp)
   2d540:	df000104 	addi	fp,sp,4
   2d544:	e13fff15 	stw	r4,-4(fp)
}
   2d548:	0001883a 	nop
   2d54c:	e037883a 	mov	sp,fp
   2d550:	df000017 	ldw	fp,0(sp)
   2d554:	dec00104 	addi	sp,sp,4
   2d558:	f800283a 	ret

0002d55c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d55c:	defffe04 	addi	sp,sp,-8
   2d560:	df000115 	stw	fp,4(sp)
   2d564:	df000104 	addi	fp,sp,4
   2d568:	e13fff15 	stw	r4,-4(fp)
}
   2d56c:	0001883a 	nop
   2d570:	e037883a 	mov	sp,fp
   2d574:	df000017 	ldw	fp,0(sp)
   2d578:	dec00104 	addi	sp,sp,4
   2d57c:	f800283a 	ret

0002d580 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2d580:	defffe04 	addi	sp,sp,-8
   2d584:	df000115 	stw	fp,4(sp)
   2d588:	df000104 	addi	fp,sp,4
   2d58c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2d590:	e0bfff17 	ldw	r2,-4(fp)
   2d594:	108000d0 	cmplti	r2,r2,3
   2d598:	10000d1e 	bne	r2,zero,2d5d0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2d59c:	008000f4 	movhi	r2,3
   2d5a0:	10800f04 	addi	r2,r2,60
   2d5a4:	e0ffff17 	ldw	r3,-4(fp)
   2d5a8:	18c00324 	muli	r3,r3,12
   2d5ac:	10c5883a 	add	r2,r2,r3
   2d5b0:	10800204 	addi	r2,r2,8
   2d5b4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2d5b8:	008000f4 	movhi	r2,3
   2d5bc:	10800f04 	addi	r2,r2,60
   2d5c0:	e0ffff17 	ldw	r3,-4(fp)
   2d5c4:	18c00324 	muli	r3,r3,12
   2d5c8:	10c5883a 	add	r2,r2,r3
   2d5cc:	10000015 	stw	zero,0(r2)
  }
}
   2d5d0:	0001883a 	nop
   2d5d4:	e037883a 	mov	sp,fp
   2d5d8:	df000017 	ldw	fp,0(sp)
   2d5dc:	dec00104 	addi	sp,sp,4
   2d5e0:	f800283a 	ret

0002d5e4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2d5e4:	defff904 	addi	sp,sp,-28
   2d5e8:	df000615 	stw	fp,24(sp)
   2d5ec:	df000604 	addi	fp,sp,24
   2d5f0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d5f4:	0005303a 	rdctl	r2,status
   2d5f8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d5fc:	e0fffe17 	ldw	r3,-8(fp)
   2d600:	00bfff84 	movi	r2,-2
   2d604:	1884703a 	and	r2,r3,r2
   2d608:	1001703a 	wrctl	status,r2
  
  return context;
   2d60c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2d610:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2d614:	d0a00c17 	ldw	r2,-32720(gp)
   2d618:	10c000c4 	addi	r3,r2,3
   2d61c:	00bfff04 	movi	r2,-4
   2d620:	1884703a 	and	r2,r3,r2
   2d624:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2d628:	d0e00c17 	ldw	r3,-32720(gp)
   2d62c:	e0bfff17 	ldw	r2,-4(fp)
   2d630:	1887883a 	add	r3,r3,r2
   2d634:	00800134 	movhi	r2,4
   2d638:	10800004 	addi	r2,r2,0
   2d63c:	10c0062e 	bgeu	r2,r3,2d658 <sbrk+0x74>
   2d640:	e0bffb17 	ldw	r2,-20(fp)
   2d644:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d648:	e0bffa17 	ldw	r2,-24(fp)
   2d64c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2d650:	00bfffc4 	movi	r2,-1
   2d654:	00000b06 	br	2d684 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2d658:	d0a00c17 	ldw	r2,-32720(gp)
   2d65c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2d660:	d0e00c17 	ldw	r3,-32720(gp)
   2d664:	e0bfff17 	ldw	r2,-4(fp)
   2d668:	1885883a 	add	r2,r3,r2
   2d66c:	d0a00c15 	stw	r2,-32720(gp)
   2d670:	e0bffb17 	ldw	r2,-20(fp)
   2d674:	e0bffc15 	stw	r2,-16(fp)
   2d678:	e0bffc17 	ldw	r2,-16(fp)
   2d67c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2d680:	e0bffd17 	ldw	r2,-12(fp)
} 
   2d684:	e037883a 	mov	sp,fp
   2d688:	df000017 	ldw	fp,0(sp)
   2d68c:	dec00104 	addi	sp,sp,4
   2d690:	f800283a 	ret

0002d694 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2d694:	defffd04 	addi	sp,sp,-12
   2d698:	dfc00215 	stw	ra,8(sp)
   2d69c:	df000115 	stw	fp,4(sp)
   2d6a0:	df000104 	addi	fp,sp,4
   2d6a4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2d6a8:	d1600804 	addi	r5,gp,-32736
   2d6ac:	e13fff17 	ldw	r4,-4(fp)
   2d6b0:	002e3640 	call	2e364 <alt_dev_llist_insert>
}
   2d6b4:	e037883a 	mov	sp,fp
   2d6b8:	dfc00117 	ldw	ra,4(sp)
   2d6bc:	df000017 	ldw	fp,0(sp)
   2d6c0:	dec00204 	addi	sp,sp,8
   2d6c4:	f800283a 	ret

0002d6c8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2d6c8:	defffd04 	addi	sp,sp,-12
   2d6cc:	dfc00215 	stw	ra,8(sp)
   2d6d0:	df000115 	stw	fp,4(sp)
   2d6d4:	df000104 	addi	fp,sp,4
   2d6d8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2d6dc:	002ecd40 	call	2ecd4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2d6e0:	00800044 	movi	r2,1
   2d6e4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2d6e8:	0001883a 	nop
   2d6ec:	e037883a 	mov	sp,fp
   2d6f0:	dfc00117 	ldw	ra,4(sp)
   2d6f4:	df000017 	ldw	fp,0(sp)
   2d6f8:	dec00204 	addi	sp,sp,8
   2d6fc:	f800283a 	ret

0002d700 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2d700:	defffe04 	addi	sp,sp,-8
   2d704:	dfc00115 	stw	ra,4(sp)
   2d708:	df000015 	stw	fp,0(sp)
   2d70c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2d710:	000d883a 	mov	r6,zero
   2d714:	000b883a 	mov	r5,zero
   2d718:	010000f4 	movhi	r4,3
   2d71c:	21007904 	addi	r4,r4,484
   2d720:	002d8b00 	call	2d8b0 <altera_avalon_jtag_uart_init>
   2d724:	010000f4 	movhi	r4,3
   2d728:	21006f04 	addi	r4,r4,444
   2d72c:	002d6940 	call	2d694 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
   2d730:	0001883a 	nop
}
   2d734:	0001883a 	nop
   2d738:	e037883a 	mov	sp,fp
   2d73c:	dfc00117 	ldw	ra,4(sp)
   2d740:	df000017 	ldw	fp,0(sp)
   2d744:	dec00204 	addi	sp,sp,8
   2d748:	f800283a 	ret

0002d74c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2d74c:	defffa04 	addi	sp,sp,-24
   2d750:	dfc00515 	stw	ra,20(sp)
   2d754:	df000415 	stw	fp,16(sp)
   2d758:	df000404 	addi	fp,sp,16
   2d75c:	e13ffd15 	stw	r4,-12(fp)
   2d760:	e17ffe15 	stw	r5,-8(fp)
   2d764:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d768:	e0bffd17 	ldw	r2,-12(fp)
   2d76c:	10800017 	ldw	r2,0(r2)
   2d770:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2d774:	e0bffc17 	ldw	r2,-16(fp)
   2d778:	10c00a04 	addi	r3,r2,40
   2d77c:	e0bffd17 	ldw	r2,-12(fp)
   2d780:	10800217 	ldw	r2,8(r2)
   2d784:	100f883a 	mov	r7,r2
   2d788:	e1bfff17 	ldw	r6,-4(fp)
   2d78c:	e17ffe17 	ldw	r5,-8(fp)
   2d790:	1809883a 	mov	r4,r3
   2d794:	002dd740 	call	2dd74 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2d798:	e037883a 	mov	sp,fp
   2d79c:	dfc00117 	ldw	ra,4(sp)
   2d7a0:	df000017 	ldw	fp,0(sp)
   2d7a4:	dec00204 	addi	sp,sp,8
   2d7a8:	f800283a 	ret

0002d7ac <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2d7ac:	defffa04 	addi	sp,sp,-24
   2d7b0:	dfc00515 	stw	ra,20(sp)
   2d7b4:	df000415 	stw	fp,16(sp)
   2d7b8:	df000404 	addi	fp,sp,16
   2d7bc:	e13ffd15 	stw	r4,-12(fp)
   2d7c0:	e17ffe15 	stw	r5,-8(fp)
   2d7c4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d7c8:	e0bffd17 	ldw	r2,-12(fp)
   2d7cc:	10800017 	ldw	r2,0(r2)
   2d7d0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2d7d4:	e0bffc17 	ldw	r2,-16(fp)
   2d7d8:	10c00a04 	addi	r3,r2,40
   2d7dc:	e0bffd17 	ldw	r2,-12(fp)
   2d7e0:	10800217 	ldw	r2,8(r2)
   2d7e4:	100f883a 	mov	r7,r2
   2d7e8:	e1bfff17 	ldw	r6,-4(fp)
   2d7ec:	e17ffe17 	ldw	r5,-8(fp)
   2d7f0:	1809883a 	mov	r4,r3
   2d7f4:	002df900 	call	2df90 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2d7f8:	e037883a 	mov	sp,fp
   2d7fc:	dfc00117 	ldw	ra,4(sp)
   2d800:	df000017 	ldw	fp,0(sp)
   2d804:	dec00204 	addi	sp,sp,8
   2d808:	f800283a 	ret

0002d80c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2d80c:	defffc04 	addi	sp,sp,-16
   2d810:	dfc00315 	stw	ra,12(sp)
   2d814:	df000215 	stw	fp,8(sp)
   2d818:	df000204 	addi	fp,sp,8
   2d81c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d820:	e0bfff17 	ldw	r2,-4(fp)
   2d824:	10800017 	ldw	r2,0(r2)
   2d828:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2d82c:	e0bffe17 	ldw	r2,-8(fp)
   2d830:	10c00a04 	addi	r3,r2,40
   2d834:	e0bfff17 	ldw	r2,-4(fp)
   2d838:	10800217 	ldw	r2,8(r2)
   2d83c:	100b883a 	mov	r5,r2
   2d840:	1809883a 	mov	r4,r3
   2d844:	002dc1c0 	call	2dc1c <altera_avalon_jtag_uart_close>
}
   2d848:	e037883a 	mov	sp,fp
   2d84c:	dfc00117 	ldw	ra,4(sp)
   2d850:	df000017 	ldw	fp,0(sp)
   2d854:	dec00204 	addi	sp,sp,8
   2d858:	f800283a 	ret

0002d85c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2d85c:	defffa04 	addi	sp,sp,-24
   2d860:	dfc00515 	stw	ra,20(sp)
   2d864:	df000415 	stw	fp,16(sp)
   2d868:	df000404 	addi	fp,sp,16
   2d86c:	e13ffd15 	stw	r4,-12(fp)
   2d870:	e17ffe15 	stw	r5,-8(fp)
   2d874:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2d878:	e0bffd17 	ldw	r2,-12(fp)
   2d87c:	10800017 	ldw	r2,0(r2)
   2d880:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2d884:	e0bffc17 	ldw	r2,-16(fp)
   2d888:	10800a04 	addi	r2,r2,40
   2d88c:	e1bfff17 	ldw	r6,-4(fp)
   2d890:	e17ffe17 	ldw	r5,-8(fp)
   2d894:	1009883a 	mov	r4,r2
   2d898:	002dc840 	call	2dc84 <altera_avalon_jtag_uart_ioctl>
}
   2d89c:	e037883a 	mov	sp,fp
   2d8a0:	dfc00117 	ldw	ra,4(sp)
   2d8a4:	df000017 	ldw	fp,0(sp)
   2d8a8:	dec00204 	addi	sp,sp,8
   2d8ac:	f800283a 	ret

0002d8b0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2d8b0:	defffa04 	addi	sp,sp,-24
   2d8b4:	dfc00515 	stw	ra,20(sp)
   2d8b8:	df000415 	stw	fp,16(sp)
   2d8bc:	df000404 	addi	fp,sp,16
   2d8c0:	e13ffd15 	stw	r4,-12(fp)
   2d8c4:	e17ffe15 	stw	r5,-8(fp)
   2d8c8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d8cc:	e0bffd17 	ldw	r2,-12(fp)
   2d8d0:	00c00044 	movi	r3,1
   2d8d4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2d8d8:	e0bffd17 	ldw	r2,-12(fp)
   2d8dc:	10800017 	ldw	r2,0(r2)
   2d8e0:	10800104 	addi	r2,r2,4
   2d8e4:	1007883a 	mov	r3,r2
   2d8e8:	e0bffd17 	ldw	r2,-12(fp)
   2d8ec:	10800817 	ldw	r2,32(r2)
   2d8f0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2d8f4:	e0bffe17 	ldw	r2,-8(fp)
   2d8f8:	e0ffff17 	ldw	r3,-4(fp)
   2d8fc:	d8000015 	stw	zero,0(sp)
   2d900:	e1fffd17 	ldw	r7,-12(fp)
   2d904:	018000f4 	movhi	r6,3
   2d908:	31b65c04 	addi	r6,r6,-9872
   2d90c:	180b883a 	mov	r5,r3
   2d910:	1009883a 	mov	r4,r2
   2d914:	002e4fc0 	call	2e4fc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2d918:	e0bffd17 	ldw	r2,-12(fp)
   2d91c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2d920:	e0bffd17 	ldw	r2,-12(fp)
   2d924:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2d928:	d0e6d617 	ldw	r3,-25768(gp)
   2d92c:	e1fffd17 	ldw	r7,-12(fp)
   2d930:	018000f4 	movhi	r6,3
   2d934:	31b6df04 	addi	r6,r6,-9348
   2d938:	180b883a 	mov	r5,r3
   2d93c:	1009883a 	mov	r4,r2
   2d940:	002e1b40 	call	2e1b4 <alt_alarm_start>
   2d944:	1000040e 	bge	r2,zero,2d958 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2d948:	e0fffd17 	ldw	r3,-12(fp)
   2d94c:	00a00034 	movhi	r2,32768
   2d950:	10bfffc4 	addi	r2,r2,-1
   2d954:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2d958:	0001883a 	nop
   2d95c:	e037883a 	mov	sp,fp
   2d960:	dfc00117 	ldw	ra,4(sp)
   2d964:	df000017 	ldw	fp,0(sp)
   2d968:	dec00204 	addi	sp,sp,8
   2d96c:	f800283a 	ret

0002d970 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2d970:	defff804 	addi	sp,sp,-32
   2d974:	df000715 	stw	fp,28(sp)
   2d978:	df000704 	addi	fp,sp,28
   2d97c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2d980:	e0bfff17 	ldw	r2,-4(fp)
   2d984:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2d988:	e0bffb17 	ldw	r2,-20(fp)
   2d98c:	10800017 	ldw	r2,0(r2)
   2d990:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d994:	e0bffc17 	ldw	r2,-16(fp)
   2d998:	10800104 	addi	r2,r2,4
   2d99c:	10800037 	ldwio	r2,0(r2)
   2d9a0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2d9a4:	e0bffd17 	ldw	r2,-12(fp)
   2d9a8:	1080c00c 	andi	r2,r2,768
   2d9ac:	10006d26 	beq	r2,zero,2db64 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2d9b0:	e0bffd17 	ldw	r2,-12(fp)
   2d9b4:	1080400c 	andi	r2,r2,256
   2d9b8:	10003526 	beq	r2,zero,2da90 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2d9bc:	00800074 	movhi	r2,1
   2d9c0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d9c4:	e0bffb17 	ldw	r2,-20(fp)
   2d9c8:	10800a17 	ldw	r2,40(r2)
   2d9cc:	10800044 	addi	r2,r2,1
   2d9d0:	1081ffcc 	andi	r2,r2,2047
   2d9d4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2d9d8:	e0bffb17 	ldw	r2,-20(fp)
   2d9dc:	10c00b17 	ldw	r3,44(r2)
   2d9e0:	e0bffe17 	ldw	r2,-8(fp)
   2d9e4:	18801526 	beq	r3,r2,2da3c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2d9e8:	e0bffc17 	ldw	r2,-16(fp)
   2d9ec:	10800037 	ldwio	r2,0(r2)
   2d9f0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2d9f4:	e0bff917 	ldw	r2,-28(fp)
   2d9f8:	10a0000c 	andi	r2,r2,32768
   2d9fc:	10001126 	beq	r2,zero,2da44 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2da00:	e0bffb17 	ldw	r2,-20(fp)
   2da04:	10800a17 	ldw	r2,40(r2)
   2da08:	e0fff917 	ldw	r3,-28(fp)
   2da0c:	1809883a 	mov	r4,r3
   2da10:	e0fffb17 	ldw	r3,-20(fp)
   2da14:	1885883a 	add	r2,r3,r2
   2da18:	10800e04 	addi	r2,r2,56
   2da1c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2da20:	e0bffb17 	ldw	r2,-20(fp)
   2da24:	10800a17 	ldw	r2,40(r2)
   2da28:	10800044 	addi	r2,r2,1
   2da2c:	10c1ffcc 	andi	r3,r2,2047
   2da30:	e0bffb17 	ldw	r2,-20(fp)
   2da34:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2da38:	003fe206 	br	2d9c4 <__alt_data_end+0xfffed9c4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2da3c:	0001883a 	nop
   2da40:	00000106 	br	2da48 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2da44:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2da48:	e0bff917 	ldw	r2,-28(fp)
   2da4c:	10bfffec 	andhi	r2,r2,65535
   2da50:	10000f26 	beq	r2,zero,2da90 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2da54:	e0bffb17 	ldw	r2,-20(fp)
   2da58:	10c00817 	ldw	r3,32(r2)
   2da5c:	00bfff84 	movi	r2,-2
   2da60:	1886703a 	and	r3,r3,r2
   2da64:	e0bffb17 	ldw	r2,-20(fp)
   2da68:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2da6c:	e0bffc17 	ldw	r2,-16(fp)
   2da70:	10800104 	addi	r2,r2,4
   2da74:	1007883a 	mov	r3,r2
   2da78:	e0bffb17 	ldw	r2,-20(fp)
   2da7c:	10800817 	ldw	r2,32(r2)
   2da80:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2da84:	e0bffc17 	ldw	r2,-16(fp)
   2da88:	10800104 	addi	r2,r2,4
   2da8c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2da90:	e0bffd17 	ldw	r2,-12(fp)
   2da94:	1080800c 	andi	r2,r2,512
   2da98:	103fbe26 	beq	r2,zero,2d994 <__alt_data_end+0xfffed994>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2da9c:	e0bffd17 	ldw	r2,-12(fp)
   2daa0:	1004d43a 	srli	r2,r2,16
   2daa4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2daa8:	00001406 	br	2dafc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2daac:	e0bffc17 	ldw	r2,-16(fp)
   2dab0:	e0fffb17 	ldw	r3,-20(fp)
   2dab4:	18c00d17 	ldw	r3,52(r3)
   2dab8:	e13ffb17 	ldw	r4,-20(fp)
   2dabc:	20c7883a 	add	r3,r4,r3
   2dac0:	18c20e04 	addi	r3,r3,2104
   2dac4:	18c00003 	ldbu	r3,0(r3)
   2dac8:	18c03fcc 	andi	r3,r3,255
   2dacc:	18c0201c 	xori	r3,r3,128
   2dad0:	18ffe004 	addi	r3,r3,-128
   2dad4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2dad8:	e0bffb17 	ldw	r2,-20(fp)
   2dadc:	10800d17 	ldw	r2,52(r2)
   2dae0:	10800044 	addi	r2,r2,1
   2dae4:	10c1ffcc 	andi	r3,r2,2047
   2dae8:	e0bffb17 	ldw	r2,-20(fp)
   2daec:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2daf0:	e0bffa17 	ldw	r2,-24(fp)
   2daf4:	10bfffc4 	addi	r2,r2,-1
   2daf8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2dafc:	e0bffa17 	ldw	r2,-24(fp)
   2db00:	10000526 	beq	r2,zero,2db18 <altera_avalon_jtag_uart_irq+0x1a8>
   2db04:	e0bffb17 	ldw	r2,-20(fp)
   2db08:	10c00d17 	ldw	r3,52(r2)
   2db0c:	e0bffb17 	ldw	r2,-20(fp)
   2db10:	10800c17 	ldw	r2,48(r2)
   2db14:	18bfe51e 	bne	r3,r2,2daac <__alt_data_end+0xfffedaac>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2db18:	e0bffa17 	ldw	r2,-24(fp)
   2db1c:	103f9d26 	beq	r2,zero,2d994 <__alt_data_end+0xfffed994>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2db20:	e0bffb17 	ldw	r2,-20(fp)
   2db24:	10c00817 	ldw	r3,32(r2)
   2db28:	00bfff44 	movi	r2,-3
   2db2c:	1886703a 	and	r3,r3,r2
   2db30:	e0bffb17 	ldw	r2,-20(fp)
   2db34:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2db38:	e0bffb17 	ldw	r2,-20(fp)
   2db3c:	10800017 	ldw	r2,0(r2)
   2db40:	10800104 	addi	r2,r2,4
   2db44:	1007883a 	mov	r3,r2
   2db48:	e0bffb17 	ldw	r2,-20(fp)
   2db4c:	10800817 	ldw	r2,32(r2)
   2db50:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2db54:	e0bffc17 	ldw	r2,-16(fp)
   2db58:	10800104 	addi	r2,r2,4
   2db5c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2db60:	003f8c06 	br	2d994 <__alt_data_end+0xfffed994>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2db64:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2db68:	0001883a 	nop
   2db6c:	e037883a 	mov	sp,fp
   2db70:	df000017 	ldw	fp,0(sp)
   2db74:	dec00104 	addi	sp,sp,4
   2db78:	f800283a 	ret

0002db7c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2db7c:	defff804 	addi	sp,sp,-32
   2db80:	df000715 	stw	fp,28(sp)
   2db84:	df000704 	addi	fp,sp,28
   2db88:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2db8c:	e0bffb17 	ldw	r2,-20(fp)
   2db90:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2db94:	e0bff917 	ldw	r2,-28(fp)
   2db98:	10800017 	ldw	r2,0(r2)
   2db9c:	10800104 	addi	r2,r2,4
   2dba0:	10800037 	ldwio	r2,0(r2)
   2dba4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2dba8:	e0bffa17 	ldw	r2,-24(fp)
   2dbac:	1081000c 	andi	r2,r2,1024
   2dbb0:	10000b26 	beq	r2,zero,2dbe0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2dbb4:	e0bff917 	ldw	r2,-28(fp)
   2dbb8:	10800017 	ldw	r2,0(r2)
   2dbbc:	10800104 	addi	r2,r2,4
   2dbc0:	1007883a 	mov	r3,r2
   2dbc4:	e0bff917 	ldw	r2,-28(fp)
   2dbc8:	10800817 	ldw	r2,32(r2)
   2dbcc:	10810014 	ori	r2,r2,1024
   2dbd0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2dbd4:	e0bff917 	ldw	r2,-28(fp)
   2dbd8:	10000915 	stw	zero,36(r2)
   2dbdc:	00000a06 	br	2dc08 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2dbe0:	e0bff917 	ldw	r2,-28(fp)
   2dbe4:	10c00917 	ldw	r3,36(r2)
   2dbe8:	00a00034 	movhi	r2,32768
   2dbec:	10bfff04 	addi	r2,r2,-4
   2dbf0:	10c00536 	bltu	r2,r3,2dc08 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2dbf4:	e0bff917 	ldw	r2,-28(fp)
   2dbf8:	10800917 	ldw	r2,36(r2)
   2dbfc:	10c00044 	addi	r3,r2,1
   2dc00:	e0bff917 	ldw	r2,-28(fp)
   2dc04:	10c00915 	stw	r3,36(r2)
   2dc08:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2dc0c:	e037883a 	mov	sp,fp
   2dc10:	df000017 	ldw	fp,0(sp)
   2dc14:	dec00104 	addi	sp,sp,4
   2dc18:	f800283a 	ret

0002dc1c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2dc1c:	defffd04 	addi	sp,sp,-12
   2dc20:	df000215 	stw	fp,8(sp)
   2dc24:	df000204 	addi	fp,sp,8
   2dc28:	e13ffe15 	stw	r4,-8(fp)
   2dc2c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dc30:	00000506 	br	2dc48 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2dc34:	e0bfff17 	ldw	r2,-4(fp)
   2dc38:	1090000c 	andi	r2,r2,16384
   2dc3c:	10000226 	beq	r2,zero,2dc48 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2dc40:	00bffd44 	movi	r2,-11
   2dc44:	00000b06 	br	2dc74 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dc48:	e0bffe17 	ldw	r2,-8(fp)
   2dc4c:	10c00d17 	ldw	r3,52(r2)
   2dc50:	e0bffe17 	ldw	r2,-8(fp)
   2dc54:	10800c17 	ldw	r2,48(r2)
   2dc58:	18800526 	beq	r3,r2,2dc70 <altera_avalon_jtag_uart_close+0x54>
   2dc5c:	e0bffe17 	ldw	r2,-8(fp)
   2dc60:	10c00917 	ldw	r3,36(r2)
   2dc64:	e0bffe17 	ldw	r2,-8(fp)
   2dc68:	10800117 	ldw	r2,4(r2)
   2dc6c:	18bff136 	bltu	r3,r2,2dc34 <__alt_data_end+0xfffedc34>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2dc70:	0005883a 	mov	r2,zero
}
   2dc74:	e037883a 	mov	sp,fp
   2dc78:	df000017 	ldw	fp,0(sp)
   2dc7c:	dec00104 	addi	sp,sp,4
   2dc80:	f800283a 	ret

0002dc84 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2dc84:	defffa04 	addi	sp,sp,-24
   2dc88:	df000515 	stw	fp,20(sp)
   2dc8c:	df000504 	addi	fp,sp,20
   2dc90:	e13ffd15 	stw	r4,-12(fp)
   2dc94:	e17ffe15 	stw	r5,-8(fp)
   2dc98:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2dc9c:	00bff9c4 	movi	r2,-25
   2dca0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2dca4:	e0bffe17 	ldw	r2,-8(fp)
   2dca8:	10da8060 	cmpeqi	r3,r2,27137
   2dcac:	1800031e 	bne	r3,zero,2dcbc <altera_avalon_jtag_uart_ioctl+0x38>
   2dcb0:	109a80a0 	cmpeqi	r2,r2,27138
   2dcb4:	1000181e 	bne	r2,zero,2dd18 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2dcb8:	00002906 	br	2dd60 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2dcbc:	e0bffd17 	ldw	r2,-12(fp)
   2dcc0:	10c00117 	ldw	r3,4(r2)
   2dcc4:	00a00034 	movhi	r2,32768
   2dcc8:	10bfffc4 	addi	r2,r2,-1
   2dccc:	18802126 	beq	r3,r2,2dd54 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2dcd0:	e0bfff17 	ldw	r2,-4(fp)
   2dcd4:	10800017 	ldw	r2,0(r2)
   2dcd8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2dcdc:	e0bffc17 	ldw	r2,-16(fp)
   2dce0:	10800090 	cmplti	r2,r2,2
   2dce4:	1000061e 	bne	r2,zero,2dd00 <altera_avalon_jtag_uart_ioctl+0x7c>
   2dce8:	e0fffc17 	ldw	r3,-16(fp)
   2dcec:	00a00034 	movhi	r2,32768
   2dcf0:	10bfffc4 	addi	r2,r2,-1
   2dcf4:	18800226 	beq	r3,r2,2dd00 <altera_avalon_jtag_uart_ioctl+0x7c>
   2dcf8:	e0bffc17 	ldw	r2,-16(fp)
   2dcfc:	00000206 	br	2dd08 <altera_avalon_jtag_uart_ioctl+0x84>
   2dd00:	00a00034 	movhi	r2,32768
   2dd04:	10bfff84 	addi	r2,r2,-2
   2dd08:	e0fffd17 	ldw	r3,-12(fp)
   2dd0c:	18800115 	stw	r2,4(r3)
      rc = 0;
   2dd10:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dd14:	00000f06 	br	2dd54 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2dd18:	e0bffd17 	ldw	r2,-12(fp)
   2dd1c:	10c00117 	ldw	r3,4(r2)
   2dd20:	00a00034 	movhi	r2,32768
   2dd24:	10bfffc4 	addi	r2,r2,-1
   2dd28:	18800c26 	beq	r3,r2,2dd5c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2dd2c:	e0bffd17 	ldw	r2,-12(fp)
   2dd30:	10c00917 	ldw	r3,36(r2)
   2dd34:	e0bffd17 	ldw	r2,-12(fp)
   2dd38:	10800117 	ldw	r2,4(r2)
   2dd3c:	1885803a 	cmpltu	r2,r3,r2
   2dd40:	10c03fcc 	andi	r3,r2,255
   2dd44:	e0bfff17 	ldw	r2,-4(fp)
   2dd48:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2dd4c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dd50:	00000206 	br	2dd5c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2dd54:	0001883a 	nop
   2dd58:	00000106 	br	2dd60 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2dd5c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2dd60:	e0bffb17 	ldw	r2,-20(fp)
}
   2dd64:	e037883a 	mov	sp,fp
   2dd68:	df000017 	ldw	fp,0(sp)
   2dd6c:	dec00104 	addi	sp,sp,4
   2dd70:	f800283a 	ret

0002dd74 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2dd74:	defff304 	addi	sp,sp,-52
   2dd78:	dfc00c15 	stw	ra,48(sp)
   2dd7c:	df000b15 	stw	fp,44(sp)
   2dd80:	df000b04 	addi	fp,sp,44
   2dd84:	e13ffc15 	stw	r4,-16(fp)
   2dd88:	e17ffd15 	stw	r5,-12(fp)
   2dd8c:	e1bffe15 	stw	r6,-8(fp)
   2dd90:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2dd94:	e0bffd17 	ldw	r2,-12(fp)
   2dd98:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2dd9c:	00004706 	br	2debc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2dda0:	e0bffc17 	ldw	r2,-16(fp)
   2dda4:	10800a17 	ldw	r2,40(r2)
   2dda8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2ddac:	e0bffc17 	ldw	r2,-16(fp)
   2ddb0:	10800b17 	ldw	r2,44(r2)
   2ddb4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2ddb8:	e0fff717 	ldw	r3,-36(fp)
   2ddbc:	e0bff817 	ldw	r2,-32(fp)
   2ddc0:	18800536 	bltu	r3,r2,2ddd8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2ddc4:	e0fff717 	ldw	r3,-36(fp)
   2ddc8:	e0bff817 	ldw	r2,-32(fp)
   2ddcc:	1885c83a 	sub	r2,r3,r2
   2ddd0:	e0bff615 	stw	r2,-40(fp)
   2ddd4:	00000406 	br	2dde8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2ddd8:	00c20004 	movi	r3,2048
   2dddc:	e0bff817 	ldw	r2,-32(fp)
   2dde0:	1885c83a 	sub	r2,r3,r2
   2dde4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2dde8:	e0bff617 	ldw	r2,-40(fp)
   2ddec:	10001e26 	beq	r2,zero,2de68 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2ddf0:	e0fffe17 	ldw	r3,-8(fp)
   2ddf4:	e0bff617 	ldw	r2,-40(fp)
   2ddf8:	1880022e 	bgeu	r3,r2,2de04 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2ddfc:	e0bffe17 	ldw	r2,-8(fp)
   2de00:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2de04:	e0bffc17 	ldw	r2,-16(fp)
   2de08:	10c00e04 	addi	r3,r2,56
   2de0c:	e0bff817 	ldw	r2,-32(fp)
   2de10:	1885883a 	add	r2,r3,r2
   2de14:	e1bff617 	ldw	r6,-40(fp)
   2de18:	100b883a 	mov	r5,r2
   2de1c:	e13ff517 	ldw	r4,-44(fp)
   2de20:	00261680 	call	26168 <memcpy>
      ptr   += n;
   2de24:	e0fff517 	ldw	r3,-44(fp)
   2de28:	e0bff617 	ldw	r2,-40(fp)
   2de2c:	1885883a 	add	r2,r3,r2
   2de30:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2de34:	e0fffe17 	ldw	r3,-8(fp)
   2de38:	e0bff617 	ldw	r2,-40(fp)
   2de3c:	1885c83a 	sub	r2,r3,r2
   2de40:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2de44:	e0fff817 	ldw	r3,-32(fp)
   2de48:	e0bff617 	ldw	r2,-40(fp)
   2de4c:	1885883a 	add	r2,r3,r2
   2de50:	10c1ffcc 	andi	r3,r2,2047
   2de54:	e0bffc17 	ldw	r2,-16(fp)
   2de58:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2de5c:	e0bffe17 	ldw	r2,-8(fp)
   2de60:	00bfcf16 	blt	zero,r2,2dda0 <__alt_data_end+0xfffedda0>
   2de64:	00000106 	br	2de6c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2de68:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2de6c:	e0fff517 	ldw	r3,-44(fp)
   2de70:	e0bffd17 	ldw	r2,-12(fp)
   2de74:	1880141e 	bne	r3,r2,2dec8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2de78:	e0bfff17 	ldw	r2,-4(fp)
   2de7c:	1090000c 	andi	r2,r2,16384
   2de80:	1000131e 	bne	r2,zero,2ded0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2de84:	0001883a 	nop
   2de88:	e0bffc17 	ldw	r2,-16(fp)
   2de8c:	10c00a17 	ldw	r3,40(r2)
   2de90:	e0bff717 	ldw	r2,-36(fp)
   2de94:	1880051e 	bne	r3,r2,2deac <altera_avalon_jtag_uart_read+0x138>
   2de98:	e0bffc17 	ldw	r2,-16(fp)
   2de9c:	10c00917 	ldw	r3,36(r2)
   2dea0:	e0bffc17 	ldw	r2,-16(fp)
   2dea4:	10800117 	ldw	r2,4(r2)
   2dea8:	18bff736 	bltu	r3,r2,2de88 <__alt_data_end+0xfffede88>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2deac:	e0bffc17 	ldw	r2,-16(fp)
   2deb0:	10c00a17 	ldw	r3,40(r2)
   2deb4:	e0bff717 	ldw	r2,-36(fp)
   2deb8:	18800726 	beq	r3,r2,2ded8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2debc:	e0bffe17 	ldw	r2,-8(fp)
   2dec0:	00bfb716 	blt	zero,r2,2dda0 <__alt_data_end+0xfffedda0>
   2dec4:	00000506 	br	2dedc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2dec8:	0001883a 	nop
   2decc:	00000306 	br	2dedc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2ded0:	0001883a 	nop
   2ded4:	00000106 	br	2dedc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2ded8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2dedc:	e0fff517 	ldw	r3,-44(fp)
   2dee0:	e0bffd17 	ldw	r2,-12(fp)
   2dee4:	18801826 	beq	r3,r2,2df48 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2dee8:	0005303a 	rdctl	r2,status
   2deec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2def0:	e0fffb17 	ldw	r3,-20(fp)
   2def4:	00bfff84 	movi	r2,-2
   2def8:	1884703a 	and	r2,r3,r2
   2defc:	1001703a 	wrctl	status,r2
  
  return context;
   2df00:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2df04:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2df08:	e0bffc17 	ldw	r2,-16(fp)
   2df0c:	10800817 	ldw	r2,32(r2)
   2df10:	10c00054 	ori	r3,r2,1
   2df14:	e0bffc17 	ldw	r2,-16(fp)
   2df18:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2df1c:	e0bffc17 	ldw	r2,-16(fp)
   2df20:	10800017 	ldw	r2,0(r2)
   2df24:	10800104 	addi	r2,r2,4
   2df28:	1007883a 	mov	r3,r2
   2df2c:	e0bffc17 	ldw	r2,-16(fp)
   2df30:	10800817 	ldw	r2,32(r2)
   2df34:	18800035 	stwio	r2,0(r3)
   2df38:	e0bffa17 	ldw	r2,-24(fp)
   2df3c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2df40:	e0bff917 	ldw	r2,-28(fp)
   2df44:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2df48:	e0fff517 	ldw	r3,-44(fp)
   2df4c:	e0bffd17 	ldw	r2,-12(fp)
   2df50:	18800426 	beq	r3,r2,2df64 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2df54:	e0fff517 	ldw	r3,-44(fp)
   2df58:	e0bffd17 	ldw	r2,-12(fp)
   2df5c:	1885c83a 	sub	r2,r3,r2
   2df60:	00000606 	br	2df7c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2df64:	e0bfff17 	ldw	r2,-4(fp)
   2df68:	1090000c 	andi	r2,r2,16384
   2df6c:	10000226 	beq	r2,zero,2df78 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2df70:	00bffd44 	movi	r2,-11
   2df74:	00000106 	br	2df7c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2df78:	00bffec4 	movi	r2,-5
}
   2df7c:	e037883a 	mov	sp,fp
   2df80:	dfc00117 	ldw	ra,4(sp)
   2df84:	df000017 	ldw	fp,0(sp)
   2df88:	dec00204 	addi	sp,sp,8
   2df8c:	f800283a 	ret

0002df90 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2df90:	defff304 	addi	sp,sp,-52
   2df94:	dfc00c15 	stw	ra,48(sp)
   2df98:	df000b15 	stw	fp,44(sp)
   2df9c:	df000b04 	addi	fp,sp,44
   2dfa0:	e13ffc15 	stw	r4,-16(fp)
   2dfa4:	e17ffd15 	stw	r5,-12(fp)
   2dfa8:	e1bffe15 	stw	r6,-8(fp)
   2dfac:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2dfb0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2dfb4:	e0bffd17 	ldw	r2,-12(fp)
   2dfb8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2dfbc:	00003706 	br	2e09c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2dfc0:	e0bffc17 	ldw	r2,-16(fp)
   2dfc4:	10800c17 	ldw	r2,48(r2)
   2dfc8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2dfcc:	e0bffc17 	ldw	r2,-16(fp)
   2dfd0:	10800d17 	ldw	r2,52(r2)
   2dfd4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2dfd8:	e0fff917 	ldw	r3,-28(fp)
   2dfdc:	e0bff517 	ldw	r2,-44(fp)
   2dfe0:	1880062e 	bgeu	r3,r2,2dffc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2dfe4:	e0fff517 	ldw	r3,-44(fp)
   2dfe8:	e0bff917 	ldw	r2,-28(fp)
   2dfec:	1885c83a 	sub	r2,r3,r2
   2dff0:	10bfffc4 	addi	r2,r2,-1
   2dff4:	e0bff615 	stw	r2,-40(fp)
   2dff8:	00000b06 	br	2e028 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2dffc:	e0bff517 	ldw	r2,-44(fp)
   2e000:	10000526 	beq	r2,zero,2e018 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2e004:	00c20004 	movi	r3,2048
   2e008:	e0bff917 	ldw	r2,-28(fp)
   2e00c:	1885c83a 	sub	r2,r3,r2
   2e010:	e0bff615 	stw	r2,-40(fp)
   2e014:	00000406 	br	2e028 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2e018:	00c1ffc4 	movi	r3,2047
   2e01c:	e0bff917 	ldw	r2,-28(fp)
   2e020:	1885c83a 	sub	r2,r3,r2
   2e024:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2e028:	e0bff617 	ldw	r2,-40(fp)
   2e02c:	10001e26 	beq	r2,zero,2e0a8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2e030:	e0fffe17 	ldw	r3,-8(fp)
   2e034:	e0bff617 	ldw	r2,-40(fp)
   2e038:	1880022e 	bgeu	r3,r2,2e044 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2e03c:	e0bffe17 	ldw	r2,-8(fp)
   2e040:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2e044:	e0bffc17 	ldw	r2,-16(fp)
   2e048:	10c20e04 	addi	r3,r2,2104
   2e04c:	e0bff917 	ldw	r2,-28(fp)
   2e050:	1885883a 	add	r2,r3,r2
   2e054:	e1bff617 	ldw	r6,-40(fp)
   2e058:	e17ffd17 	ldw	r5,-12(fp)
   2e05c:	1009883a 	mov	r4,r2
   2e060:	00261680 	call	26168 <memcpy>
      ptr   += n;
   2e064:	e0fffd17 	ldw	r3,-12(fp)
   2e068:	e0bff617 	ldw	r2,-40(fp)
   2e06c:	1885883a 	add	r2,r3,r2
   2e070:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2e074:	e0fffe17 	ldw	r3,-8(fp)
   2e078:	e0bff617 	ldw	r2,-40(fp)
   2e07c:	1885c83a 	sub	r2,r3,r2
   2e080:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e084:	e0fff917 	ldw	r3,-28(fp)
   2e088:	e0bff617 	ldw	r2,-40(fp)
   2e08c:	1885883a 	add	r2,r3,r2
   2e090:	10c1ffcc 	andi	r3,r2,2047
   2e094:	e0bffc17 	ldw	r2,-16(fp)
   2e098:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e09c:	e0bffe17 	ldw	r2,-8(fp)
   2e0a0:	00bfc716 	blt	zero,r2,2dfc0 <__alt_data_end+0xfffedfc0>
   2e0a4:	00000106 	br	2e0ac <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2e0a8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e0ac:	0005303a 	rdctl	r2,status
   2e0b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e0b4:	e0fffb17 	ldw	r3,-20(fp)
   2e0b8:	00bfff84 	movi	r2,-2
   2e0bc:	1884703a 	and	r2,r3,r2
   2e0c0:	1001703a 	wrctl	status,r2
  
  return context;
   2e0c4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e0c8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e0cc:	e0bffc17 	ldw	r2,-16(fp)
   2e0d0:	10800817 	ldw	r2,32(r2)
   2e0d4:	10c00094 	ori	r3,r2,2
   2e0d8:	e0bffc17 	ldw	r2,-16(fp)
   2e0dc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e0e0:	e0bffc17 	ldw	r2,-16(fp)
   2e0e4:	10800017 	ldw	r2,0(r2)
   2e0e8:	10800104 	addi	r2,r2,4
   2e0ec:	1007883a 	mov	r3,r2
   2e0f0:	e0bffc17 	ldw	r2,-16(fp)
   2e0f4:	10800817 	ldw	r2,32(r2)
   2e0f8:	18800035 	stwio	r2,0(r3)
   2e0fc:	e0bffa17 	ldw	r2,-24(fp)
   2e100:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e104:	e0bff817 	ldw	r2,-32(fp)
   2e108:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e10c:	e0bffe17 	ldw	r2,-8(fp)
   2e110:	0080100e 	bge	zero,r2,2e154 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2e114:	e0bfff17 	ldw	r2,-4(fp)
   2e118:	1090000c 	andi	r2,r2,16384
   2e11c:	1000101e 	bne	r2,zero,2e160 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2e120:	0001883a 	nop
   2e124:	e0bffc17 	ldw	r2,-16(fp)
   2e128:	10c00d17 	ldw	r3,52(r2)
   2e12c:	e0bff517 	ldw	r2,-44(fp)
   2e130:	1880051e 	bne	r3,r2,2e148 <altera_avalon_jtag_uart_write+0x1b8>
   2e134:	e0bffc17 	ldw	r2,-16(fp)
   2e138:	10c00917 	ldw	r3,36(r2)
   2e13c:	e0bffc17 	ldw	r2,-16(fp)
   2e140:	10800117 	ldw	r2,4(r2)
   2e144:	18bff736 	bltu	r3,r2,2e124 <__alt_data_end+0xfffee124>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2e148:	e0bffc17 	ldw	r2,-16(fp)
   2e14c:	10800917 	ldw	r2,36(r2)
   2e150:	1000051e 	bne	r2,zero,2e168 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2e154:	e0bffe17 	ldw	r2,-8(fp)
   2e158:	00bfd016 	blt	zero,r2,2e09c <__alt_data_end+0xfffee09c>
   2e15c:	00000306 	br	2e16c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2e160:	0001883a 	nop
   2e164:	00000106 	br	2e16c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2e168:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2e16c:	e0fffd17 	ldw	r3,-12(fp)
   2e170:	e0bff717 	ldw	r2,-36(fp)
   2e174:	18800426 	beq	r3,r2,2e188 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2e178:	e0fffd17 	ldw	r3,-12(fp)
   2e17c:	e0bff717 	ldw	r2,-36(fp)
   2e180:	1885c83a 	sub	r2,r3,r2
   2e184:	00000606 	br	2e1a0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2e188:	e0bfff17 	ldw	r2,-4(fp)
   2e18c:	1090000c 	andi	r2,r2,16384
   2e190:	10000226 	beq	r2,zero,2e19c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2e194:	00bffd44 	movi	r2,-11
   2e198:	00000106 	br	2e1a0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2e19c:	00bffec4 	movi	r2,-5
}
   2e1a0:	e037883a 	mov	sp,fp
   2e1a4:	dfc00117 	ldw	ra,4(sp)
   2e1a8:	df000017 	ldw	fp,0(sp)
   2e1ac:	dec00204 	addi	sp,sp,8
   2e1b0:	f800283a 	ret

0002e1b4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2e1b4:	defff504 	addi	sp,sp,-44
   2e1b8:	df000a15 	stw	fp,40(sp)
   2e1bc:	df000a04 	addi	fp,sp,40
   2e1c0:	e13ffc15 	stw	r4,-16(fp)
   2e1c4:	e17ffd15 	stw	r5,-12(fp)
   2e1c8:	e1bffe15 	stw	r6,-8(fp)
   2e1cc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2e1d0:	e03ff615 	stw	zero,-40(fp)
   2e1d4:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   2e1d8:	10003c26 	beq	r2,zero,2e2cc <alt_alarm_start+0x118>
  {
    if (alarm)
   2e1dc:	e0bffc17 	ldw	r2,-16(fp)
   2e1e0:	10003826 	beq	r2,zero,2e2c4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2e1e4:	e0bffc17 	ldw	r2,-16(fp)
   2e1e8:	e0fffe17 	ldw	r3,-8(fp)
   2e1ec:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2e1f0:	e0bffc17 	ldw	r2,-16(fp)
   2e1f4:	e0ffff17 	ldw	r3,-4(fp)
   2e1f8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e1fc:	0005303a 	rdctl	r2,status
   2e200:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e204:	e0fff917 	ldw	r3,-28(fp)
   2e208:	00bfff84 	movi	r2,-2
   2e20c:	1884703a 	and	r2,r3,r2
   2e210:	1001703a 	wrctl	status,r2
  
  return context;
   2e214:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2e218:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e21c:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   2e220:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e224:	e0fffd17 	ldw	r3,-12(fp)
   2e228:	e0bff617 	ldw	r2,-40(fp)
   2e22c:	1885883a 	add	r2,r3,r2
   2e230:	10c00044 	addi	r3,r2,1
   2e234:	e0bffc17 	ldw	r2,-16(fp)
   2e238:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2e23c:	e0bffc17 	ldw	r2,-16(fp)
   2e240:	10c00217 	ldw	r3,8(r2)
   2e244:	e0bff617 	ldw	r2,-40(fp)
   2e248:	1880042e 	bgeu	r3,r2,2e25c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2e24c:	e0bffc17 	ldw	r2,-16(fp)
   2e250:	00c00044 	movi	r3,1
   2e254:	10c00405 	stb	r3,16(r2)
   2e258:	00000206 	br	2e264 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2e25c:	e0bffc17 	ldw	r2,-16(fp)
   2e260:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2e264:	e0bffc17 	ldw	r2,-16(fp)
   2e268:	d0e00e04 	addi	r3,gp,-32712
   2e26c:	e0fffa15 	stw	r3,-24(fp)
   2e270:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e274:	e0bffb17 	ldw	r2,-20(fp)
   2e278:	e0fffa17 	ldw	r3,-24(fp)
   2e27c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e280:	e0bffa17 	ldw	r2,-24(fp)
   2e284:	10c00017 	ldw	r3,0(r2)
   2e288:	e0bffb17 	ldw	r2,-20(fp)
   2e28c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e290:	e0bffa17 	ldw	r2,-24(fp)
   2e294:	10800017 	ldw	r2,0(r2)
   2e298:	e0fffb17 	ldw	r3,-20(fp)
   2e29c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e2a0:	e0bffa17 	ldw	r2,-24(fp)
   2e2a4:	e0fffb17 	ldw	r3,-20(fp)
   2e2a8:	10c00015 	stw	r3,0(r2)
   2e2ac:	e0bff817 	ldw	r2,-32(fp)
   2e2b0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e2b4:	e0bff717 	ldw	r2,-36(fp)
   2e2b8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2e2bc:	0005883a 	mov	r2,zero
   2e2c0:	00000306 	br	2e2d0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2e2c4:	00bffa84 	movi	r2,-22
   2e2c8:	00000106 	br	2e2d0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2e2cc:	00bfde84 	movi	r2,-134
  }
}
   2e2d0:	e037883a 	mov	sp,fp
   2e2d4:	df000017 	ldw	fp,0(sp)
   2e2d8:	dec00104 	addi	sp,sp,4
   2e2dc:	f800283a 	ret

0002e2e0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2e2e0:	defffe04 	addi	sp,sp,-8
   2e2e4:	df000115 	stw	fp,4(sp)
   2e2e8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e2ec:	e03fff15 	stw	zero,-4(fp)
   2e2f0:	00000506 	br	2e308 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2e2f4:	e0bfff17 	ldw	r2,-4(fp)
   2e2f8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e2fc:	e0bfff17 	ldw	r2,-4(fp)
   2e300:	10800804 	addi	r2,r2,32
   2e304:	e0bfff15 	stw	r2,-4(fp)
   2e308:	e0bfff17 	ldw	r2,-4(fp)
   2e30c:	10820030 	cmpltui	r2,r2,2048
   2e310:	103ff81e 	bne	r2,zero,2e2f4 <__alt_data_end+0xfffee2f4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2e314:	0001883a 	nop
   2e318:	e037883a 	mov	sp,fp
   2e31c:	df000017 	ldw	fp,0(sp)
   2e320:	dec00104 	addi	sp,sp,4
   2e324:	f800283a 	ret

0002e328 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e328:	defffe04 	addi	sp,sp,-8
   2e32c:	dfc00115 	stw	ra,4(sp)
   2e330:	df000015 	stw	fp,0(sp)
   2e334:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e338:	d0a00b17 	ldw	r2,-32724(gp)
   2e33c:	10000326 	beq	r2,zero,2e34c <alt_get_errno+0x24>
   2e340:	d0a00b17 	ldw	r2,-32724(gp)
   2e344:	103ee83a 	callr	r2
   2e348:	00000106 	br	2e350 <alt_get_errno+0x28>
   2e34c:	d0a6d104 	addi	r2,gp,-25788
}
   2e350:	e037883a 	mov	sp,fp
   2e354:	dfc00117 	ldw	ra,4(sp)
   2e358:	df000017 	ldw	fp,0(sp)
   2e35c:	dec00204 	addi	sp,sp,8
   2e360:	f800283a 	ret

0002e364 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2e364:	defffa04 	addi	sp,sp,-24
   2e368:	dfc00515 	stw	ra,20(sp)
   2e36c:	df000415 	stw	fp,16(sp)
   2e370:	df000404 	addi	fp,sp,16
   2e374:	e13ffe15 	stw	r4,-8(fp)
   2e378:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2e37c:	e0bffe17 	ldw	r2,-8(fp)
   2e380:	10000326 	beq	r2,zero,2e390 <alt_dev_llist_insert+0x2c>
   2e384:	e0bffe17 	ldw	r2,-8(fp)
   2e388:	10800217 	ldw	r2,8(r2)
   2e38c:	1000061e 	bne	r2,zero,2e3a8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2e390:	002e3280 	call	2e328 <alt_get_errno>
   2e394:	1007883a 	mov	r3,r2
   2e398:	00800584 	movi	r2,22
   2e39c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2e3a0:	00bffa84 	movi	r2,-22
   2e3a4:	00001306 	br	2e3f4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2e3a8:	e0bffe17 	ldw	r2,-8(fp)
   2e3ac:	e0ffff17 	ldw	r3,-4(fp)
   2e3b0:	e0fffc15 	stw	r3,-16(fp)
   2e3b4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e3b8:	e0bffd17 	ldw	r2,-12(fp)
   2e3bc:	e0fffc17 	ldw	r3,-16(fp)
   2e3c0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e3c4:	e0bffc17 	ldw	r2,-16(fp)
   2e3c8:	10c00017 	ldw	r3,0(r2)
   2e3cc:	e0bffd17 	ldw	r2,-12(fp)
   2e3d0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e3d4:	e0bffc17 	ldw	r2,-16(fp)
   2e3d8:	10800017 	ldw	r2,0(r2)
   2e3dc:	e0fffd17 	ldw	r3,-12(fp)
   2e3e0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e3e4:	e0bffc17 	ldw	r2,-16(fp)
   2e3e8:	e0fffd17 	ldw	r3,-12(fp)
   2e3ec:	10c00015 	stw	r3,0(r2)

  return 0;  
   2e3f0:	0005883a 	mov	r2,zero
}
   2e3f4:	e037883a 	mov	sp,fp
   2e3f8:	dfc00117 	ldw	ra,4(sp)
   2e3fc:	df000017 	ldw	fp,0(sp)
   2e400:	dec00204 	addi	sp,sp,8
   2e404:	f800283a 	ret

0002e408 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2e408:	defffd04 	addi	sp,sp,-12
   2e40c:	dfc00215 	stw	ra,8(sp)
   2e410:	df000115 	stw	fp,4(sp)
   2e414:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e418:	008000f4 	movhi	r2,3
   2e41c:	10bcfc04 	addi	r2,r2,-3088
   2e420:	e0bfff15 	stw	r2,-4(fp)
   2e424:	00000606 	br	2e440 <_do_ctors+0x38>
        (*ctor) (); 
   2e428:	e0bfff17 	ldw	r2,-4(fp)
   2e42c:	10800017 	ldw	r2,0(r2)
   2e430:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e434:	e0bfff17 	ldw	r2,-4(fp)
   2e438:	10bfff04 	addi	r2,r2,-4
   2e43c:	e0bfff15 	stw	r2,-4(fp)
   2e440:	e0ffff17 	ldw	r3,-4(fp)
   2e444:	008000f4 	movhi	r2,3
   2e448:	10bcfd04 	addi	r2,r2,-3084
   2e44c:	18bff62e 	bgeu	r3,r2,2e428 <__alt_data_end+0xfffee428>
        (*ctor) (); 
}
   2e450:	0001883a 	nop
   2e454:	e037883a 	mov	sp,fp
   2e458:	dfc00117 	ldw	ra,4(sp)
   2e45c:	df000017 	ldw	fp,0(sp)
   2e460:	dec00204 	addi	sp,sp,8
   2e464:	f800283a 	ret

0002e468 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2e468:	defffd04 	addi	sp,sp,-12
   2e46c:	dfc00215 	stw	ra,8(sp)
   2e470:	df000115 	stw	fp,4(sp)
   2e474:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e478:	008000f4 	movhi	r2,3
   2e47c:	10bcfc04 	addi	r2,r2,-3088
   2e480:	e0bfff15 	stw	r2,-4(fp)
   2e484:	00000606 	br	2e4a0 <_do_dtors+0x38>
        (*dtor) (); 
   2e488:	e0bfff17 	ldw	r2,-4(fp)
   2e48c:	10800017 	ldw	r2,0(r2)
   2e490:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e494:	e0bfff17 	ldw	r2,-4(fp)
   2e498:	10bfff04 	addi	r2,r2,-4
   2e49c:	e0bfff15 	stw	r2,-4(fp)
   2e4a0:	e0ffff17 	ldw	r3,-4(fp)
   2e4a4:	008000f4 	movhi	r2,3
   2e4a8:	10bcfd04 	addi	r2,r2,-3084
   2e4ac:	18bff62e 	bgeu	r3,r2,2e488 <__alt_data_end+0xfffee488>
        (*dtor) (); 
}
   2e4b0:	0001883a 	nop
   2e4b4:	e037883a 	mov	sp,fp
   2e4b8:	dfc00117 	ldw	ra,4(sp)
   2e4bc:	df000017 	ldw	fp,0(sp)
   2e4c0:	dec00204 	addi	sp,sp,8
   2e4c4:	f800283a 	ret

0002e4c8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2e4c8:	defffe04 	addi	sp,sp,-8
   2e4cc:	dfc00115 	stw	ra,4(sp)
   2e4d0:	df000015 	stw	fp,0(sp)
   2e4d4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2e4d8:	01440004 	movi	r5,4096
   2e4dc:	0009883a 	mov	r4,zero
   2e4e0:	002ef340 	call	2ef34 <alt_icache_flush>
#endif
}
   2e4e4:	0001883a 	nop
   2e4e8:	e037883a 	mov	sp,fp
   2e4ec:	dfc00117 	ldw	ra,4(sp)
   2e4f0:	df000017 	ldw	fp,0(sp)
   2e4f4:	dec00204 	addi	sp,sp,8
   2e4f8:	f800283a 	ret

0002e4fc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e4fc:	defff904 	addi	sp,sp,-28
   2e500:	dfc00615 	stw	ra,24(sp)
   2e504:	df000515 	stw	fp,20(sp)
   2e508:	df000504 	addi	fp,sp,20
   2e50c:	e13ffc15 	stw	r4,-16(fp)
   2e510:	e17ffd15 	stw	r5,-12(fp)
   2e514:	e1bffe15 	stw	r6,-8(fp)
   2e518:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2e51c:	e0800217 	ldw	r2,8(fp)
   2e520:	d8800015 	stw	r2,0(sp)
   2e524:	e1ffff17 	ldw	r7,-4(fp)
   2e528:	e1bffe17 	ldw	r6,-8(fp)
   2e52c:	e17ffd17 	ldw	r5,-12(fp)
   2e530:	e13ffc17 	ldw	r4,-16(fp)
   2e534:	002e6ac0 	call	2e6ac <alt_iic_isr_register>
}  
   2e538:	e037883a 	mov	sp,fp
   2e53c:	dfc00117 	ldw	ra,4(sp)
   2e540:	df000017 	ldw	fp,0(sp)
   2e544:	dec00204 	addi	sp,sp,8
   2e548:	f800283a 	ret

0002e54c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2e54c:	defff904 	addi	sp,sp,-28
   2e550:	df000615 	stw	fp,24(sp)
   2e554:	df000604 	addi	fp,sp,24
   2e558:	e13ffe15 	stw	r4,-8(fp)
   2e55c:	e17fff15 	stw	r5,-4(fp)
   2e560:	e0bfff17 	ldw	r2,-4(fp)
   2e564:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e568:	0005303a 	rdctl	r2,status
   2e56c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e570:	e0fffb17 	ldw	r3,-20(fp)
   2e574:	00bfff84 	movi	r2,-2
   2e578:	1884703a 	and	r2,r3,r2
   2e57c:	1001703a 	wrctl	status,r2
  
  return context;
   2e580:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e584:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2e588:	00c00044 	movi	r3,1
   2e58c:	e0bffa17 	ldw	r2,-24(fp)
   2e590:	1884983a 	sll	r2,r3,r2
   2e594:	1007883a 	mov	r3,r2
   2e598:	d0a6d517 	ldw	r2,-25772(gp)
   2e59c:	1884b03a 	or	r2,r3,r2
   2e5a0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e5a4:	d0a6d517 	ldw	r2,-25772(gp)
   2e5a8:	100170fa 	wrctl	ienable,r2
   2e5ac:	e0bffc17 	ldw	r2,-16(fp)
   2e5b0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e5b4:	e0bffd17 	ldw	r2,-12(fp)
   2e5b8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e5bc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2e5c0:	0001883a 	nop
}
   2e5c4:	e037883a 	mov	sp,fp
   2e5c8:	df000017 	ldw	fp,0(sp)
   2e5cc:	dec00104 	addi	sp,sp,4
   2e5d0:	f800283a 	ret

0002e5d4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2e5d4:	defff904 	addi	sp,sp,-28
   2e5d8:	df000615 	stw	fp,24(sp)
   2e5dc:	df000604 	addi	fp,sp,24
   2e5e0:	e13ffe15 	stw	r4,-8(fp)
   2e5e4:	e17fff15 	stw	r5,-4(fp)
   2e5e8:	e0bfff17 	ldw	r2,-4(fp)
   2e5ec:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e5f0:	0005303a 	rdctl	r2,status
   2e5f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e5f8:	e0fffb17 	ldw	r3,-20(fp)
   2e5fc:	00bfff84 	movi	r2,-2
   2e600:	1884703a 	and	r2,r3,r2
   2e604:	1001703a 	wrctl	status,r2
  
  return context;
   2e608:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e60c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2e610:	00c00044 	movi	r3,1
   2e614:	e0bffa17 	ldw	r2,-24(fp)
   2e618:	1884983a 	sll	r2,r3,r2
   2e61c:	0084303a 	nor	r2,zero,r2
   2e620:	1007883a 	mov	r3,r2
   2e624:	d0a6d517 	ldw	r2,-25772(gp)
   2e628:	1884703a 	and	r2,r3,r2
   2e62c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e630:	d0a6d517 	ldw	r2,-25772(gp)
   2e634:	100170fa 	wrctl	ienable,r2
   2e638:	e0bffc17 	ldw	r2,-16(fp)
   2e63c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e640:	e0bffd17 	ldw	r2,-12(fp)
   2e644:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e648:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2e64c:	0001883a 	nop
}
   2e650:	e037883a 	mov	sp,fp
   2e654:	df000017 	ldw	fp,0(sp)
   2e658:	dec00104 	addi	sp,sp,4
   2e65c:	f800283a 	ret

0002e660 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2e660:	defffc04 	addi	sp,sp,-16
   2e664:	df000315 	stw	fp,12(sp)
   2e668:	df000304 	addi	fp,sp,12
   2e66c:	e13ffe15 	stw	r4,-8(fp)
   2e670:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2e674:	000530fa 	rdctl	r2,ienable
   2e678:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2e67c:	00c00044 	movi	r3,1
   2e680:	e0bfff17 	ldw	r2,-4(fp)
   2e684:	1884983a 	sll	r2,r3,r2
   2e688:	1007883a 	mov	r3,r2
   2e68c:	e0bffd17 	ldw	r2,-12(fp)
   2e690:	1884703a 	and	r2,r3,r2
   2e694:	1004c03a 	cmpne	r2,r2,zero
   2e698:	10803fcc 	andi	r2,r2,255
}
   2e69c:	e037883a 	mov	sp,fp
   2e6a0:	df000017 	ldw	fp,0(sp)
   2e6a4:	dec00104 	addi	sp,sp,4
   2e6a8:	f800283a 	ret

0002e6ac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e6ac:	defff504 	addi	sp,sp,-44
   2e6b0:	dfc00a15 	stw	ra,40(sp)
   2e6b4:	df000915 	stw	fp,36(sp)
   2e6b8:	df000904 	addi	fp,sp,36
   2e6bc:	e13ffc15 	stw	r4,-16(fp)
   2e6c0:	e17ffd15 	stw	r5,-12(fp)
   2e6c4:	e1bffe15 	stw	r6,-8(fp)
   2e6c8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2e6cc:	00bffa84 	movi	r2,-22
   2e6d0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2e6d4:	e0bffd17 	ldw	r2,-12(fp)
   2e6d8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2e6dc:	e0bff817 	ldw	r2,-32(fp)
   2e6e0:	10800808 	cmpgei	r2,r2,32
   2e6e4:	1000271e 	bne	r2,zero,2e784 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e6e8:	0005303a 	rdctl	r2,status
   2e6ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e6f0:	e0fffb17 	ldw	r3,-20(fp)
   2e6f4:	00bfff84 	movi	r2,-2
   2e6f8:	1884703a 	and	r2,r3,r2
   2e6fc:	1001703a 	wrctl	status,r2
  
  return context;
   2e700:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2e704:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2e708:	008000f4 	movhi	r2,3
   2e70c:	108b6a04 	addi	r2,r2,11688
   2e710:	e0fff817 	ldw	r3,-32(fp)
   2e714:	180690fa 	slli	r3,r3,3
   2e718:	10c5883a 	add	r2,r2,r3
   2e71c:	e0fffe17 	ldw	r3,-8(fp)
   2e720:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2e724:	008000f4 	movhi	r2,3
   2e728:	108b6a04 	addi	r2,r2,11688
   2e72c:	e0fff817 	ldw	r3,-32(fp)
   2e730:	180690fa 	slli	r3,r3,3
   2e734:	10c5883a 	add	r2,r2,r3
   2e738:	10800104 	addi	r2,r2,4
   2e73c:	e0ffff17 	ldw	r3,-4(fp)
   2e740:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2e744:	e0bffe17 	ldw	r2,-8(fp)
   2e748:	10000526 	beq	r2,zero,2e760 <alt_iic_isr_register+0xb4>
   2e74c:	e0bff817 	ldw	r2,-32(fp)
   2e750:	100b883a 	mov	r5,r2
   2e754:	e13ffc17 	ldw	r4,-16(fp)
   2e758:	002e54c0 	call	2e54c <alt_ic_irq_enable>
   2e75c:	00000406 	br	2e770 <alt_iic_isr_register+0xc4>
   2e760:	e0bff817 	ldw	r2,-32(fp)
   2e764:	100b883a 	mov	r5,r2
   2e768:	e13ffc17 	ldw	r4,-16(fp)
   2e76c:	002e5d40 	call	2e5d4 <alt_ic_irq_disable>
   2e770:	e0bff715 	stw	r2,-36(fp)
   2e774:	e0bffa17 	ldw	r2,-24(fp)
   2e778:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e77c:	e0bff917 	ldw	r2,-28(fp)
   2e780:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2e784:	e0bff717 	ldw	r2,-36(fp)
}
   2e788:	e037883a 	mov	sp,fp
   2e78c:	dfc00117 	ldw	ra,4(sp)
   2e790:	df000017 	ldw	fp,0(sp)
   2e794:	dec00204 	addi	sp,sp,8
   2e798:	f800283a 	ret

0002e79c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2e79c:	defff904 	addi	sp,sp,-28
   2e7a0:	dfc00615 	stw	ra,24(sp)
   2e7a4:	df000515 	stw	fp,20(sp)
   2e7a8:	df000504 	addi	fp,sp,20
   2e7ac:	e13ffc15 	stw	r4,-16(fp)
   2e7b0:	e17ffd15 	stw	r5,-12(fp)
   2e7b4:	e1bffe15 	stw	r6,-8(fp)
   2e7b8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2e7bc:	e1bfff17 	ldw	r6,-4(fp)
   2e7c0:	e17ffe17 	ldw	r5,-8(fp)
   2e7c4:	e13ffd17 	ldw	r4,-12(fp)
   2e7c8:	002e9dc0 	call	2e9dc <open>
   2e7cc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2e7d0:	e0bffb17 	ldw	r2,-20(fp)
   2e7d4:	10001c16 	blt	r2,zero,2e848 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2e7d8:	008000f4 	movhi	r2,3
   2e7dc:	10800f04 	addi	r2,r2,60
   2e7e0:	e0fffb17 	ldw	r3,-20(fp)
   2e7e4:	18c00324 	muli	r3,r3,12
   2e7e8:	10c5883a 	add	r2,r2,r3
   2e7ec:	10c00017 	ldw	r3,0(r2)
   2e7f0:	e0bffc17 	ldw	r2,-16(fp)
   2e7f4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2e7f8:	008000f4 	movhi	r2,3
   2e7fc:	10800f04 	addi	r2,r2,60
   2e800:	e0fffb17 	ldw	r3,-20(fp)
   2e804:	18c00324 	muli	r3,r3,12
   2e808:	10c5883a 	add	r2,r2,r3
   2e80c:	10800104 	addi	r2,r2,4
   2e810:	10c00017 	ldw	r3,0(r2)
   2e814:	e0bffc17 	ldw	r2,-16(fp)
   2e818:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2e81c:	008000f4 	movhi	r2,3
   2e820:	10800f04 	addi	r2,r2,60
   2e824:	e0fffb17 	ldw	r3,-20(fp)
   2e828:	18c00324 	muli	r3,r3,12
   2e82c:	10c5883a 	add	r2,r2,r3
   2e830:	10800204 	addi	r2,r2,8
   2e834:	10c00017 	ldw	r3,0(r2)
   2e838:	e0bffc17 	ldw	r2,-16(fp)
   2e83c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2e840:	e13ffb17 	ldw	r4,-20(fp)
   2e844:	002d5800 	call	2d580 <alt_release_fd>
  }
} 
   2e848:	0001883a 	nop
   2e84c:	e037883a 	mov	sp,fp
   2e850:	dfc00117 	ldw	ra,4(sp)
   2e854:	df000017 	ldw	fp,0(sp)
   2e858:	dec00204 	addi	sp,sp,8
   2e85c:	f800283a 	ret

0002e860 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2e860:	defffb04 	addi	sp,sp,-20
   2e864:	dfc00415 	stw	ra,16(sp)
   2e868:	df000315 	stw	fp,12(sp)
   2e86c:	df000304 	addi	fp,sp,12
   2e870:	e13ffd15 	stw	r4,-12(fp)
   2e874:	e17ffe15 	stw	r5,-8(fp)
   2e878:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2e87c:	01c07fc4 	movi	r7,511
   2e880:	01800044 	movi	r6,1
   2e884:	e17ffd17 	ldw	r5,-12(fp)
   2e888:	010000f4 	movhi	r4,3
   2e88c:	21001204 	addi	r4,r4,72
   2e890:	002e79c0 	call	2e79c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2e894:	01c07fc4 	movi	r7,511
   2e898:	000d883a 	mov	r6,zero
   2e89c:	e17ffe17 	ldw	r5,-8(fp)
   2e8a0:	010000f4 	movhi	r4,3
   2e8a4:	21000f04 	addi	r4,r4,60
   2e8a8:	002e79c0 	call	2e79c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2e8ac:	01c07fc4 	movi	r7,511
   2e8b0:	01800044 	movi	r6,1
   2e8b4:	e17fff17 	ldw	r5,-4(fp)
   2e8b8:	010000f4 	movhi	r4,3
   2e8bc:	21001504 	addi	r4,r4,84
   2e8c0:	002e79c0 	call	2e79c <alt_open_fd>
}  
   2e8c4:	0001883a 	nop
   2e8c8:	e037883a 	mov	sp,fp
   2e8cc:	dfc00117 	ldw	ra,4(sp)
   2e8d0:	df000017 	ldw	fp,0(sp)
   2e8d4:	dec00204 	addi	sp,sp,8
   2e8d8:	f800283a 	ret

0002e8dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e8dc:	defffe04 	addi	sp,sp,-8
   2e8e0:	dfc00115 	stw	ra,4(sp)
   2e8e4:	df000015 	stw	fp,0(sp)
   2e8e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e8ec:	d0a00b17 	ldw	r2,-32724(gp)
   2e8f0:	10000326 	beq	r2,zero,2e900 <alt_get_errno+0x24>
   2e8f4:	d0a00b17 	ldw	r2,-32724(gp)
   2e8f8:	103ee83a 	callr	r2
   2e8fc:	00000106 	br	2e904 <alt_get_errno+0x28>
   2e900:	d0a6d104 	addi	r2,gp,-25788
}
   2e904:	e037883a 	mov	sp,fp
   2e908:	dfc00117 	ldw	ra,4(sp)
   2e90c:	df000017 	ldw	fp,0(sp)
   2e910:	dec00204 	addi	sp,sp,8
   2e914:	f800283a 	ret

0002e918 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2e918:	defffd04 	addi	sp,sp,-12
   2e91c:	df000215 	stw	fp,8(sp)
   2e920:	df000204 	addi	fp,sp,8
   2e924:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2e928:	e0bfff17 	ldw	r2,-4(fp)
   2e92c:	10800217 	ldw	r2,8(r2)
   2e930:	10d00034 	orhi	r3,r2,16384
   2e934:	e0bfff17 	ldw	r2,-4(fp)
   2e938:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e93c:	e03ffe15 	stw	zero,-8(fp)
   2e940:	00001d06 	br	2e9b8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e944:	008000f4 	movhi	r2,3
   2e948:	10800f04 	addi	r2,r2,60
   2e94c:	e0fffe17 	ldw	r3,-8(fp)
   2e950:	18c00324 	muli	r3,r3,12
   2e954:	10c5883a 	add	r2,r2,r3
   2e958:	10c00017 	ldw	r3,0(r2)
   2e95c:	e0bfff17 	ldw	r2,-4(fp)
   2e960:	10800017 	ldw	r2,0(r2)
   2e964:	1880111e 	bne	r3,r2,2e9ac <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e968:	008000f4 	movhi	r2,3
   2e96c:	10800f04 	addi	r2,r2,60
   2e970:	e0fffe17 	ldw	r3,-8(fp)
   2e974:	18c00324 	muli	r3,r3,12
   2e978:	10c5883a 	add	r2,r2,r3
   2e97c:	10800204 	addi	r2,r2,8
   2e980:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e984:	1000090e 	bge	r2,zero,2e9ac <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2e988:	e0bffe17 	ldw	r2,-8(fp)
   2e98c:	10c00324 	muli	r3,r2,12
   2e990:	008000f4 	movhi	r2,3
   2e994:	10800f04 	addi	r2,r2,60
   2e998:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e99c:	e0bfff17 	ldw	r2,-4(fp)
   2e9a0:	18800226 	beq	r3,r2,2e9ac <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2e9a4:	00bffcc4 	movi	r2,-13
   2e9a8:	00000806 	br	2e9cc <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e9ac:	e0bffe17 	ldw	r2,-8(fp)
   2e9b0:	10800044 	addi	r2,r2,1
   2e9b4:	e0bffe15 	stw	r2,-8(fp)
   2e9b8:	d0a00a17 	ldw	r2,-32728(gp)
   2e9bc:	1007883a 	mov	r3,r2
   2e9c0:	e0bffe17 	ldw	r2,-8(fp)
   2e9c4:	18bfdf2e 	bgeu	r3,r2,2e944 <__alt_data_end+0xfffee944>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2e9c8:	0005883a 	mov	r2,zero
}
   2e9cc:	e037883a 	mov	sp,fp
   2e9d0:	df000017 	ldw	fp,0(sp)
   2e9d4:	dec00104 	addi	sp,sp,4
   2e9d8:	f800283a 	ret

0002e9dc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2e9dc:	defff604 	addi	sp,sp,-40
   2e9e0:	dfc00915 	stw	ra,36(sp)
   2e9e4:	df000815 	stw	fp,32(sp)
   2e9e8:	df000804 	addi	fp,sp,32
   2e9ec:	e13ffd15 	stw	r4,-12(fp)
   2e9f0:	e17ffe15 	stw	r5,-8(fp)
   2e9f4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2e9f8:	00bfffc4 	movi	r2,-1
   2e9fc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2ea00:	00bffb44 	movi	r2,-19
   2ea04:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2ea08:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2ea0c:	d1600804 	addi	r5,gp,-32736
   2ea10:	e13ffd17 	ldw	r4,-12(fp)
   2ea14:	002ecf80 	call	2ecf8 <alt_find_dev>
   2ea18:	e0bff815 	stw	r2,-32(fp)
   2ea1c:	e0bff817 	ldw	r2,-32(fp)
   2ea20:	1000051e 	bne	r2,zero,2ea38 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2ea24:	e13ffd17 	ldw	r4,-12(fp)
   2ea28:	002ed880 	call	2ed88 <alt_find_file>
   2ea2c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2ea30:	00800044 	movi	r2,1
   2ea34:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2ea38:	e0bff817 	ldw	r2,-32(fp)
   2ea3c:	10002926 	beq	r2,zero,2eae4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2ea40:	e13ff817 	ldw	r4,-32(fp)
   2ea44:	002ee900 	call	2ee90 <alt_get_fd>
   2ea48:	e0bff915 	stw	r2,-28(fp)
   2ea4c:	e0bff917 	ldw	r2,-28(fp)
   2ea50:	1000030e 	bge	r2,zero,2ea60 <open+0x84>
    {
      status = index;
   2ea54:	e0bff917 	ldw	r2,-28(fp)
   2ea58:	e0bffa15 	stw	r2,-24(fp)
   2ea5c:	00002306 	br	2eaec <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2ea60:	e0bff917 	ldw	r2,-28(fp)
   2ea64:	10c00324 	muli	r3,r2,12
   2ea68:	008000f4 	movhi	r2,3
   2ea6c:	10800f04 	addi	r2,r2,60
   2ea70:	1885883a 	add	r2,r3,r2
   2ea74:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2ea78:	e0fffe17 	ldw	r3,-8(fp)
   2ea7c:	00900034 	movhi	r2,16384
   2ea80:	10bfffc4 	addi	r2,r2,-1
   2ea84:	1886703a 	and	r3,r3,r2
   2ea88:	e0bffc17 	ldw	r2,-16(fp)
   2ea8c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2ea90:	e0bffb17 	ldw	r2,-20(fp)
   2ea94:	1000051e 	bne	r2,zero,2eaac <open+0xd0>
   2ea98:	e13ffc17 	ldw	r4,-16(fp)
   2ea9c:	002e9180 	call	2e918 <alt_file_locked>
   2eaa0:	e0bffa15 	stw	r2,-24(fp)
   2eaa4:	e0bffa17 	ldw	r2,-24(fp)
   2eaa8:	10001016 	blt	r2,zero,2eaec <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2eaac:	e0bff817 	ldw	r2,-32(fp)
   2eab0:	10800317 	ldw	r2,12(r2)
   2eab4:	10000826 	beq	r2,zero,2ead8 <open+0xfc>
   2eab8:	e0bff817 	ldw	r2,-32(fp)
   2eabc:	10800317 	ldw	r2,12(r2)
   2eac0:	e1ffff17 	ldw	r7,-4(fp)
   2eac4:	e1bffe17 	ldw	r6,-8(fp)
   2eac8:	e17ffd17 	ldw	r5,-12(fp)
   2eacc:	e13ffc17 	ldw	r4,-16(fp)
   2ead0:	103ee83a 	callr	r2
   2ead4:	00000106 	br	2eadc <open+0x100>
   2ead8:	0005883a 	mov	r2,zero
   2eadc:	e0bffa15 	stw	r2,-24(fp)
   2eae0:	00000206 	br	2eaec <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2eae4:	00bffb44 	movi	r2,-19
   2eae8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2eaec:	e0bffa17 	ldw	r2,-24(fp)
   2eaf0:	1000090e 	bge	r2,zero,2eb18 <open+0x13c>
  {
    alt_release_fd (index);  
   2eaf4:	e13ff917 	ldw	r4,-28(fp)
   2eaf8:	002d5800 	call	2d580 <alt_release_fd>
    ALT_ERRNO = -status;
   2eafc:	002e8dc0 	call	2e8dc <alt_get_errno>
   2eb00:	1007883a 	mov	r3,r2
   2eb04:	e0bffa17 	ldw	r2,-24(fp)
   2eb08:	0085c83a 	sub	r2,zero,r2
   2eb0c:	18800015 	stw	r2,0(r3)
    return -1;
   2eb10:	00bfffc4 	movi	r2,-1
   2eb14:	00000106 	br	2eb1c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2eb18:	e0bff917 	ldw	r2,-28(fp)
}
   2eb1c:	e037883a 	mov	sp,fp
   2eb20:	dfc00117 	ldw	ra,4(sp)
   2eb24:	df000017 	ldw	fp,0(sp)
   2eb28:	dec00204 	addi	sp,sp,8
   2eb2c:	f800283a 	ret

0002eb30 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2eb30:	defffa04 	addi	sp,sp,-24
   2eb34:	df000515 	stw	fp,20(sp)
   2eb38:	df000504 	addi	fp,sp,20
   2eb3c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eb40:	0005303a 	rdctl	r2,status
   2eb44:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eb48:	e0fffc17 	ldw	r3,-16(fp)
   2eb4c:	00bfff84 	movi	r2,-2
   2eb50:	1884703a 	and	r2,r3,r2
   2eb54:	1001703a 	wrctl	status,r2
  
  return context;
   2eb58:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2eb5c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2eb60:	e0bfff17 	ldw	r2,-4(fp)
   2eb64:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2eb68:	e0bffd17 	ldw	r2,-12(fp)
   2eb6c:	10800017 	ldw	r2,0(r2)
   2eb70:	e0fffd17 	ldw	r3,-12(fp)
   2eb74:	18c00117 	ldw	r3,4(r3)
   2eb78:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2eb7c:	e0bffd17 	ldw	r2,-12(fp)
   2eb80:	10800117 	ldw	r2,4(r2)
   2eb84:	e0fffd17 	ldw	r3,-12(fp)
   2eb88:	18c00017 	ldw	r3,0(r3)
   2eb8c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2eb90:	e0bffd17 	ldw	r2,-12(fp)
   2eb94:	e0fffd17 	ldw	r3,-12(fp)
   2eb98:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2eb9c:	e0bffd17 	ldw	r2,-12(fp)
   2eba0:	e0fffd17 	ldw	r3,-12(fp)
   2eba4:	10c00015 	stw	r3,0(r2)
   2eba8:	e0bffb17 	ldw	r2,-20(fp)
   2ebac:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ebb0:	e0bffe17 	ldw	r2,-8(fp)
   2ebb4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2ebb8:	0001883a 	nop
   2ebbc:	e037883a 	mov	sp,fp
   2ebc0:	df000017 	ldw	fp,0(sp)
   2ebc4:	dec00104 	addi	sp,sp,4
   2ebc8:	f800283a 	ret

0002ebcc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2ebcc:	defffb04 	addi	sp,sp,-20
   2ebd0:	dfc00415 	stw	ra,16(sp)
   2ebd4:	df000315 	stw	fp,12(sp)
   2ebd8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2ebdc:	d0a00e17 	ldw	r2,-32712(gp)
   2ebe0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2ebe4:	d0a6d717 	ldw	r2,-25764(gp)
   2ebe8:	10800044 	addi	r2,r2,1
   2ebec:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ebf0:	00002e06 	br	2ecac <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2ebf4:	e0bffd17 	ldw	r2,-12(fp)
   2ebf8:	10800017 	ldw	r2,0(r2)
   2ebfc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2ec00:	e0bffd17 	ldw	r2,-12(fp)
   2ec04:	10800403 	ldbu	r2,16(r2)
   2ec08:	10803fcc 	andi	r2,r2,255
   2ec0c:	10000426 	beq	r2,zero,2ec20 <alt_tick+0x54>
   2ec10:	d0a6d717 	ldw	r2,-25764(gp)
   2ec14:	1000021e 	bne	r2,zero,2ec20 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2ec18:	e0bffd17 	ldw	r2,-12(fp)
   2ec1c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2ec20:	e0bffd17 	ldw	r2,-12(fp)
   2ec24:	10800217 	ldw	r2,8(r2)
   2ec28:	d0e6d717 	ldw	r3,-25764(gp)
   2ec2c:	18801d36 	bltu	r3,r2,2eca4 <alt_tick+0xd8>
   2ec30:	e0bffd17 	ldw	r2,-12(fp)
   2ec34:	10800403 	ldbu	r2,16(r2)
   2ec38:	10803fcc 	andi	r2,r2,255
   2ec3c:	1000191e 	bne	r2,zero,2eca4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2ec40:	e0bffd17 	ldw	r2,-12(fp)
   2ec44:	10800317 	ldw	r2,12(r2)
   2ec48:	e0fffd17 	ldw	r3,-12(fp)
   2ec4c:	18c00517 	ldw	r3,20(r3)
   2ec50:	1809883a 	mov	r4,r3
   2ec54:	103ee83a 	callr	r2
   2ec58:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2ec5c:	e0bfff17 	ldw	r2,-4(fp)
   2ec60:	1000031e 	bne	r2,zero,2ec70 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2ec64:	e13ffd17 	ldw	r4,-12(fp)
   2ec68:	002eb300 	call	2eb30 <alt_alarm_stop>
   2ec6c:	00000d06 	br	2eca4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2ec70:	e0bffd17 	ldw	r2,-12(fp)
   2ec74:	10c00217 	ldw	r3,8(r2)
   2ec78:	e0bfff17 	ldw	r2,-4(fp)
   2ec7c:	1887883a 	add	r3,r3,r2
   2ec80:	e0bffd17 	ldw	r2,-12(fp)
   2ec84:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2ec88:	e0bffd17 	ldw	r2,-12(fp)
   2ec8c:	10c00217 	ldw	r3,8(r2)
   2ec90:	d0a6d717 	ldw	r2,-25764(gp)
   2ec94:	1880032e 	bgeu	r3,r2,2eca4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2ec98:	e0bffd17 	ldw	r2,-12(fp)
   2ec9c:	00c00044 	movi	r3,1
   2eca0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2eca4:	e0bffe17 	ldw	r2,-8(fp)
   2eca8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ecac:	e0fffd17 	ldw	r3,-12(fp)
   2ecb0:	d0a00e04 	addi	r2,gp,-32712
   2ecb4:	18bfcf1e 	bne	r3,r2,2ebf4 <__alt_data_end+0xfffeebf4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2ecb8:	0001883a 	nop
}
   2ecbc:	0001883a 	nop
   2ecc0:	e037883a 	mov	sp,fp
   2ecc4:	dfc00117 	ldw	ra,4(sp)
   2ecc8:	df000017 	ldw	fp,0(sp)
   2eccc:	dec00204 	addi	sp,sp,8
   2ecd0:	f800283a 	ret

0002ecd4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2ecd4:	deffff04 	addi	sp,sp,-4
   2ecd8:	df000015 	stw	fp,0(sp)
   2ecdc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2ece0:	000170fa 	wrctl	ienable,zero
}
   2ece4:	0001883a 	nop
   2ece8:	e037883a 	mov	sp,fp
   2ecec:	df000017 	ldw	fp,0(sp)
   2ecf0:	dec00104 	addi	sp,sp,4
   2ecf4:	f800283a 	ret

0002ecf8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2ecf8:	defffa04 	addi	sp,sp,-24
   2ecfc:	dfc00515 	stw	ra,20(sp)
   2ed00:	df000415 	stw	fp,16(sp)
   2ed04:	df000404 	addi	fp,sp,16
   2ed08:	e13ffe15 	stw	r4,-8(fp)
   2ed0c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2ed10:	e0bfff17 	ldw	r2,-4(fp)
   2ed14:	10800017 	ldw	r2,0(r2)
   2ed18:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2ed1c:	e13ffe17 	ldw	r4,-8(fp)
   2ed20:	00207dc0 	call	207dc <strlen>
   2ed24:	10800044 	addi	r2,r2,1
   2ed28:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ed2c:	00000d06 	br	2ed64 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2ed30:	e0bffc17 	ldw	r2,-16(fp)
   2ed34:	10800217 	ldw	r2,8(r2)
   2ed38:	e0fffd17 	ldw	r3,-12(fp)
   2ed3c:	180d883a 	mov	r6,r3
   2ed40:	e17ffe17 	ldw	r5,-8(fp)
   2ed44:	1009883a 	mov	r4,r2
   2ed48:	002f0ac0 	call	2f0ac <memcmp>
   2ed4c:	1000021e 	bne	r2,zero,2ed58 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2ed50:	e0bffc17 	ldw	r2,-16(fp)
   2ed54:	00000706 	br	2ed74 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2ed58:	e0bffc17 	ldw	r2,-16(fp)
   2ed5c:	10800017 	ldw	r2,0(r2)
   2ed60:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ed64:	e0fffc17 	ldw	r3,-16(fp)
   2ed68:	e0bfff17 	ldw	r2,-4(fp)
   2ed6c:	18bff01e 	bne	r3,r2,2ed30 <__alt_data_end+0xfffeed30>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2ed70:	0005883a 	mov	r2,zero
}
   2ed74:	e037883a 	mov	sp,fp
   2ed78:	dfc00117 	ldw	ra,4(sp)
   2ed7c:	df000017 	ldw	fp,0(sp)
   2ed80:	dec00204 	addi	sp,sp,8
   2ed84:	f800283a 	ret

0002ed88 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2ed88:	defffb04 	addi	sp,sp,-20
   2ed8c:	dfc00415 	stw	ra,16(sp)
   2ed90:	df000315 	stw	fp,12(sp)
   2ed94:	df000304 	addi	fp,sp,12
   2ed98:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2ed9c:	d0a00617 	ldw	r2,-32744(gp)
   2eda0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2eda4:	00003106 	br	2ee6c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2eda8:	e0bffd17 	ldw	r2,-12(fp)
   2edac:	10800217 	ldw	r2,8(r2)
   2edb0:	1009883a 	mov	r4,r2
   2edb4:	00207dc0 	call	207dc <strlen>
   2edb8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2edbc:	e0bffd17 	ldw	r2,-12(fp)
   2edc0:	10c00217 	ldw	r3,8(r2)
   2edc4:	e0bffe17 	ldw	r2,-8(fp)
   2edc8:	10bfffc4 	addi	r2,r2,-1
   2edcc:	1885883a 	add	r2,r3,r2
   2edd0:	10800003 	ldbu	r2,0(r2)
   2edd4:	10803fcc 	andi	r2,r2,255
   2edd8:	1080201c 	xori	r2,r2,128
   2eddc:	10bfe004 	addi	r2,r2,-128
   2ede0:	10800bd8 	cmpnei	r2,r2,47
   2ede4:	1000031e 	bne	r2,zero,2edf4 <alt_find_file+0x6c>
    {
      len -= 1;
   2ede8:	e0bffe17 	ldw	r2,-8(fp)
   2edec:	10bfffc4 	addi	r2,r2,-1
   2edf0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2edf4:	e0bffe17 	ldw	r2,-8(fp)
   2edf8:	e0ffff17 	ldw	r3,-4(fp)
   2edfc:	1885883a 	add	r2,r3,r2
   2ee00:	10800003 	ldbu	r2,0(r2)
   2ee04:	10803fcc 	andi	r2,r2,255
   2ee08:	1080201c 	xori	r2,r2,128
   2ee0c:	10bfe004 	addi	r2,r2,-128
   2ee10:	10800be0 	cmpeqi	r2,r2,47
   2ee14:	1000081e 	bne	r2,zero,2ee38 <alt_find_file+0xb0>
   2ee18:	e0bffe17 	ldw	r2,-8(fp)
   2ee1c:	e0ffff17 	ldw	r3,-4(fp)
   2ee20:	1885883a 	add	r2,r3,r2
   2ee24:	10800003 	ldbu	r2,0(r2)
   2ee28:	10803fcc 	andi	r2,r2,255
   2ee2c:	1080201c 	xori	r2,r2,128
   2ee30:	10bfe004 	addi	r2,r2,-128
   2ee34:	10000a1e 	bne	r2,zero,2ee60 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2ee38:	e0bffd17 	ldw	r2,-12(fp)
   2ee3c:	10800217 	ldw	r2,8(r2)
   2ee40:	e0fffe17 	ldw	r3,-8(fp)
   2ee44:	180d883a 	mov	r6,r3
   2ee48:	e17fff17 	ldw	r5,-4(fp)
   2ee4c:	1009883a 	mov	r4,r2
   2ee50:	002f0ac0 	call	2f0ac <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ee54:	1000021e 	bne	r2,zero,2ee60 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2ee58:	e0bffd17 	ldw	r2,-12(fp)
   2ee5c:	00000706 	br	2ee7c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2ee60:	e0bffd17 	ldw	r2,-12(fp)
   2ee64:	10800017 	ldw	r2,0(r2)
   2ee68:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2ee6c:	e0fffd17 	ldw	r3,-12(fp)
   2ee70:	d0a00604 	addi	r2,gp,-32744
   2ee74:	18bfcc1e 	bne	r3,r2,2eda8 <__alt_data_end+0xfffeeda8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2ee78:	0005883a 	mov	r2,zero
}
   2ee7c:	e037883a 	mov	sp,fp
   2ee80:	dfc00117 	ldw	ra,4(sp)
   2ee84:	df000017 	ldw	fp,0(sp)
   2ee88:	dec00204 	addi	sp,sp,8
   2ee8c:	f800283a 	ret

0002ee90 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2ee90:	defffc04 	addi	sp,sp,-16
   2ee94:	df000315 	stw	fp,12(sp)
   2ee98:	df000304 	addi	fp,sp,12
   2ee9c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2eea0:	00bffa04 	movi	r2,-24
   2eea4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2eea8:	e03ffd15 	stw	zero,-12(fp)
   2eeac:	00001906 	br	2ef14 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2eeb0:	008000f4 	movhi	r2,3
   2eeb4:	10800f04 	addi	r2,r2,60
   2eeb8:	e0fffd17 	ldw	r3,-12(fp)
   2eebc:	18c00324 	muli	r3,r3,12
   2eec0:	10c5883a 	add	r2,r2,r3
   2eec4:	10800017 	ldw	r2,0(r2)
   2eec8:	10000f1e 	bne	r2,zero,2ef08 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2eecc:	008000f4 	movhi	r2,3
   2eed0:	10800f04 	addi	r2,r2,60
   2eed4:	e0fffd17 	ldw	r3,-12(fp)
   2eed8:	18c00324 	muli	r3,r3,12
   2eedc:	10c5883a 	add	r2,r2,r3
   2eee0:	e0ffff17 	ldw	r3,-4(fp)
   2eee4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2eee8:	d0e00a17 	ldw	r3,-32728(gp)
   2eeec:	e0bffd17 	ldw	r2,-12(fp)
   2eef0:	1880020e 	bge	r3,r2,2eefc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2eef4:	e0bffd17 	ldw	r2,-12(fp)
   2eef8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2eefc:	e0bffd17 	ldw	r2,-12(fp)
   2ef00:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2ef04:	00000606 	br	2ef20 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2ef08:	e0bffd17 	ldw	r2,-12(fp)
   2ef0c:	10800044 	addi	r2,r2,1
   2ef10:	e0bffd15 	stw	r2,-12(fp)
   2ef14:	e0bffd17 	ldw	r2,-12(fp)
   2ef18:	10800810 	cmplti	r2,r2,32
   2ef1c:	103fe41e 	bne	r2,zero,2eeb0 <__alt_data_end+0xfffeeeb0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2ef20:	e0bffe17 	ldw	r2,-8(fp)
}
   2ef24:	e037883a 	mov	sp,fp
   2ef28:	df000017 	ldw	fp,0(sp)
   2ef2c:	dec00104 	addi	sp,sp,4
   2ef30:	f800283a 	ret

0002ef34 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2ef34:	defffb04 	addi	sp,sp,-20
   2ef38:	df000415 	stw	fp,16(sp)
   2ef3c:	df000404 	addi	fp,sp,16
   2ef40:	e13ffe15 	stw	r4,-8(fp)
   2ef44:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2ef48:	e0bfff17 	ldw	r2,-4(fp)
   2ef4c:	10840070 	cmpltui	r2,r2,4097
   2ef50:	1000021e 	bne	r2,zero,2ef5c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2ef54:	00840004 	movi	r2,4096
   2ef58:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2ef5c:	e0fffe17 	ldw	r3,-8(fp)
   2ef60:	e0bfff17 	ldw	r2,-4(fp)
   2ef64:	1885883a 	add	r2,r3,r2
   2ef68:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2ef6c:	e0bffe17 	ldw	r2,-8(fp)
   2ef70:	e0bffc15 	stw	r2,-16(fp)
   2ef74:	00000506 	br	2ef8c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2ef78:	e0bffc17 	ldw	r2,-16(fp)
   2ef7c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2ef80:	e0bffc17 	ldw	r2,-16(fp)
   2ef84:	10800804 	addi	r2,r2,32
   2ef88:	e0bffc15 	stw	r2,-16(fp)
   2ef8c:	e0fffc17 	ldw	r3,-16(fp)
   2ef90:	e0bffd17 	ldw	r2,-12(fp)
   2ef94:	18bff836 	bltu	r3,r2,2ef78 <__alt_data_end+0xfffeef78>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2ef98:	e0bffe17 	ldw	r2,-8(fp)
   2ef9c:	108007cc 	andi	r2,r2,31
   2efa0:	10000226 	beq	r2,zero,2efac <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2efa4:	e0bffc17 	ldw	r2,-16(fp)
   2efa8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2efac:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2efb0:	0001883a 	nop
   2efb4:	e037883a 	mov	sp,fp
   2efb8:	df000017 	ldw	fp,0(sp)
   2efbc:	dec00104 	addi	sp,sp,4
   2efc0:	f800283a 	ret

0002efc4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2efc4:	defffe04 	addi	sp,sp,-8
   2efc8:	df000115 	stw	fp,4(sp)
   2efcc:	df000104 	addi	fp,sp,4
   2efd0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2efd4:	e0bfff17 	ldw	r2,-4(fp)
   2efd8:	10bffe84 	addi	r2,r2,-6
   2efdc:	10c00428 	cmpgeui	r3,r2,16
   2efe0:	18001a1e 	bne	r3,zero,2f04c <alt_exception_cause_generated_bad_addr+0x88>
   2efe4:	100690ba 	slli	r3,r2,2
   2efe8:	008000f4 	movhi	r2,3
   2efec:	10bbff04 	addi	r2,r2,-4100
   2eff0:	1885883a 	add	r2,r3,r2
   2eff4:	10800017 	ldw	r2,0(r2)
   2eff8:	1000683a 	jmp	r2
   2effc:	0002f03c 	xorhi	zero,zero,3008
   2f000:	0002f03c 	xorhi	zero,zero,3008
   2f004:	0002f04c 	andi	zero,zero,3009
   2f008:	0002f04c 	andi	zero,zero,3009
   2f00c:	0002f04c 	andi	zero,zero,3009
   2f010:	0002f03c 	xorhi	zero,zero,3008
   2f014:	0002f044 	movi	zero,3009
   2f018:	0002f04c 	andi	zero,zero,3009
   2f01c:	0002f03c 	xorhi	zero,zero,3008
   2f020:	0002f03c 	xorhi	zero,zero,3008
   2f024:	0002f04c 	andi	zero,zero,3009
   2f028:	0002f03c 	xorhi	zero,zero,3008
   2f02c:	0002f044 	movi	zero,3009
   2f030:	0002f04c 	andi	zero,zero,3009
   2f034:	0002f04c 	andi	zero,zero,3009
   2f038:	0002f03c 	xorhi	zero,zero,3008
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2f03c:	00800044 	movi	r2,1
   2f040:	00000306 	br	2f050 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2f044:	0005883a 	mov	r2,zero
   2f048:	00000106 	br	2f050 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2f04c:	0005883a 	mov	r2,zero
  }
}
   2f050:	e037883a 	mov	sp,fp
   2f054:	df000017 	ldw	fp,0(sp)
   2f058:	dec00104 	addi	sp,sp,4
   2f05c:	f800283a 	ret

0002f060 <atexit>:
   2f060:	200b883a 	mov	r5,r4
   2f064:	000f883a 	mov	r7,zero
   2f068:	000d883a 	mov	r6,zero
   2f06c:	0009883a 	mov	r4,zero
   2f070:	002f1281 	jmpi	2f128 <__register_exitproc>

0002f074 <exit>:
   2f074:	defffe04 	addi	sp,sp,-8
   2f078:	000b883a 	mov	r5,zero
   2f07c:	dc000015 	stw	r16,0(sp)
   2f080:	dfc00115 	stw	ra,4(sp)
   2f084:	2021883a 	mov	r16,r4
   2f088:	002f2400 	call	2f240 <__call_exitprocs>
   2f08c:	008000f4 	movhi	r2,3
   2f090:	10848704 	addi	r2,r2,4636
   2f094:	11000017 	ldw	r4,0(r2)
   2f098:	20800f17 	ldw	r2,60(r4)
   2f09c:	10000126 	beq	r2,zero,2f0a4 <exit+0x30>
   2f0a0:	103ee83a 	callr	r2
   2f0a4:	8009883a 	mov	r4,r16
   2f0a8:	002f3c00 	call	2f3c0 <_exit>

0002f0ac <memcmp>:
   2f0ac:	01c000c4 	movi	r7,3
   2f0b0:	3980192e 	bgeu	r7,r6,2f118 <memcmp+0x6c>
   2f0b4:	2144b03a 	or	r2,r4,r5
   2f0b8:	11c4703a 	and	r2,r2,r7
   2f0bc:	10000f26 	beq	r2,zero,2f0fc <memcmp+0x50>
   2f0c0:	20800003 	ldbu	r2,0(r4)
   2f0c4:	28c00003 	ldbu	r3,0(r5)
   2f0c8:	10c0151e 	bne	r2,r3,2f120 <memcmp+0x74>
   2f0cc:	31bfff84 	addi	r6,r6,-2
   2f0d0:	01ffffc4 	movi	r7,-1
   2f0d4:	00000406 	br	2f0e8 <memcmp+0x3c>
   2f0d8:	20800003 	ldbu	r2,0(r4)
   2f0dc:	28c00003 	ldbu	r3,0(r5)
   2f0e0:	31bfffc4 	addi	r6,r6,-1
   2f0e4:	10c00e1e 	bne	r2,r3,2f120 <memcmp+0x74>
   2f0e8:	21000044 	addi	r4,r4,1
   2f0ec:	29400044 	addi	r5,r5,1
   2f0f0:	31fff91e 	bne	r6,r7,2f0d8 <__alt_data_end+0xfffef0d8>
   2f0f4:	0005883a 	mov	r2,zero
   2f0f8:	f800283a 	ret
   2f0fc:	20c00017 	ldw	r3,0(r4)
   2f100:	28800017 	ldw	r2,0(r5)
   2f104:	18bfee1e 	bne	r3,r2,2f0c0 <__alt_data_end+0xfffef0c0>
   2f108:	31bfff04 	addi	r6,r6,-4
   2f10c:	21000104 	addi	r4,r4,4
   2f110:	29400104 	addi	r5,r5,4
   2f114:	39bff936 	bltu	r7,r6,2f0fc <__alt_data_end+0xfffef0fc>
   2f118:	303fe91e 	bne	r6,zero,2f0c0 <__alt_data_end+0xfffef0c0>
   2f11c:	003ff506 	br	2f0f4 <__alt_data_end+0xfffef0f4>
   2f120:	10c5c83a 	sub	r2,r2,r3
   2f124:	f800283a 	ret

0002f128 <__register_exitproc>:
   2f128:	defffa04 	addi	sp,sp,-24
   2f12c:	dc000315 	stw	r16,12(sp)
   2f130:	040000f4 	movhi	r16,3
   2f134:	84048704 	addi	r16,r16,4636
   2f138:	80c00017 	ldw	r3,0(r16)
   2f13c:	dc400415 	stw	r17,16(sp)
   2f140:	dfc00515 	stw	ra,20(sp)
   2f144:	18805217 	ldw	r2,328(r3)
   2f148:	2023883a 	mov	r17,r4
   2f14c:	10003726 	beq	r2,zero,2f22c <__register_exitproc+0x104>
   2f150:	10c00117 	ldw	r3,4(r2)
   2f154:	010007c4 	movi	r4,31
   2f158:	20c00e16 	blt	r4,r3,2f194 <__register_exitproc+0x6c>
   2f15c:	1a000044 	addi	r8,r3,1
   2f160:	8800221e 	bne	r17,zero,2f1ec <__register_exitproc+0xc4>
   2f164:	18c00084 	addi	r3,r3,2
   2f168:	18c7883a 	add	r3,r3,r3
   2f16c:	18c7883a 	add	r3,r3,r3
   2f170:	12000115 	stw	r8,4(r2)
   2f174:	10c7883a 	add	r3,r2,r3
   2f178:	19400015 	stw	r5,0(r3)
   2f17c:	0005883a 	mov	r2,zero
   2f180:	dfc00517 	ldw	ra,20(sp)
   2f184:	dc400417 	ldw	r17,16(sp)
   2f188:	dc000317 	ldw	r16,12(sp)
   2f18c:	dec00604 	addi	sp,sp,24
   2f190:	f800283a 	ret
   2f194:	00800034 	movhi	r2,0
   2f198:	10800004 	addi	r2,r2,0
   2f19c:	10002626 	beq	r2,zero,2f238 <__register_exitproc+0x110>
   2f1a0:	01006404 	movi	r4,400
   2f1a4:	d9400015 	stw	r5,0(sp)
   2f1a8:	d9800115 	stw	r6,4(sp)
   2f1ac:	d9c00215 	stw	r7,8(sp)
   2f1b0:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2f1b4:	d9400017 	ldw	r5,0(sp)
   2f1b8:	d9800117 	ldw	r6,4(sp)
   2f1bc:	d9c00217 	ldw	r7,8(sp)
   2f1c0:	10001d26 	beq	r2,zero,2f238 <__register_exitproc+0x110>
   2f1c4:	81000017 	ldw	r4,0(r16)
   2f1c8:	10000115 	stw	zero,4(r2)
   2f1cc:	02000044 	movi	r8,1
   2f1d0:	22405217 	ldw	r9,328(r4)
   2f1d4:	0007883a 	mov	r3,zero
   2f1d8:	12400015 	stw	r9,0(r2)
   2f1dc:	20805215 	stw	r2,328(r4)
   2f1e0:	10006215 	stw	zero,392(r2)
   2f1e4:	10006315 	stw	zero,396(r2)
   2f1e8:	883fde26 	beq	r17,zero,2f164 <__alt_data_end+0xfffef164>
   2f1ec:	18c9883a 	add	r4,r3,r3
   2f1f0:	2109883a 	add	r4,r4,r4
   2f1f4:	1109883a 	add	r4,r2,r4
   2f1f8:	21802215 	stw	r6,136(r4)
   2f1fc:	01800044 	movi	r6,1
   2f200:	12406217 	ldw	r9,392(r2)
   2f204:	30cc983a 	sll	r6,r6,r3
   2f208:	4992b03a 	or	r9,r9,r6
   2f20c:	12406215 	stw	r9,392(r2)
   2f210:	21c04215 	stw	r7,264(r4)
   2f214:	01000084 	movi	r4,2
   2f218:	893fd21e 	bne	r17,r4,2f164 <__alt_data_end+0xfffef164>
   2f21c:	11006317 	ldw	r4,396(r2)
   2f220:	218cb03a 	or	r6,r4,r6
   2f224:	11806315 	stw	r6,396(r2)
   2f228:	003fce06 	br	2f164 <__alt_data_end+0xfffef164>
   2f22c:	18805304 	addi	r2,r3,332
   2f230:	18805215 	stw	r2,328(r3)
   2f234:	003fc606 	br	2f150 <__alt_data_end+0xfffef150>
   2f238:	00bfffc4 	movi	r2,-1
   2f23c:	003fd006 	br	2f180 <__alt_data_end+0xfffef180>

0002f240 <__call_exitprocs>:
   2f240:	defff504 	addi	sp,sp,-44
   2f244:	df000915 	stw	fp,36(sp)
   2f248:	dd400615 	stw	r21,24(sp)
   2f24c:	dc800315 	stw	r18,12(sp)
   2f250:	dfc00a15 	stw	ra,40(sp)
   2f254:	ddc00815 	stw	r23,32(sp)
   2f258:	dd800715 	stw	r22,28(sp)
   2f25c:	dd000515 	stw	r20,20(sp)
   2f260:	dcc00415 	stw	r19,16(sp)
   2f264:	dc400215 	stw	r17,8(sp)
   2f268:	dc000115 	stw	r16,4(sp)
   2f26c:	d9000015 	stw	r4,0(sp)
   2f270:	2839883a 	mov	fp,r5
   2f274:	04800044 	movi	r18,1
   2f278:	057fffc4 	movi	r21,-1
   2f27c:	008000f4 	movhi	r2,3
   2f280:	10848704 	addi	r2,r2,4636
   2f284:	12000017 	ldw	r8,0(r2)
   2f288:	45005217 	ldw	r20,328(r8)
   2f28c:	44c05204 	addi	r19,r8,328
   2f290:	a0001c26 	beq	r20,zero,2f304 <__call_exitprocs+0xc4>
   2f294:	a0800117 	ldw	r2,4(r20)
   2f298:	15ffffc4 	addi	r23,r2,-1
   2f29c:	b8000d16 	blt	r23,zero,2f2d4 <__call_exitprocs+0x94>
   2f2a0:	14000044 	addi	r16,r2,1
   2f2a4:	8421883a 	add	r16,r16,r16
   2f2a8:	8421883a 	add	r16,r16,r16
   2f2ac:	84402004 	addi	r17,r16,128
   2f2b0:	a463883a 	add	r17,r20,r17
   2f2b4:	a421883a 	add	r16,r20,r16
   2f2b8:	e0001e26 	beq	fp,zero,2f334 <__call_exitprocs+0xf4>
   2f2bc:	80804017 	ldw	r2,256(r16)
   2f2c0:	e0801c26 	beq	fp,r2,2f334 <__call_exitprocs+0xf4>
   2f2c4:	bdffffc4 	addi	r23,r23,-1
   2f2c8:	843fff04 	addi	r16,r16,-4
   2f2cc:	8c7fff04 	addi	r17,r17,-4
   2f2d0:	bd7ff91e 	bne	r23,r21,2f2b8 <__alt_data_end+0xfffef2b8>
   2f2d4:	00800034 	movhi	r2,0
   2f2d8:	10800004 	addi	r2,r2,0
   2f2dc:	10000926 	beq	r2,zero,2f304 <__call_exitprocs+0xc4>
   2f2e0:	a0800117 	ldw	r2,4(r20)
   2f2e4:	1000301e 	bne	r2,zero,2f3a8 <__call_exitprocs+0x168>
   2f2e8:	a0800017 	ldw	r2,0(r20)
   2f2ec:	10003226 	beq	r2,zero,2f3b8 <__call_exitprocs+0x178>
   2f2f0:	a009883a 	mov	r4,r20
   2f2f4:	98800015 	stw	r2,0(r19)
   2f2f8:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2f2fc:	9d000017 	ldw	r20,0(r19)
   2f300:	a03fe41e 	bne	r20,zero,2f294 <__alt_data_end+0xfffef294>
   2f304:	dfc00a17 	ldw	ra,40(sp)
   2f308:	df000917 	ldw	fp,36(sp)
   2f30c:	ddc00817 	ldw	r23,32(sp)
   2f310:	dd800717 	ldw	r22,28(sp)
   2f314:	dd400617 	ldw	r21,24(sp)
   2f318:	dd000517 	ldw	r20,20(sp)
   2f31c:	dcc00417 	ldw	r19,16(sp)
   2f320:	dc800317 	ldw	r18,12(sp)
   2f324:	dc400217 	ldw	r17,8(sp)
   2f328:	dc000117 	ldw	r16,4(sp)
   2f32c:	dec00b04 	addi	sp,sp,44
   2f330:	f800283a 	ret
   2f334:	a0800117 	ldw	r2,4(r20)
   2f338:	80c00017 	ldw	r3,0(r16)
   2f33c:	10bfffc4 	addi	r2,r2,-1
   2f340:	15c01426 	beq	r2,r23,2f394 <__call_exitprocs+0x154>
   2f344:	80000015 	stw	zero,0(r16)
   2f348:	183fde26 	beq	r3,zero,2f2c4 <__alt_data_end+0xfffef2c4>
   2f34c:	95c8983a 	sll	r4,r18,r23
   2f350:	a0806217 	ldw	r2,392(r20)
   2f354:	a5800117 	ldw	r22,4(r20)
   2f358:	2084703a 	and	r2,r4,r2
   2f35c:	10000b26 	beq	r2,zero,2f38c <__call_exitprocs+0x14c>
   2f360:	a0806317 	ldw	r2,396(r20)
   2f364:	2088703a 	and	r4,r4,r2
   2f368:	20000c1e 	bne	r4,zero,2f39c <__call_exitprocs+0x15c>
   2f36c:	89400017 	ldw	r5,0(r17)
   2f370:	d9000017 	ldw	r4,0(sp)
   2f374:	183ee83a 	callr	r3
   2f378:	a0800117 	ldw	r2,4(r20)
   2f37c:	15bfbf1e 	bne	r2,r22,2f27c <__alt_data_end+0xfffef27c>
   2f380:	98800017 	ldw	r2,0(r19)
   2f384:	153fcf26 	beq	r2,r20,2f2c4 <__alt_data_end+0xfffef2c4>
   2f388:	003fbc06 	br	2f27c <__alt_data_end+0xfffef27c>
   2f38c:	183ee83a 	callr	r3
   2f390:	003ff906 	br	2f378 <__alt_data_end+0xfffef378>
   2f394:	a5c00115 	stw	r23,4(r20)
   2f398:	003feb06 	br	2f348 <__alt_data_end+0xfffef348>
   2f39c:	89000017 	ldw	r4,0(r17)
   2f3a0:	183ee83a 	callr	r3
   2f3a4:	003ff406 	br	2f378 <__alt_data_end+0xfffef378>
   2f3a8:	a0800017 	ldw	r2,0(r20)
   2f3ac:	a027883a 	mov	r19,r20
   2f3b0:	1029883a 	mov	r20,r2
   2f3b4:	003fb606 	br	2f290 <__alt_data_end+0xfffef290>
   2f3b8:	0005883a 	mov	r2,zero
   2f3bc:	003ffb06 	br	2f3ac <__alt_data_end+0xfffef3ac>

0002f3c0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2f3c0:	defffd04 	addi	sp,sp,-12
   2f3c4:	df000215 	stw	fp,8(sp)
   2f3c8:	df000204 	addi	fp,sp,8
   2f3cc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2f3d0:	0001883a 	nop
   2f3d4:	e0bfff17 	ldw	r2,-4(fp)
   2f3d8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2f3dc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2f3e0:	10000226 	beq	r2,zero,2f3ec <_exit+0x2c>
    ALT_SIM_FAIL();
   2f3e4:	002af070 	cmpltui	zero,zero,43969
   2f3e8:	00000106 	br	2f3f0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2f3ec:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2f3f0:	003fff06 	br	2f3f0 <__alt_data_end+0xfffef3f0>
